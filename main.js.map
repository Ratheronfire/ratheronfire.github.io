{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/admin-debug/admin-debug.component.css","webpack:///./src/app/components/admin-debug/admin-debug.component.html","webpack:///./src/app/components/admin-debug/admin-debug.component.ts","webpack:///./src/app/components/buildings/buildings/buildings.component.css","webpack:///./src/app/components/buildings/buildings/buildings.component.html","webpack:///./src/app/components/buildings/buildings/buildings.component.ts","webpack:///./src/app/components/clicker-main/clicker-main.component.css","webpack:///./src/app/components/clicker-main/clicker-main.component.html","webpack:///./src/app/components/clicker-main/clicker-main.component.ts","webpack:///./src/app/components/enemy/enemy.component.css","webpack:///./src/app/components/enemy/enemy.component.html","webpack:///./src/app/components/enemy/enemy.component.ts","webpack:///./src/app/components/fighter-detail/fighter-detail.component.css","webpack:///./src/app/components/fighter-detail/fighter-detail.component.html","webpack:///./src/app/components/fighter-detail/fighter-detail.component.ts","webpack:///./src/app/components/fighter/fighter.component.css","webpack:///./src/app/components/fighter/fighter.component.html","webpack:///./src/app/components/fighter/fighter.component.ts","webpack:///./src/app/components/map/map.component.css","webpack:///./src/app/components/map/map.component.html","webpack:///./src/app/components/map/map.component.ts","webpack:///./src/app/components/messages/messages.component.css","webpack:///./src/app/components/messages/messages.component.html","webpack:///./src/app/components/messages/messages.component.ts","webpack:///./src/app/components/save-dialog/save-dialog.component.css","webpack:///./src/app/components/save-dialog/save-dialog.component.html","webpack:///./src/app/components/save-dialog/save-dialog.component.ts","webpack:///./src/app/components/settings/settings.component.css","webpack:///./src/app/components/settings/settings.component.html","webpack:///./src/app/components/settings/settings.component.ts","webpack:///./src/app/components/store/store.component.css","webpack:///./src/app/components/store/store.component.html","webpack:///./src/app/components/store/store.component.ts","webpack:///./src/app/components/tile-detail/tile-detail.component.css","webpack:///./src/app/components/tile-detail/tile-detail.component.html","webpack:///./src/app/components/tile-detail/tile-detail.component.ts","webpack:///./src/app/components/upgrades/upgrades.component.css","webpack:///./src/app/components/upgrades/upgrades.component.html","webpack:///./src/app/components/upgrades/upgrades.component.ts","webpack:///./src/app/components/workers/workers.component.css","webpack:///./src/app/components/workers/workers.component.html","webpack:///./src/app/components/workers/workers.component.ts","webpack:///./src/app/directives/crop/crop.directive.ts","webpack:///./src/app/directives/map/map.directive.ts","webpack:///./src/app/directives/no-scroll/no-scroll.directive.ts","webpack:///./src/app/directives/snap/snap.directive.ts","webpack:///./src/app/globals.ts","webpack:///./src/app/material-import/material-import.module.ts","webpack:///./src/app/objects/entity.ts","webpack:///./src/app/objects/message.ts","webpack:///./src/app/objects/resource.ts","webpack:///./src/app/objects/resourceData.ts","webpack:///./src/app/objects/tile.ts","webpack:///./src/app/objects/upgrade.ts","webpack:///./src/app/objects/vector.ts","webpack:///./src/app/objects/worker.ts","webpack:///./src/app/pipe/enumtoarraypipe.ts","webpack:///./src/app/pipe/pipe.module.ts","webpack:///./src/app/services/admin/admin.service.ts","webpack:///./src/app/services/buildings/buildings.service.ts","webpack:///./src/app/services/clicker-main/clicker-main.service.ts","webpack:///./src/app/services/enemy/enemy.service.ts","webpack:///./src/app/services/fighter/fighter.service.ts","webpack:///./src/app/services/map/map.service.ts","webpack:///./src/app/services/messages/messages.service.ts","webpack:///./src/app/services/resources/resources.service.ts","webpack:///./src/app/services/settings/settings.service.ts","webpack:///./src/app/services/store/store.service.ts","webpack:///./src/app/services/tick/tick.service.ts","webpack:///./src/app/services/tooltip/tooltip.service.ts","webpack:///./src/app/services/upgrades/upgrades.service.ts","webpack:///./src/app/services/workers/workers.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"/* AppComponent's private CSS styles */\\r\\nh1 {\\r\\n  font-size: 1.2em;\\r\\n  color: #999;\\r\\n  margin-bottom: 0;\\r\\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\\r\\n}\\r\\nh2 {\\r\\n  font-size: 2em;\\r\\n  margin-top: 0;\\r\\n  padding-top: 0;\\r\\n}\\r\\nnav a {\\r\\n  padding: 5px 10px;\\r\\n  text-decoration: none;\\r\\n  margin-top: 10px;\\r\\n  display: inline-block;\\r\\n  background-color: #eee;\\r\\n  border-radius: 4px;\\r\\n}\\r\\nnav a:visited, a:link {\\r\\n  color: #607d8b;\\r\\n}\\r\\nnav a:hover {\\r\\n  color: #039be5;\\r\\n  background-color: #cfd8dc;\\r\\n}\\r\\nnav a.active {\\r\\n  color: #039be5;\\r\\n}\\r\\n.resource-list {\\r\\n  float: left;\\r\\n}\\r\\n.tab-group {\\r\\n  margin-left: 15px;\\r\\n}\\r\\n.game-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n.game-is-mobile .game-toolbar {\\r\\n  position: fixed;\\r\\n  /* Make sure the toolbar will stay on top of the content as it scrolls past. */\\r\\n  z-index: 2;\\r\\n}\\r\\nh1.game-app-name {\\r\\n  margin-left: 8px;\\r\\n}\\r\\n.game-sidenav-container {\\r\\n  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\\r\\n     causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */\\r\\n  flex: 1;\\r\\n}\\r\\n.game-sidenav-container mat-sidenav {\\r\\n  width: 500px;\\r\\n}\\r\\n.game-is-mobile .game-sidenav-container mat-sidenav {\\r\\n  width: 100%;\\r\\n}\\r\\n.game-is-mobile .game-sidenav-container {\\r\\n  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\\r\\n     `<body>` to be our scrolling element for mobile layouts. */\\r\\n  flex: 1 0 auto;\\r\\n}\\r\\n.sidenav-buttons {\\r\\n  position: absolute;\\r\\n  right: 0;\\r\\n}\\r\\n.toolbar-button-text {\\r\\n  display: inline-block;\\r\\n}\\r\\n.main-pane {\\r\\n  height: 100%;\\r\\n}\\r\\napp-clicker-main {\\r\\n  overflow-y: scroll;\\r\\n  max-height: 100%;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"game-container\\\" [class.game-is-mobile]=\\\"mobileQuery.matches\\\" [@.disabled]=\\\"disableAnimations\\\">\\n  <mat-toolbar color=\\\"primary\\\" class=\\\"game-toolbar\\\">\\n    <h1 class=\\\"game-app-name\\\">Age of Clicking</h1>\\n    <div class=\\\"sidenav-buttons\\\">\\n      <button mat-flat-button (click)=\\\"hideResourceList = !hideResourceList\\\">\\n        <mat-icon>map</mat-icon><p class=\\\"toolbar-button-text\\\" *ngIf=\\\"!mobileQuery.matches\\\">Expand Map</p>\\n      </button>\\n      <button mat-flat-button (click)=\\\"snav.toggle()\\\" [matBadge]=\\\"affordableUpgradeCount\\\" [matBadgeHidden]=\\\"affordableUpgradeCount <= 0\\\" matBadgePosition=\\\"before\\\" matBadgeColor=\\\"accent\\\">\\n        <mat-icon>menu</mat-icon><p class=\\\"toolbar-button-text\\\" *ngIf=\\\"!mobileQuery.matches\\\">Menu</p>\\n      </button>\\n    </div>\\n  </mat-toolbar>\\n\\n  <mat-sidenav-container class=\\\"game-sidenav-container\\\" [style.marginTop.px]=\\\"mobileQuery.matches ? 56 : 0\\\">\\n    <mat-sidenav #snav [mode]=\\\"mobileQuery.matches ? 'over' : 'side'\\\" [opened]=\\\"!mobileQuery.matches\\\" [fixedInViewport]=\\\"mobileQuery.matches\\\" position=\\\"end\\\"\\n      fixedTopGap=\\\"56\\\">\\n      <mat-nav-list>\\n        <mat-tab-group class=\\\"tab-group\\\" dynamicHeight>\\n          <mat-tab label=\\\"Workers\\\">\\n            <app-workers></app-workers>\\n          </mat-tab>\\n          <mat-tab label=\\\"Store\\\">\\n            <app-store></app-store>\\n          </mat-tab>\\n          <mat-tab label=\\\"Upgrades{{affordableUpgradeCount > 0 ? ' (' + affordableUpgradeCount + ')' : ''}}\\\">\\n            <app-upgrades></app-upgrades>\\n          </mat-tab>\\n          <mat-tab label=\\\"Log\\\">\\n            <app-messages></app-messages>\\n          </mat-tab>\\n          <mat-tab label=\\\"Settings\\\">\\n            <app-settings></app-settings>\\n            <app-admin-debug *ngIf=\\\"debugMode\\\"></app-admin-debug>\\n          </mat-tab>\\n        </mat-tab-group>\\n      </mat-nav-list>\\n    </mat-sidenav>\\n    <mat-sidenav-content>\\n      <div class=\\\"main-pane\\\">\\n        <app-clicker-main class=\\\"resource-list\\\" [style.display]=\\\"hideResourceList? 'none': ''\\\"></app-clicker-main>\\n        <app-map class=\\\"map\\\" [style.display]=\\\"mobileQuery.matches && !hideResourceList? 'none': ''\\\"></app-map>\\n      </div>\\n    </mat-sidenav-content>\\n  </mat-sidenav-container>\\n</div>\\n\"","import { Component, ChangeDetectorRef } from '@angular/core';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\n\r\nimport { UpgradesService } from './services/upgrades/upgrades.service';\r\nimport { EnemyService } from './services/enemy/enemy.service';\r\nimport { SettingsService } from './services/settings/settings.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  sidebarWidth = 600;\r\n  hideResourceList = false;\r\n  mobileQuery: MediaQueryList;\r\n\r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(protected upgradesService: UpgradesService,\r\n              protected enemyService: EnemyService,\r\n              protected settingsService: SettingsService,\r\n              protected changeDetectorRef: ChangeDetectorRef,\r\n              protected media: MediaMatcher) {\r\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n\r\n    window.onbeforeunload = event => {\r\n      const message = 'Are you sure you want to leave this page? Unsaved data will be lost.';\r\n      if (!event) {\r\n        event = window.event;\r\n      }\r\n\r\n      event.returnValue = message;\r\n\r\n      return message;\r\n    };\r\n  }\r\n\r\n  get affordableUpgradeCount(): number {\r\n    const upgrades = this.upgradesService.getUpgrades(false, true, true);\r\n    const affordableUpgrades = upgrades.filter(upgrade => upgrade.canAfford());\r\n\r\n    return affordableUpgrades.length;\r\n  }\r\n\r\n  get disableAnimations(): boolean {\r\n    return this.settingsService.disableAnimations;\r\n  }\r\n\r\n  get debugMode(): boolean {\r\n    return this.settingsService.debugMode;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ZoomableCanvasComponent } from '@durwella/zoomable-canvas';\r\n\r\nimport { MaterialImportModule } from './material-import/material-import.module';\r\nimport { PipeModule } from 'src/app/pipe/pipe.module';\r\nimport { ColorPickerModule } from 'ngx-color-picker';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ClickerMainComponent } from './components/clicker-main/clicker-main.component';\r\nimport { MessagesComponent } from './components/messages/messages.component';\r\nimport { WorkersComponent } from './components/workers/workers.component';\r\nimport { StoreComponent } from './components/store/store.component';\r\nimport { UpgradesComponent } from './components/upgrades/upgrades.component';\r\nimport { MapComponent } from './components/map/map.component';\r\nimport { SettingsComponent } from './components/settings/settings.component';\r\nimport { AdminDebugComponent } from './components/admin-debug/admin-debug.component';\r\nimport { SaveDialogComponent } from './components/save-dialog/save-dialog.component';\r\nimport { CropDirective } from './directives/crop/crop.directive';\r\nimport { MapDirective } from './directives/map/map.directive';\r\nimport { NoScrollDirective } from './directives/no-scroll/no-scroll.directive';\r\nimport { EnemyComponent } from './components/enemy/enemy.component';\r\nimport { FighterComponent } from './components/fighter/fighter.component';\r\nimport { BuildingsComponent } from './components/buildings/buildings/buildings.component';\r\nimport { TileDetailComponent } from './components/tile-detail/tile-detail.component';\r\nimport { FighterDetailComponent } from './components/fighter-detail/fighter-detail.component';\r\nimport { SnapDirective } from './directives/snap/snap.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ZoomableCanvasComponent,\r\n    ClickerMainComponent,\r\n    MessagesComponent,\r\n    WorkersComponent,\r\n    StoreComponent,\r\n    UpgradesComponent,\r\n    SettingsComponent,\r\n    AdminDebugComponent,\r\n    MapComponent,\r\n    CropDirective,\r\n    SaveDialogComponent,\r\n    MapDirective,\r\n    NoScrollDirective,\r\n    EnemyComponent,\r\n    FighterComponent,\r\n    BuildingsComponent,\r\n    TileDetailComponent,\r\n    FighterDetailComponent,\r\n    SnapDirective\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MaterialImportModule,\r\n    PipeModule,\r\n    ColorPickerModule\r\n  ],\r\n  entryComponents: [\r\n    SaveDialogComponent\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<h2>Debug</h2>\\n\\n<mat-checkbox class=\\\"filterAccessible\\\" checked=\\\"true\\\" [(ngModel)]=\\\"adminService.filterAccessible\\\">Hide Inaccessible\\n  Upgrades</mat-checkbox>\\n<br />\\n\\n<mat-divider></mat-divider>\\n<br />\\n\\n<div>\\n  <mat-select placeholder=\\\"Resource\\\" style=\\\"width: 200px\\\" [(ngModel)]=\\\"selectedResource\\\">\\n    <mat-option *ngFor=\\\"let resource of resourcesService.getResources()\\\" [value]=\\\"resource\\\">\\n      {{resource.name | titlecase}}\\n    </mat-option>\\n  </mat-select>\\n\\n  <mat-form-field>\\n    <input matInput [(ngModel)]=\\\"amount\\\">\\n  </mat-form-field>\\n  <button mat-raised-button (click)=\\\"addResourceAmount()\\\">Add to all resources</button>\\n  <div *ngIf=\\\"selectedResource !== undefined\\\">\\n    <button mat-raised-button (click)=\\\"addResourceAmount(selectedResource)\\\">Add to {{selectedResource.name |\\n      titlecase}}</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { AdminService } from '../../services/admin/admin.service';\r\nimport { ResourcesService } from '../../services/resources/resources.service';\r\nimport { Resource } from '../../objects/resource';\r\nimport { Worker } from '../../objects/worker';\r\nimport { WorkersService } from '../../services/workers/workers.service';\r\nimport { UpgradesService } from '../../services/upgrades/upgrades.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-debug',\r\n  templateUrl: './admin-debug.component.html',\r\n  styleUrls: ['./admin-debug.component.css']\r\n})\r\nexport class AdminDebugComponent implements OnInit {\r\n  public filterAccessible = true;\r\n\r\n  public selectedResource: Resource;\r\n  amount = 0;\r\n\r\n  constructor(public resourcesService: ResourcesService,\r\n              public adminService: AdminService\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  addResourceAmount(selectedResource?: Resource) {\r\n    if (!selectedResource) {\r\n      for (const resource of this.resourcesService.getResources()) {\r\n        resource.addAmount(+this.amount);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    selectedResource.addAmount(+this.amount);\r\n  }\r\n}\r\n","module.exports = \"/* BuildingsComponent's private CSS styles */\\r\\n.buildings {\\r\\n  position: absolute;\\r\\n  top: 72px;\\r\\n  width: 140px;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n\\r\\n  background: white;\\r\\n\\r\\n  flex-direction: column;\\r\\n}\\r\\nbutton {\\r\\n  background-color: #eee;\\r\\n  border: none;\\r\\n  padding: 5px 10px;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n  cursor: hand;\\r\\n  font-family: Arial;\\r\\n}\\r\\n.resource-list {\\r\\n  text-align: center;\\r\\n}\\r\\n.resource-list div {\\r\\n  display: inline-block;\\r\\n}\\r\\n.resource-list img {\\r\\n  width: 16px;\\r\\n  height: 16px;\\r\\n}\\r\\n\"","module.exports = \"<mat-button-toggle-group #group=\\\"matButtonToggleGroup\\\" [(ngModel)]=\\\"selectedBuilding\\\"\\nclass=\\\"buildings\\\">\\n<mat-button-toggle *ngFor=\\\"let buildingTile of getBuildingTileArray(true)\\\" [value]=\\\"buildingTile\\\" class=\\\"building\\\"\\n  [disabled]=\\\"!canAffordBuilding(buildingTile.tileType)\\\" (click)=\\\"mapService.buildingListVisible = false\\\">\\n  <div class=\\\"title\\\" matTooltip=\\\"{{buildingTile.description}}\\\" matTooltipPosition=\\\"above\\\">\\n    {{buildingTile.name}}\\n  </div>\\n  <div class=\\\"resource-list\\\">\\n    <div *ngFor=\\\"let resourceCost of buildingTile.resourceCosts\\\" matTooltip=\\\"{{resourceCost.resourceCost}} {{getResource(resourceCost.resourceEnum).name | titlecase}}\\\"\\n      matTooltipPosition=\\\"below\\\">\\n      <img src=\\\"{{getResource(resourceCost.resourceEnum).iconPath}}\\\" alt=\\\"{{getResource(resourceCost.resourceEnum).name}}\\\">\\n      {{resourceCost.resourceCost}}\\n    </div>\\n  </div>\\n</mat-button-toggle>\\n</mat-button-toggle-group>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { BuildingTile, BuildingTileType, Tile } from '../../../objects/tile';\nimport { Resource } from '../../../objects/resource';\nimport { ResourceType, ResourceEnum } from '../../../objects/resourceData';\nimport { ResourcesService } from '../../../services/resources/resources.service';\nimport { BuildingsService } from '../../../services/buildings/buildings.service';\nimport { FighterService } from './../../../services/fighter/fighter.service';\nimport { SettingsService } from '../../../services/settings/settings.service';\nimport { MapService } from '../../../services/map/map.service';\n\n@Component({\n  selector: 'app-buildings',\n  templateUrl: './buildings.component.html',\n  styleUrls: ['./buildings.component.css']\n})\nexport class BuildingsComponent implements OnInit {\n  constructor(protected resourcesService: ResourcesService,\n              protected buildingsService: BuildingsService,\n              protected fighterService: FighterService,\n              protected settingsService: SettingsService,\n              protected mapService: MapService) { }\n\n  ngOnInit() {\n  }\n\n  selectBuilding(buildingTile: BuildingTile) {\n    if (this.selectedBuilding === buildingTile) {\n      this.selectedBuilding = undefined;\n    } else {\n      this.fighterService.selectedFighterType = undefined;\n      this.selectedBuilding = buildingTile;\n    }\n  }\n\n  canAffordBuilding(buildingType: BuildingTileType): boolean {\n    return this.buildingsService.canAffordBuilding(this.buildingTiles[buildingType]);\n  }\n\n  createBuilding(tile: Tile, buildingType: BuildingTileType) {\n    const buildingCreated = this.buildingsService.createBuilding(tile, buildingType);\n  }\n\n  clearBuilding(tile: Tile) {\n    this.buildingsService.clearBuilding(tile);\n  }\n\n  get buildingTiles() {\n    return this.mapService.buildingTiles;\n  }\n\n  getBuildingTileArray(filterByPlaceable: boolean): BuildingTile[] {\n    let tiles = this.mapService.buildingTileArray;\n\n    if (filterByPlaceable) {\n      tiles = tiles.filter(tile => tile.placeable);\n    }\n\n    return tiles;\n  }\n\n  getResource(resourceEnum: ResourceEnum): Resource {\n    return this.resourcesService.resources.get(resourceEnum);\n  }\n\n  get selectedBuilding(): BuildingTile {\n    return this.buildingsService.selectedBuilding;\n  }\n\n  set selectedBuilding(value) {\n    this.buildingsService.selectedBuilding = value;\n  }\n}\n","module.exports = \"/* ClickerMainComponent's private CSS styles */\\r\\n.resources {\\r\\n  margin: 0 0 2em 0;\\r\\n  list-style-type: none;\\r\\n  padding: 0;\\r\\n  width: 25em;\\r\\n}\\r\\n.resources mat-expansion-panel {\\r\\n  margin: 0;\\r\\n}\\r\\n.resources mat-expansion-panel-header {\\r\\n  height: 30px !important;\\r\\n}\\r\\n.resources mat-card-subtitle {\\r\\n  position: absolute;\\r\\n  top: 10px;\\r\\n  right: 10px;\\r\\n  font-weight: bold;\\r\\n}\\r\\n.resources .resource-button {\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n  margin: .5em;\\r\\n  padding: .4em 0;\\r\\n  height: 3.6em;\\r\\n  width: 100%;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.resources .resource-button.warn {\\r\\n  background-color: darkred;\\r\\n}\\r\\n.resources .resource-button:hover {\\r\\n  left: .1em;\\r\\n}\\r\\n.resources .resource-button.mat-disabled {\\r\\n  cursor: default;\\r\\n}\\r\\n.resources .badge {\\r\\n  display: inline-block;\\r\\n  font-size: small;\\r\\n  color: white;\\r\\n  padding: 0.8em 0.7em 0 0.7em;\\r\\n  background-color: #607D8B;\\r\\n  line-height: 1em;\\r\\n  position: absolute;\\r\\n  right: -9px;\\r\\n  top: 1px;\\r\\n  height: 1.8em;\\r\\n  min-width: 16px;\\r\\n  text-align: center;\\r\\n  margin-right: .8em;\\r\\n  border-radius: 0 4px 4px 0;\\r\\n}\\r\\n.button-container {\\r\\n  position: relative;\\r\\n}\\r\\n.travelling-count {\\r\\n  position: absolute;\\r\\n  top: 22px;\\r\\n  right: 3px;\\r\\n}\\r\\n.resource-button {\\r\\n  background-color: #eee;\\r\\n  border: none;\\r\\n  padding: 5px 10px;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n  cursor: hand;\\r\\n  font-family: Arial;\\r\\n}\\r\\n.harvest-progress {\\r\\n  display: flex;\\r\\n  align-content: center;\\r\\n  align-items: center;\\r\\n\\r\\n  height: 100%;\\r\\n  top: 0px;\\r\\n\\r\\n  position: absolute;\\r\\n  opacity: 0.5;\\r\\n}\\r\\n.resource-img {\\r\\n  position: absolute;\\r\\n\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n}\\r\\n.key-container {\\r\\n  position: absolute;\\r\\n  left: 50px;\\r\\n}\\r\\n.key-container img {\\r\\n  width: 24px;\\r\\n  height: 24px;\\r\\n}\\r\\n.key-container p {\\r\\n  z-index: 1;\\r\\n  position: absolute;\\r\\n\\r\\n  top: 9px;\\r\\n  right: 5px;\\r\\n\\r\\n  margin: 0;\\r\\n  line-height: 0;\\r\\n}\\r\\n\"","module.exports = \"<ul class=\\\"resources noselect\\\">\\n  <mat-accordion multi=\\\"true\\\">\\n    <mat-expansion-panel expanded=\\\"true\\\" *ngFor=\\\"let resourceType of resourceTypes | enumToArray\\\">\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          {{resourceType}}\\n        </mat-panel-title>\\n        <mat-panel-description>\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n\\n      <div class='button-container' *ngFor=\\\"let resource of getResources(resourceType, adminService.filterAccessible)\\\"\\n        matTooltip=\\\"{{getTooltipMessage(resource)}}\\\" matTooltipPosition=\\\"right\\\">\\n        <button mat-raised-button class=\\\"resource-button\\\" [ngClass]=\\\"{'warn': resourceIsBeingStolen(resource)}\\\"\\n          [disabled]=\\\"!canHarvest(resource, resource.harvestYield)\\\" (click)='startHarvesting(resource)'>\\n          <div class=\\\"key-container\\\" *ngIf=\\\"resource.bindIndex >= 0\\\">\\n            <img src=\\\"./assets/sprites/key.png\\\">\\n            <p>{{resource.bindIndex}}</p>\\n          </div>\\n\\n          <mat-card-title>{{resource.name | titlecase }}</mat-card-title>\\n          <mat-card-subtitle>{{resource.amount | number:'1.0-0'}}</mat-card-subtitle>\\n          <mat-progress-bar [class.hidden]=\\\"!resource.harvesting\\\" class=\\\"harvest-progress\\\" [value]=\\\"resource.progressBarValue\\\"></mat-progress-bar>\\n\\n          <img class=\\\"resource-img\\\" src=\\\"{{resource.iconPath}}\\\" alt=\\\"{{resource.name}}\\\" *ngIf=\\\"resource.iconPath !== ''\\\">\\n          <div class='travelling-count' *ngIf=\\\"resource.amountTravelling > 0\\\">{{resource.amountTravelling}} Travelling</div>\\n        </button>\\n      </div>\\n    </mat-expansion-panel>\\n  </mat-accordion>\\n</ul>\\n\"","import { Component, OnInit, } from '@angular/core';\r\n\r\nimport { ClickerMainService } from './../../services/clicker-main/clicker-main.service';\r\nimport { ResourcesService } from '../../services/resources/resources.service';\r\nimport { Resource } from '../../objects/resource';\r\nimport { ResourceType } from '../../objects/resourceData';\r\nimport { WorkersService } from '../../services/workers/workers.service';\r\nimport { TooltipService } from './../../services/tooltip/tooltip.service';\r\nimport { MapService } from './../../services/map/map.service';\r\nimport { EnemyService } from './../../services/enemy/enemy.service';\r\nimport { AdminService } from './../../services/admin/admin.service';\r\nimport { TickService } from './../../services/tick/tick.service';\r\n\r\n@Component({\r\n  selector: 'app-clicker-main',\r\n  templateUrl: './clicker-main.component.html',\r\n  styleUrls: ['./clicker-main.component.css']\r\n})\r\nexport class ClickerMainComponent implements OnInit {\r\n  resourceTypes = ResourceType;\r\n\r\n  constructor(protected clickerMainService: ClickerMainService,\r\n              protected resourcesService: ResourcesService,\r\n              protected workersService: WorkersService,\r\n              protected tooltipService: TooltipService,\r\n              protected mapService: MapService,\r\n              protected enemyService: EnemyService,\r\n              protected adminService: AdminService,\r\n              protected tickService: TickService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  getResources(resourceType: ResourceType, filterByAccessible: boolean): Resource[] {\r\n    return this.resourcesService.getResources(this.resourceTypes[resourceType], false, filterByAccessible);\r\n  }\r\n\r\n  public getTooltipMessage(resource: Resource): string {\r\n    return this.tooltipService.getResourceTooltip(resource);\r\n  }\r\n\r\n  canHarvest(resource: Resource, multiplier: number): boolean {\r\n    return !resource.harvesting && resource.canHarvest(multiplier);\r\n  }\r\n\r\n  startHarvesting(resource: Resource) {\r\n    this.clickerMainService.startHarvesting(resource);\r\n  }\r\n\r\n  resourceIsBeingStolen(resource: Resource): boolean {\r\n    return this.enemyService.resourceIsBeingStolen(resource);\r\n  }\r\n\r\n  harvestResource(resource: Resource) {\r\n    this.clickerMainService.harvestResource(resource);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<button (click)=\\\"enemyService.spawnEnemy()\\\">Spawn Enemy</button>\\r\\n\"","import { EnemyService } from '../../services/enemy/enemy.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-enemy',\n  templateUrl: './enemy.component.html',\n  styleUrls: ['./enemy.component.css']\n})\nexport class EnemyComponent implements OnInit {\n  constructor(public enemyService: EnemyService) { }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"#fighter-tooltip {\\r\\n  top: var(--detail-tooltip-top);\\r\\n  left: var(--detail-tooltip-left);\\r\\n\\r\\n  position: absolute;\\r\\n}\\r\\n\\r\\nmat-card {\\r\\n  text-align: center;\\r\\n  min-width: 300px;\\r\\n  max-width: 400px;\\r\\n}\\r\\n\\r\\n.resource-list div {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n.resource-list img {\\r\\n  width: 16px;\\r\\n  height: 16px;\\r\\n}\\r\\n\\r\\n.repair-container {\\r\\n  display: inline-flex;\\r\\n  white-space: pre-wrap;\\r\\n}\\r\\n\\r\\n.repair-container button {\\r\\n  position: relative;\\r\\n  top: -25%;\\r\\n}\\r\\n\\r\\n.stats-container {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.upgrade-button {\\r\\n  width: -webkit-fit-content;\\r\\n  width: -moz-fit-content;\\r\\n  width: fit-content;\\r\\n}\\r\\n\\r\\n.upgrade-button mat-icon {\\r\\n  position: relative;\\r\\n  top: 5px;\\r\\n}\\r\\n\\r\\n.anchor-container {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n\\r\\n  width: 55px;\\r\\n  height: 55px;\\r\\n}\\r\\n\\r\\n.anchor-container #center {\\r\\n  position: absolute;\\r\\n\\r\\n  left: 15px;\\r\\n  top: 15px;\\r\\n}\\r\\n\\r\\n.anchor-container .corner {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.anchor-container:hover .corner {\\r\\n  display: inherit;\\r\\n}\\r\\n\\r\\n.anchor-container a {\\r\\n  cursor: pointer;\\r\\n  color: gray;\\r\\n}\\r\\n\\r\\n.anchor-container a:hover {\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n.anchor-container #arrow-upper-left {\\r\\n  -webkit-transform: rotate(225deg);\\r\\n  transform: rotate(225deg);\\r\\n\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n}\\r\\n\\r\\n.anchor-container #arrow-upper-right {\\r\\n  -webkit-transform: rotate(315deg);\\r\\n  transform: rotate(315deg);\\r\\n\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n.anchor-container #arrow-lower-left {\\r\\n  -webkit-transform: rotate(135deg);\\r\\n  transform: rotate(135deg);\\r\\n\\r\\n  position: absolute;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n}\\r\\n\\r\\n.anchor-container #arrow-lower-right {\\r\\n  -webkit-transform: rotate(45deg);\\r\\n  transform: rotate(45deg);\\r\\n\\r\\n  position: absolute;\\r\\n  bottom: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\"","module.exports = \"<mat-card appSnap [snapSetting]=\\\"snapSetting\\\" id=\\\"fighter-tooltip\\\">\\n  <div class=\\\"anchor-container\\\">\\n    <a>\\n      <mat-icon class=\\\"corner\\\" id=\\\"arrow-upper-left\\\" (click)=\\\"snapSetting = 'upperLeft'\\\">arrow_forward</mat-icon>\\n    </a>\\n    <a>\\n      <mat-icon class=\\\"corner\\\" id=\\\"arrow-upper-right\\\" (click)=\\\"snapSetting = 'upperRight'\\\">arrow_forward</mat-icon>\\n    </a>\\n    <a>\\n      <mat-icon id=\\\"center\\\" (click)=\\\"snapSetting = 'free'\\\">all_out</mat-icon>\\n    </a>\\n    <a>\\n      <mat-icon class=\\\"corner\\\" id=\\\"arrow-lower-left\\\" (click)=\\\"snapSetting = 'lowerLeft'\\\">arrow_forward</mat-icon>\\n    </a>\\n    <a>\\n      <mat-icon class=\\\"corner\\\" id=\\\"arrow-lower-right\\\" (click)=\\\"snapSetting = 'lowerRight'\\\">arrow_forward</mat-icon>\\n    </a>\\n  </div>\\n  <div *ngIf=\\\"focusedFighter\\\">\\n    <mat-card-title>{{focusedFighter.name}}</mat-card-title>\\n    <mat-card-subtitle>{{focusedFighter.description}}</mat-card-subtitle>\\n\\n    <div class=\\\"repair-container\\\">\\n      {{focusedFighter.health}}/{{focusedFighter.maxHealth}} Health\\n      <div *ngIf=\\\"focusedFighter.health < focusedFighter.maxHealth\\\">\\n        <button mat-raised-button (click)=\\\"focusedFighter.heal()\\\" color=\\\"accent\\\" [disabled]=\\\"!focusedFighter.canHeal()\\\">\\n          Heal\\n          <div class=\\\"resource-list\\\">\\n            <div matTooltip=\\\"{{focusedFighter.healCost | number:'1.0-2'}} {{getResource('GOLD').name | titlecase}}\\\"\\n              matTooltipPosition=\\\"below\\\">\\n              <img src=\\\"{{getResource('GOLD').iconPath}}\\\" alt=\\\"{{getResource('GOLD').name}}\\\">\\n              {{focusedFighter.healCost | number:'1.0-2'}}\\n            </div>\\n          </div>\\n        </button>\\n      </div>\\n    </div>\\n\\n    <mat-card-content>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"removeFighter()\\\">Remove Fighter</button>\\n\\n      <h3>Stats</h3>\\n      <table class=\\\"stats-container\\\">\\n        <tbody>\\n          <tr class=\\\"stat-row\\\">\\n            <td>\\n              <p>\\n                Max Health: {{focusedFighter.maxHealth | number:'1.0-2'}}\\n              </p>\\n            </td>\\n            <td>\\n              <b>\\n                Level {{focusedFighter.statLevels['MAXHEALTH']}}\\n              </b>\\n            </td>\\n            <td>\\n              <button class=\\\"upgrade-button\\\" color=\\\"accent\\\" mat-raised-button (click)=\\\"focusedFighter.upgradeStat('MAXHEALTH')\\\"\\n                [disabled]=\\\"!focusedFighter.canUpgradeStat('MAXHEALTH')\\\" matTooltip=\\\"Level {{focusedFighter.statLevels['MAXHEALTH'] + 1}}: {{focusedFighter.getUpgradedStat('MAXHEALTH') | number:'1.0-2'}} Max Health\\\"\\n                matTooltipPosition=\\\"below\\\">\\n                <mat-icon color=\\\"primary\\\">arrow_upward</mat-icon>\\n                <div class=\\\"resource-list\\\">\\n                  <div>\\n                    <img src=\\\"{{getResource('GOLD').iconPath}}\\\" alt=\\\"{{getResource('GOLD').name}}\\\">\\n                    {{focusedFighter.statCosts['MAXHEALTH'] | number:'1.0-0'}}\\n                  </div>\\n                </div>\\n              </button>\\n            </td>\\n          </tr>\\n\\n          <tr class=\\\"stat-row\\\">\\n            <td>\\n              <p>\\n                Attack: {{focusedFighter.attack | number:'1.0-2'}}\\n              </p>\\n            </td>\\n            <td>\\n              <b>\\n                Level {{focusedFighter.statLevels['ATTACK']}}\\n              </b>\\n            </td>\\n            <td>\\n              <button class=\\\"upgrade-button\\\" color=\\\"accent\\\" mat-raised-button (click)=\\\"focusedFighter.upgradeStat('ATTACK')\\\"\\n                [disabled]=\\\"!focusedFighter.canUpgradeStat('ATTACK')\\\" matTooltip=\\\"Level {{focusedFighter.statLevels['ATTACK'] + 1}}: {{focusedFighter.getUpgradedStat('ATTACK') | number:'1.0-2'}} Attack\\\"\\n                matTooltipPosition=\\\"below\\\">\\n                <mat-icon color=\\\"primary\\\">arrow_upward</mat-icon>\\n                <div class=\\\"resource-list\\\">\\n                  <div>\\n                    <img src=\\\"{{getResource('GOLD').iconPath}}\\\" alt=\\\"{{getResource('GOLD').name}}\\\">\\n                    {{focusedFighter.statCosts['ATTACK'] | number:'1.0-0'}}\\n                  </div>\\n                </div>\\n              </button>\\n            </td>\\n          </tr>\\n\\n          <tr class=\\\"stat-row\\\">\\n            <td>\\n              <p>\\n                Defense: {{focusedFighter.defense | number:'1.0-2'}}\\n              </p>\\n            </td>\\n            <td>\\n              <b>\\n                Level {{focusedFighter.statLevels['DEFENSE']}}\\n              </b>\\n            </td>\\n            <td>\\n              <button class=\\\"upgrade-button\\\" color=\\\"accent\\\" mat-raised-button (click)=\\\"focusedFighter.upgradeStat('DEFENSE')\\\"\\n                [disabled]=\\\"!focusedFighter.canUpgradeStat('DEFENSE')\\\" matTooltip=\\\"Level {{focusedFighter.statLevels['DEFENSE'] + 1}}: {{focusedFighter.getUpgradedStat('DEFENSE') | number:'1.0-2'}} Defense\\\"\\n                matTooltipPosition=\\\"below\\\">\\n                <mat-icon color=\\\"primary\\\">arrow_upward</mat-icon>\\n                <div class=\\\"resource-list\\\">\\n                  <div>\\n                    <img src=\\\"{{getResource('GOLD').iconPath}}\\\" alt=\\\"{{getResource('GOLD').name}}\\\">\\n                    {{focusedFighter.statCosts['DEFENSE'] | number:'1.0-0'}}\\n                  </div>\\n                </div>\\n              </button>\\n            </td>\\n          </tr>\\n\\n          <tr class=\\\"stat-row\\\">\\n            <td>\\n              <p>\\n                Attack Range: {{focusedFighter.attackRange | number:'1.0-2'}}\\n                Tile{{focusedFighter.attackRange === 1 ? '' : 's'}}\\n              </p>\\n            </td>\\n            <td>\\n              <b>\\n                Level {{focusedFighter.statLevels['RANGE']}}\\n              </b>\\n            </td>\\n            <td>\\n              <button class=\\\"upgrade-button\\\" color=\\\"accent\\\" mat-raised-button (click)=\\\"focusedFighter.upgradeStat('RANGE')\\\"\\n                [disabled]=\\\"!focusedFighter.canUpgradeStat('RANGE')\\\" matTooltip=\\\"Level {{focusedFighter.statLevels['RANGE'] + 1}}: {{focusedFighter.getUpgradedStat('RANGE') | number:'1.0-2'}} Attack Range\\\"\\n                matTooltipPosition=\\\"below\\\">\\n                <mat-icon color=\\\"primary\\\">arrow_upward</mat-icon>\\n                <div class=\\\"resource-list\\\">\\n                  <div>\\n                    <img src=\\\"{{getResource('GOLD').iconPath}}\\\" alt=\\\"{{getResource('GOLD').name}}\\\">\\n                    {{focusedFighter.statCosts['RANGE'] | number:'1.0-0'}}\\n                  </div>\\n                </div>\\n              </button>\\n            </td>\\n          </tr>\\n\\n          <tr class=\\\"stat-row\\\" *ngIf=\\\"focusedFighter.moveable\\\">\\n            <td>\\n              <p>\\n                Movement Speed: {{focusedFighter.animationSpeed * 100 | number:'1.0-2'}}\\n                Tile{{focusedFighter.animationSpeed === 1 ? '' : 's'}}/second\\n              </p>\\n            </td>\\n            <td>\\n              <b>\\n                Level {{focusedFighter.statLevels['MOVEMENTSPEED']}}\\n              </b>\\n            </td>\\n            <td>\\n              <button class=\\\"upgrade-button\\\" color=\\\"accent\\\" mat-raised-button (click)=\\\"focusedFighter.upgradeStat('MOVEMENTSPEED')\\\"\\n                [disabled]=\\\"!focusedFighter.canUpgradeStat('MOVEMENTSPEED')\\\" matTooltip=\\\"Level {{focusedFighter.statLevels['MOVEMENTSPEED'] + 1}}: {{focusedFighter.getUpgradedStat('MOVEMENTSPEED') * 100 | number:'1.0-2'}} Tiles/Second\\\"\\n                matTooltipPosition=\\\"below\\\">\\n                <mat-icon color=\\\"primary\\\">arrow_upward</mat-icon>\\n                <div class=\\\"resource-list\\\">\\n                  <div>\\n                    <img src=\\\"{{getResource('GOLD').iconPath}}\\\" alt=\\\"{{getResource('GOLD').name}}\\\">\\n                    {{focusedFighter.statCosts['MOVEMENTSPEED'] | number:'1.0-0'}}\\n                  </div>\\n                </div>\\n              </button>\\n            </td>\\n          </tr>\\n\\n          <tr class=\\\"stat-row\\\">\\n            <td>\\n              <p>\\n                Fire Rate: {{1000 / focusedFighter.fireMilliseconds | number:'1.0-2'}}/Second\\n              </p>\\n            </td>\\n            <td>\\n              <b>\\n                Level {{focusedFighter.statLevels['FIRERATE']}}\\n              </b>\\n            </td>\\n            <td>\\n              <button class=\\\"upgrade-button\\\" color=\\\"accent\\\" mat-raised-button (click)=\\\"focusedFighter.upgradeStat('FIRERATE')\\\"\\n                [disabled]=\\\"!focusedFighter.canUpgradeStat('FIRERATE')\\\" matTooltip=\\\"Level {{focusedFighter.statLevels['FIRERATE'] + 1}}: {{1000 / focusedFighter.getUpgradedStat('FIRERATE') | number:'1.0-2'}}/Second\\\"\\n                matTooltipPosition=\\\"below\\\">\\n                <mat-icon color=\\\"primary\\\">arrow_upward</mat-icon>\\n                <div class=\\\"resource-list\\\">\\n                  <div>\\n                    <img src=\\\"{{getResource('GOLD').iconPath}}\\\" alt=\\\"{{getResource('GOLD').name}}\\\">\\n                    {{focusedFighter.statCosts['FIRERATE'] | number:'1.0-0'}}\\n                  </div>\\n                </div>\\n              </button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </mat-card-content>\\n  </div>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { MapService } from '../../services/map/map.service';\nimport { BuildingsService } from '../../services/buildings/buildings.service';\nimport { ResourcesService } from '../../services/resources/resources.service';\nimport { ResourceEnum } from './../../objects/resourceData';\nimport { Tile } from '../../objects/tile';\nimport { Fighter } from './../../objects/entity';\n\n@Component({\n  selector: 'app-fighter-detail',\n  templateUrl: './fighter-detail.component.html',\n  styleUrls: ['./fighter-detail.component.css']\n})\nexport class FighterDetailComponent implements OnInit {\n  snapSetting = 'free';\n\n  constructor(protected mapService: MapService,\n              protected buildingsService: BuildingsService,\n              protected resourcesService: ResourcesService) { }\n\n  ngOnInit() {\n  }\n\n  getResource(resourceEnum: ResourceEnum) {\n    return this.resourcesService.resources.get(resourceEnum);\n  }\n\n  removeFighter() {\n    if (!this.focusedFighter) {\n      return;\n    }\n\n    this.focusedFighter.health = 0;\n\n    this.focusedTile = undefined;\n    this.focusedFighter = undefined;\n  }\n\n  get focusedTile(): Tile {\n    return this.mapService.focusedTile;\n  }\n\n  set focusedTile(value: Tile) {\n    this.mapService.focusedTile = value;\n  }\n\n  get focusedFighter(): Fighter {\n    return this.mapService.focusedFighter;\n  }\n\n  set focusedFighter(value: Fighter) {\n    this.mapService.focusedFighter = value;\n  }\n}\n","module.exports = \"/* FightersComponent's private CSS styles */\\r\\n.fighters {\\r\\n  position: absolute;\\r\\n  top: 72px;\\r\\n  left: 392px;\\r\\n  width: 134px;\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n\\r\\n  background: white;\\r\\n\\r\\n  flex-direction: column;\\r\\n}\\r\\nbutton {\\r\\n  background-color: #eee;\\r\\n  border: none;\\r\\n  padding: 5px 10px;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n  cursor: hand;\\r\\n  font-family: Arial;\\r\\n}\\r\\n.resource-list {\\r\\n  text-align: center;\\r\\n}\\r\\n.resource-list div {\\r\\n  display: inline-block;\\r\\n}\\r\\n.resource-list img {\\r\\n  width: 16px;\\r\\n  height: 16px;\\r\\n}\\r\\n\"","module.exports = \"<mat-button-toggle-group #group=\\\"matButtonToggleGroup\\\" [(ngModel)]=\\\"selectedFighterType\\\" class=\\\"fighters\\\">\\r\\n  <mat-button-toggle *ngFor=\\\"let fighterType of fighterService.fighterTypes\\\" [value]=\\\"fighterType\\\" class=\\\"fighter\\\"\\r\\n    [disabled]=\\\"!canAffordFighter(fighterType)\\\" (click)=\\\"mapService.fighterListVisible = false\\\">\\r\\n    <div class=\\\"title\\\" matTooltip=\\\"{{fighterType.description}}\\\" matTooltipPosition=\\\"above\\\">\\r\\n      {{fighterType.name}}\\r\\n    </div>\\r\\n    <div class=\\\"resource-list\\\">\\r\\n      <div matTooltip=\\\"{{fighterType.cost}} {{getResource('GOLD').name | titlecase}}\\\"\\r\\n        matTooltipPosition=\\\"below\\\">\\r\\n        <img src=\\\"{{getResource('GOLD').iconPath}}\\\" alt=\\\"{{getResource('GOLD').name}}\\\">\\r\\n        {{fighterType.cost}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-button-toggle>\\r\\n</mat-button-toggle-group>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { ResourceEnum } from '../../objects/resourceData';\nimport { Fighter } from '../../objects/entity';\nimport { BuildingsService } from './../../services/buildings/buildings.service';\nimport { FighterService } from '../../services/fighter/fighter.service';\nimport { SettingsService } from '../../services/settings/settings.service';\nimport { ResourcesService } from '../../services/resources/resources.service';\nimport { MapService } from '../../services/map/map.service';\n\n@Component({\n  selector: 'app-fighter',\n  templateUrl: './fighter.component.html',\n  styleUrls: ['./fighter.component.css']\n})\nexport class FighterComponent implements OnInit {\n  constructor(public resourcesService: ResourcesService,\n              public settingsService: SettingsService,\n              public buildingsService: BuildingsService,\n              public fighterService: FighterService,\n              public mapService: MapService) { }\n\n  ngOnInit() {\n  }\n\n  getResource(resourceEnum: ResourceEnum) {\n    return this.resourcesService.resources.get(resourceEnum);\n  }\n\n  canAffordFighter(fighterType: Fighter) {\n    return this.resourcesService.resources.get(ResourceEnum.Gold).amount >= fighterType.cost;\n  }\n\n  selectFigherType(fighterType: Fighter) {\n    if (this.selectedFighterType === fighterType) {\n      this.selectedFighterType = undefined;\n    } else {\n      this.buildingsService.selectedBuilding = undefined;\n      this.selectedFighterType = fighterType;\n    }\n  }\n\n  get fighterTypes() {\n    return this.fighterService.fighterTypes;\n  }\n\n  get selectedFighterType(): Fighter {\n    return this.fighterService.selectedFighterType;\n  }\n\n  set selectedFighterType(value) {\n    this.fighterService.selectedFighterType = value;\n  }\n}\n","module.exports = \"/* MapComponent's private CSS styles */\\r\\nh1 {\\r\\n  font-size: 1.2em;\\r\\n  color: #999;\\r\\n  margin-bottom: 0;\\r\\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\\r\\n}\\r\\nh2 {\\r\\n  font-size: 2em;\\r\\n  margin-top: 0;\\r\\n  padding-top: 0;\\r\\n}\\r\\nh3 {\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n}\\r\\nnav a {\\r\\n  padding: 5px 10px;\\r\\n  text-decoration: none;\\r\\n  margin-top: 10px;\\r\\n  display: inline-block;\\r\\n  background-color: #eee;\\r\\n  border-radius: 4px;\\r\\n}\\r\\nnav a:visited, a:link {\\r\\n  color: #607d8b;\\r\\n}\\r\\nnav a:hover {\\r\\n  color: #039be5;\\r\\n  background-color: #cfd8dc;\\r\\n}\\r\\nnav a.active {\\r\\n  color: #039be5;\\r\\n}\\r\\n#canvas-container {\\r\\n  display: flex;\\r\\n  height: 100%;\\r\\n  position: relative;\\r\\n  overflow: hidden;\\r\\n}\\r\\n.cursor-tools {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n\\r\\n  overflow-x: auto;\\r\\n  max-width: 100%;\\r\\n\\r\\n  background: white;\\r\\n}\\r\\n.key-container {\\r\\n  position: absolute;\\r\\n}\\r\\n.key-container img {\\r\\n  width: 24px;\\r\\n  height: 24px;\\r\\n}\\r\\n.key-container p {\\r\\n  z-index: 1;\\r\\n  position: absolute;\\r\\n\\r\\n  top: 10px;\\r\\n  right: 3px;\\r\\n\\r\\n  margin: 0;\\r\\n  line-height: 0;\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"canvas-container\\\" tabindex=\\\"1\\\">\\r\\n  <canvas class=\\\"noselect\\\" appNoScroll appMap width=\\\"{{canvasWidth}}\\\" height=\\\"{{canvasHeight}}\\\" oncontextmenu=\\\"return false\\\"></canvas>\\r\\n\\r\\n  <mat-button-toggle-group #group=\\\"matButtonToggleGroup\\\" [(ngModel)]=\\\"mapService.cursorTool\\\" class=\\\"cursor-tools\\\"\\r\\n    (valueChange)=\\\"clearFocus()\\\">\\r\\n    <mat-button-toggle value=\\\"PLACEBUILDINGS\\\" class=\\\"cursor-tool\\\" (click)=\\\"setPlacementGroupVisibility(!mapService.buildingListVisible, false)\\\">\\r\\n      <div class=\\\"key-container\\\">\\r\\n        <img src=\\\"./assets/sprites/key.png\\\">\\r\\n        <p>Q</p>\\r\\n      </div>\\r\\n      <mat-icon color=\\\"primary\\\">add_photo_alternate</mat-icon>\\r\\n      <br />\\r\\n      Place Buildings\\r\\n    </mat-button-toggle>\\r\\n    <mat-button-toggle value=\\\"CLEARBUILDINGS\\\" class=\\\"cursor-tool\\\" (click)=\\\"setPlacementGroupVisibility(false, false)\\\">\\r\\n      <div class=\\\"key-container\\\">\\r\\n        <img src=\\\"./assets/sprites/key.png\\\">\\r\\n        <p>W</p>\\r\\n      </div>\\r\\n      <mat-icon color=\\\"primary\\\">delete</mat-icon>\\r\\n      <br />\\r\\n      Clear Buildings\\r\\n    </mat-button-toggle>\\r\\n    <mat-button-toggle value=\\\"TILEDETAIL\\\" class=\\\"cursor-tool\\\" (click)=\\\"setPlacementGroupVisibility(false, false)\\\">\\r\\n      <div class=\\\"key-container\\\">\\r\\n        <img src=\\\"./assets/sprites/key.png\\\">\\r\\n        <p>E</p>\\r\\n      </div>\\r\\n      <mat-icon color=\\\"primary\\\">mode_comment</mat-icon>\\r\\n      <br />\\r\\n      Tile Details\\r\\n    </mat-button-toggle>\\r\\n    <mat-button-toggle *ngIf=\\\"enemyService.enemiesActive\\\" value=\\\"PLACEFIGHTERS\\\" class=\\\"cursor-tool\\\" (click)=\\\"setPlacementGroupVisibility(false, !this.mapService.fighterListVisible)\\\">\\r\\n      <div class=\\\"key-container\\\">\\r\\n        <img src=\\\"./assets/sprites/key.png\\\">\\r\\n        <p>R</p>\\r\\n      </div>\\r\\n      <mat-icon color=\\\"primary\\\">directions_walk</mat-icon>\\r\\n      <br />\\r\\n      Place Fighters\\r\\n    </mat-button-toggle>\\r\\n    <mat-button-toggle *ngIf=\\\"enemyService.enemiesActive\\\" value=\\\"FIGHTERDETAIL\\\" class=\\\"cursor-tool\\\" (click)=\\\"setPlacementGroupVisibility(false, false)\\\">\\r\\n      <div class=\\\"key-container\\\">\\r\\n        <img src=\\\"./assets/sprites/key.png\\\">\\r\\n        <p>T</p>\\r\\n      </div>\\r\\n      <mat-icon color=\\\"primary\\\">directions_run</mat-icon>\\r\\n      <br />\\r\\n      Fighter Details\\r\\n    </mat-button-toggle>\\r\\n  </mat-button-toggle-group>\\r\\n\\r\\n  <app-buildings *ngIf=\\\"mapService.buildingListVisible\\\"></app-buildings>\\r\\n  <app-fighter *ngIf=\\\"mapService.fighterListVisible\\\"></app-fighter>\\r\\n\\r\\n  <app-tile-detail [ngClass]=\\\"{'hidden': !mapService.focusedBuildingTile && !mapService.focusedResourceTile}\\\"></app-tile-detail>\\r\\n  <app-fighter-detail [ngClass]=\\\"{'hidden': !mapService.focusedFighter}\\\"></app-fighter-detail>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { MapTileType, Tile, BuildingTileType, MapTile, BuildingTile } from '../../objects/tile';\r\nimport { MapService } from '../../services/map/map.service';\r\nimport { BuildingsService } from './../../services/buildings/buildings.service';\r\nimport { EnemyService } from './../../services/enemy/enemy.service';\r\nimport { AdminService } from '../../services/admin/admin.service';\r\nimport { ResourcesService } from '../../services/resources/resources.service';\r\n\r\ndeclare var d3: any;\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.css']\r\n})\r\nexport class MapComponent implements OnInit {\r\n  mapTileTypes = MapTileType;\r\n  buildingTileTypes = BuildingTileType;\r\n\r\n  constructor(public mapService: MapService,\r\n              public buildingsService: BuildingsService,\r\n              public resourcesService: ResourcesService,\r\n              public enemyService: EnemyService,\r\n              public adminService: AdminService) { }\r\n\r\n  ngOnInit() {\r\n    this.mapService.initializeMap();\r\n  }\r\n\r\n  clearFocus() {\r\n    this.mapService.focusedTile = undefined;\r\n    this.mapService.focusedBuildingTile = undefined;\r\n    this.mapService.focusedResourceTile = undefined;\r\n    this.mapService.focusedResources = undefined;\r\n    this.mapService.focusedFighter = undefined;\r\n  }\r\n\r\n  setPlacementGroupVisibility(buildingVisibility: boolean, fighterVisibility: boolean) {\r\n    this.mapService.buildingListVisible = buildingVisibility;\r\n    this.mapService.fighterListVisible = fighterVisibility;\r\n  }\r\n\r\n  get canvasWidth(): number {\r\n    return this.mapService.canvasWidth;\r\n  }\r\n\r\n  get canvasHeight(): number {\r\n    return this.mapService.canvasHeight;\r\n  }\r\n\r\n  get deleteMode(): boolean {\r\n    return this.mapService.deleteMode;\r\n  }\r\n\r\n  set deleteMode(value) {\r\n    this.mapService.deleteMode = value;\r\n  }\r\n\r\n  get rowCount(): number {\r\n    return this.mapService.getRowCount();\r\n  }\r\n\r\n  get columnCount(): number {\r\n    return this.mapService.getColumnCount();\r\n  }\r\n}\r\n","module.exports = \"/* MessagesComponent's private CSS styles */\\r\\nh2 {\\r\\n  color: red;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-weight: lighter;\\r\\n}\\r\\nbody {\\r\\n  margin: 2em;\\r\\n}\\r\\nbody, input[text], button {\\r\\n  color: crimson;\\r\\n  font-family: Cambria, Georgia;\\r\\n}\\r\\nbutton.clear {\\r\\n  font-family: Arial;\\r\\n  background-color: #eee;\\r\\n  border: none;\\r\\n  padding: 5px 10px;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n  cursor: hand;\\r\\n}\\r\\nbutton:hover {\\r\\n  background-color: #cfd8dc;\\r\\n}\\r\\nbutton:disabled {\\r\\n  background-color: #eee;\\r\\n  color: #aaa;\\r\\n  cursor: auto;\\r\\n}\\r\\nbutton.clear {\\r\\n  color: #888;\\r\\n  margin-bottom: 12px;\\r\\n}\\r\\ntable.message-table {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<table mat-table [dataSource]=\\\"messagesService.messagesDataSource\\\" matSort matSortActive=\\\"timestamp\\\" matSortDirection=\\\"desc\\\" class=\\\"message-table mat-elevation-z8\\\">\\n    <ng-container matColumnDef=\\\"source\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Source </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let message\\\"> {{message.source | titlecase}} </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"timestamp\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Timestamp </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let message\\\"> {{message.timestamp | date:'h:mm a'}} </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"message\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Message </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let message\\\"> {{message.message}} </mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n  </table>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material';\n\nimport { Message, MessageSource } from './../../objects/message';\nimport { MessagesService } from '../../services/messages/messages.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(public messagesService: MessagesService) { }\n\n  ngOnInit() {\n    this.messagesService.messagesDataSource.sort = this.sort;\n  }\n\n  get messages(): Message[] {\n    return this.messagesService.messages;\n  }\n\n  get displayedColumns(): string[] {\n    return ['source', 'timestamp', 'message'];\n  }\n}\n","module.exports = \".full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<div *ngIf=\\\"!exportMode\\\">\\n  Paste Save\\n  <mat-form-field class=\\\"full-width\\\">\\n    <input matInput placeholder=\\\"Save Data\\\" [(ngModel)]=\\\"saveData\\\" (submit)=\\\"exportData()\\\">\\n  </mat-form-field>\\n\\n  <div>\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"exportData()\\\">Load</button>\\n    <button mat-raised-button (click)=\\\"onNoClick()\\\">Cancel</button>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"exportMode\\\" style=\\\"word-wrap: break-word\\\">\\n  <textarea readonly id=\\\"saveData\\\" class=\\\"full-width\\\">{{saveData}}</textarea>\\n  <div>\\n    <button mat-raised-button class=\\\"copy-button\\\" color=\\\"accent\\\" data-clipboard-action=\\\"copy\\\" data-clipboard-target=\\\"#saveData\\\">Copy to Clipboard</button>\\n    <button mat-raised-button (click)=\\\"onNoClick()\\\">Close</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport * as ClipboardJS from 'clipboard';\n\n@Component({\n  selector: 'app-save-dialog',\n  templateUrl: './save-dialog.component.html',\n  styleUrls: ['./save-dialog.component.css']\n})\nexport class SaveDialogComponent implements OnInit {\n  saveData: string;\n  exportMode = false;\n  clipboard;\n\n  constructor(public dialogRef: MatDialogRef<SaveDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n    if (this.data.saveData !== undefined) {\n      this.saveData = this.data.saveData;\n      this.exportMode = true;\n\n      this.clipboard = new ClipboardJS('.copy-button');\n    }\n  }\n\n  exportData() {\n    this.dialogRef.close(this.saveData);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"mat-panel-title {\\r\\n  display: -ms-grid;\\r\\n  display: grid;\\r\\n}\\r\\n\\r\\n.color-input {\\r\\n    color: rgb(108, 88, 88);\\r\\n    font-weight: bolder;\\r\\n}\\r\\n\\r\\n.full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<h3>Version {{settingsService.gameVersion}}</h3>\\n\\n<mat-accordion multi=\\\"true\\\">\\n  <mat-expansion-panel expanded=\\\"true\\\">\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        <mat-icon color=\\\"primary\\\">save</mat-icon>\\n        Save/Load\\n      </mat-panel-title>\\n    </mat-expansion-panel-header>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <mat-select placeholder=\\\"Autosave Interval (Minutes)\\\" [(ngModel)]=\\\"autosaveInterval\\\" (valueChange)=\\\"settingsService.setAutosave()\\\">\\n        <mat-option [value]=\\\"-1\\\">Disable</mat-option>\\n        <mat-option [value]=\\\"60000\\\">1</mat-option>\\n        <mat-option [value]=\\\"900000\\\">15</mat-option>\\n        <mat-option [value]=\\\"1800000\\\">30</mat-option>\\n        <mat-option [value]=\\\"3600000\\\">60</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"saveGame()\\\">Save</button>\\n    <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteGame()\\\">Delete Save</button>\\n\\n    <button mat-raised-button (click)=\\\"exportSave()\\\">Export Save</button>\\n    <button mat-raised-button (click)=\\\"importSave()\\\">Import Save</button>\\n  </mat-expansion-panel>\\n\\n  <mat-expansion-panel expanded=\\\"true\\\">\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        <mat-icon color=\\\"primary\\\">list</mat-icon>\\n        Interface\\n      </mat-panel-title>\\n    </mat-expansion-panel-header>\\n\\n    <mat-checkbox [(ngModel)]=\\\"slimInterface\\\">Slim Mode</mat-checkbox>\\n    <!-- <br />\\n      <mat-checkbox [(ngModel)]=\\\"disableAnimations\\\">Disable Animations</mat-checkbox> -->\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <mat-select placeholder=\\\"Resource Shortcuts\\\" [formControl]=\\\"bindSelected\\\" multiple (selectionChange)=\\\"resourceBindChange($event)\\\">\\n        <mat-option *ngFor=\\\"let resource of resourcesService.getResources(false, false, true)\\\" [(value)]=\\\"resource.resourceEnum\\\">\\n          {{resource.name | titlecase}}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error *ngIf=\\\"bindSelected.hasError('length')\\\">\\n        No more than 10 resource shortcuts allowed.\\n      </mat-error>\\n    </mat-form-field>\\n\\n  </mat-expansion-panel>\\n\\n  <mat-expansion-panel expanded=\\\"true\\\">\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        <mat-icon color=\\\"primary\\\">map</mat-icon>\\n        Map\\n      </mat-panel-title>\\n    </mat-expansion-panel-header>\\n\\n    <mat-checkbox [(ngModel)]=\\\"mapLowFramerate\\\">Limit Framerate</mat-checkbox>\\n    <br />\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input class=\\\"color-input\\\" matInput placeholder=\\\"Player Harvest Color\\\" [(colorPicker)]=\\\"resourceAnimationColors['PLAYERSPAWNED']\\\"\\n        [style.background]=\\\"resourceAnimationColors['PLAYERSPAWNED']\\\" [value]=\\\"resourceAnimationColors['PLAYERSPAWNED']\\\" />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input class=\\\"color-input\\\" matInput placeholder=\\\"Worker Harvest Color\\\" [(colorPicker)]=\\\"resourceAnimationColors['WORKERSPAWNED']\\\"\\n        [style.background]=\\\"resourceAnimationColors['WORKERSPAWNED']\\\" [value]=\\\"resourceAnimationColors['WORKERSPAWNED']\\\" />\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input class=\\\"color-input\\\" matInput placeholder=\\\"Sold Resource Color\\\" [(colorPicker)]=\\\"resourceAnimationColors['SOLD']\\\"\\n        [style.background]=\\\"resourceAnimationColors['SOLD']\\\" [value]=\\\"resourceAnimationColors['SOLD']\\\" />\\n    </mat-form-field>\\n  </mat-expansion-panel>\\n\\n  <mat-expansion-panel expanded=\\\"true\\\">\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        <mat-icon color=\\\"primary\\\">assessment</mat-icon>\\n        Log\\n      </mat-panel-title>\\n    </mat-expansion-panel-header>\\n\\n    <button mat-raised-button (click)=\\\"messagesService.clear()\\\">Clear</button>\\n\\n    <br />\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput type=\\\"number\\\" placeholder=\\\"Log History\\\" min=\\\"0\\\" max=\\\"10000\\\" [(ngModel)]=\\\"messagesService.messageLimit\\\">\\n    </mat-form-field>\\n\\n    <br />\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <mat-select placeholder=\\\"Visible Log Sources\\\" [(ngModel)]=\\\"messagesService.visibleSources\\\" (ngModelChange)=\\\"messagesService.getFilteredMessages()\\\"\\n        multiple>\\n        <mat-option *ngFor=\\\"let messageSource of messageSources | enumToArray\\\" [(value)]=\\\"messageSources[messageSource]\\\">\\n          {{messageSource | titlecase}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </mat-expansion-panel>\\n\\n  <mat-expansion-panel expanded=\\\"true\\\">\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        <mat-icon color=\\\"primary\\\">bug_report</mat-icon>\\n        Debug\\n      </mat-panel-title>\\n    </mat-expansion-panel-header>\\n\\n    <mat-checkbox [(ngModel)]=\\\"debugMode\\\">Debug Mode</mat-checkbox>\\n  </mat-expansion-panel>\\n</mat-accordion>\\n\"","import { Component, AfterViewInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatSelectChange } from '@angular/material';\n\nimport { SettingsService } from '../../services/settings/settings.service';\nimport { ResourcesService } from './../../services/resources/resources.service';\nimport { MessagesService } from './../../services/messages/messages.service';\nimport { ResourceEnum } from '../../objects/resourceData';\nimport { MessageSource } from './../../objects/message';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements AfterViewInit {\n  messageSources = MessageSource;\n  resourceBindErrorState = false;\n\n  constructor(public settingsService: SettingsService,\n              public resourcesService: ResourcesService,\n              public messagesService: MessagesService) {\n  }\n\n  ngAfterViewInit() {\n    this.loadGame();\n    this.setAutosave();\n  }\n\n  setAutosave() {\n    this.settingsService.setAutosave();\n  }\n\n  saveGame() {\n    this.settingsService.saveGame();\n  }\n\n  loadGame() {\n    this.settingsService.loadGame();\n\n    this.bindSelected.setValue(this.resourceBinds);\n    this.resourceBindChange({'source': null, 'value': this.resourceBinds});\n  }\n\n  deleteGame() {\n    if (confirm('Are you sure you want to delete your save?')) {\n      this.settingsService.deleteSave();\n    }\n  }\n\n  resourceBindChange(event: MatSelectChange) {\n    this.settingsService.resourceBindChange(event);\n  }\n\n  exportSave() {\n    this.settingsService.openSaveDialog(this.settingsService.exportSave());\n  }\n\n  importSave() {\n    this.settingsService.openSaveDialog();\n  }\n\n  get bindSelected() {\n    return this.settingsService.bindSelected;\n  }\n\n  get autosaveInterval() {\n    return this.settingsService.autosaveInterval;\n  }\n  set autosaveInterval(value: number) {\n    this.settingsService.autosaveInterval = value;\n  }\n\n  get debugMode(): boolean {\n    return this.settingsService.debugMode;\n  }\n  set debugMode(value: boolean) {\n    this.settingsService.debugMode = value;\n  }\n\n  get mapLowFramerate(): boolean {\n    return this.settingsService.mapLowFramerate;\n  }\n  set mapLowFramerate(value: boolean) {\n    this.settingsService.mapLowFramerate = value;\n  }\n\n  get resourceAnimationColors() {\n    return this.settingsService.resourceAnimationColors;\n  }\n  set resourceAnimationColors(value) {\n    this.settingsService.resourceAnimationColors = value;\n  }\n\n  get slimInterface(): boolean {\n    return this.settingsService.slimInterface;\n  }\n  set slimInterface(value: boolean) {\n    this.settingsService.slimInterface = value;\n  }\n\n  get disableAnimations(): boolean {\n    return this.settingsService.disableAnimations;\n  }\n  set disableAnimations(value: boolean) {\n    this.settingsService.disableAnimations = value;\n  }\n\n  get resourceBinds(): ResourceEnum[] {\n    return this.settingsService.resourceBinds;\n  }\n  set resourceBinds(value: ResourceEnum[]) {\n    this.settingsService.resourceBinds = value;\n  }\n}\n","module.exports = \"/* StoreComponent's private CSS styles */\\r\\n.store {\\r\\n  margin: 0 0 2em 0;\\r\\n  list-style-type: none;\\r\\n  padding: 0;\\r\\n  width: 100%;\\r\\n}\\r\\n.store mat-expansion-panel {\\r\\n  margin: 0;\\r\\n}\\r\\n.store mat-expansion-panel-header {\\r\\n  height: 30px !important;\\r\\n}\\r\\n.store mat-card-subtitle {\\r\\n  position: absolute;\\r\\n  top: 10px;\\r\\n  right: 10px;\\r\\n}\\r\\n.store mat-card {\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n  background-color: #EEE;\\r\\n  margin: .5em;\\r\\n  padding: .4em 0;\\r\\n  height: 1.6em;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.store mat-card:hover {\\r\\n  color: #607D8B;\\r\\n  background-color: #DDD;\\r\\n  left: .1em;\\r\\n}\\r\\n.store a {\\r\\n  color: #888;\\r\\n  text-decoration: none;\\r\\n  position: relative;\\r\\n  display: block;\\r\\n  width: 250px;\\r\\n}\\r\\n.store a:hover {\\r\\n  color:#607D8B;\\r\\n}\\r\\n.store .harvestable {\\r\\n  background-color: antiquewhite;\\r\\n}\\r\\n.store .harvestable:hover {\\r\\n  background-color: blanchedalmond;\\r\\n}\\r\\n.store .badge {\\r\\n  display: inline-block;\\r\\n  font-size: small;\\r\\n  color: white;\\r\\n  padding: 0.8em 0.7em 0 0.7em;\\r\\n  background-color: #607D8B;\\r\\n  line-height: 1em;\\r\\n  position: absolute;\\r\\n  right: -9px;\\r\\n  top: 1px;\\r\\n  height: 1.8em;\\r\\n  min-width: 16px;\\r\\n  text-align: center;\\r\\n  margin-right: .8em;\\r\\n  border-radius: 0 4px 4px 0;\\r\\n}\\r\\n.right {\\r\\n  position: absolute;\\r\\n  right: 3px;\\r\\n  top: 3px;\\r\\n}\\r\\nbutton {\\r\\n  min-width: unset;\\r\\n  height: 27px;\\r\\n  line-height: unset;\\r\\n}\\r\\nbutton:hover {\\r\\n  background-color: #cfd8dc;\\r\\n}\\r\\nbutton.delete {\\r\\n  position: relative;\\r\\n  left: 194px;\\r\\n  top: -32px;\\r\\n  background-color: gray !important;\\r\\n  color: white;\\r\\n}\\r\\n.full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n.sell-button {\\r\\n  width: 80%;\\r\\n}\\r\\n.cutoff-input {\\r\\n  width: 20%;\\r\\n}\\r\\n\"","module.exports = \"Amount to sell:<mat-button-toggle-group #group=\\\"matButtonToggleGroup\\\" [(ngModel)]=\\\"sellAmount\\\">\\n  <mat-button-toggle value=\\\"1\\\" checked=\\\"true\\\">\\n    1x\\n  </mat-button-toggle>\\n  <mat-button-toggle value=\\\"10\\\">\\n    10x\\n  </mat-button-toggle>\\n  <mat-button-toggle value=\\\"100\\\">\\n    100x\\n  </mat-button-toggle>\\n  <mat-button-toggle value=\\\"1000\\\">\\n    1000x\\n  </mat-button-toggle>\\n  <mat-button-toggle value=\\\"-1\\\">\\n    All\\n  </mat-button-toggle>\\n</mat-button-toggle-group>\\n\\n<ul class=\\\"store\\\">\\n  <mat-accordion multi=\\\"true\\\">\\n    <mat-expansion-panel expanded=\\\"true\\\" *ngFor=\\\"let resourceType of sellableTypes\\\">\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          {{resourceType | titlecase}}\\n        </mat-panel-title>\\n        <mat-panel-description>\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n\\n      <div *ngFor=\\\"let resource of resourcesOfType(resourceType, false, adminService.filterAccessible)\\\">\\n        <button class=\\\"sell-button\\\" color=\\\"accent\\\" mat-flat-button *ngIf=\\\"resource.sellable\\\" (click)=\\\"sellResource(resource)\\\"\\n          [disabled]=\\\"!canSellResource(resource)\\\">\\n          {{(sellAmount == -1 ? resource.amount : sellAmount) | number:'0.0-0'}} {{resource.name | titlecase }} -\\n          {{resource.sellsFor * (+sellAmount === -1 ? resource.amount : sellAmount) | number:'0.0-2'}} Gold\\n        </button>\\n        <button disabled class=\\\"sell-button\\\" color=\\\"warn\\\" mat-flat-button *ngIf=\\\"!resource.sellable\\\">\\n          {{(sellAmount == -1 ? resource.amount : sellAmount) | number:'0.0-0'}} {{resource.name | titlecase }} -\\n          Unsellable\\n        </button>\\n        <mat-form-field class=\\\"cutoff-input\\\">\\n          <input matInput placeholder=\\\"Autosell Cutoff\\\" type=\\\"number\\\" min=\\\"0\\\" [disabled]=\\\"!resource.sellable\\\" [(ngModel)]=\\\"resource.autoSellCutoff\\\" />\\n        </mat-form-field>\\n      </div>\\n    </mat-expansion-panel>\\n  </mat-accordion>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Resource } from '../../objects/resource';\nimport { ResourceType } from '../../objects/resourceData';\nimport { ResourcesService } from '../../services/resources/resources.service';\nimport { StoreService } from '../../services/store/store.service';\nimport { AdminService } from '../../services/admin/admin.service';\n\n@Component({\n  selector: 'app-store',\n  templateUrl: './store.component.html',\n  styleUrls: ['./store.component.css']\n})\nexport class StoreComponent implements OnInit {\n  resourceTypes = ResourceType;\n  sellableTypes = [ResourceType.Wood, ResourceType.Mineral, ResourceType.Metal];\n  sellAmount = 1;\n\n  constructor(private resourcesService: ResourcesService,\n              private storeService: StoreService,\n              private adminService: AdminService) {\n  }\n\n  ngOnInit() {\n  }\n\n  canSellResource(resource: Resource) {\n    return this.storeService.canSellResource(resource, +this.sellAmount);\n  }\n\n  resourcesOfType(resourceType: ResourceType, filterBySellable: boolean, filterByAccessible): Resource[] {\n    return this.resourcesService.getResources(resourceType, filterBySellable, filterByAccessible);\n  }\n\n  sellResource(resource: Resource) {\n    this.storeService.sellResource(resource, +this.sellAmount);\n  }\n}\n","module.exports = \"#tile-tooltip {\\r\\n  top: var(--detail-tooltip-top);\\r\\n  left: var(--detail-tooltip-left);\\r\\n\\r\\n  position: absolute;\\r\\n}\\r\\n\\r\\nmat-card {\\r\\n  text-align: center;\\r\\n  min-width: 300px;\\r\\n  max-width: 400px;\\r\\n}\\r\\n\\r\\n.resource-list div {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n.resource-list img {\\r\\n  width: 16px;\\r\\n  height: 16px;\\r\\n}\\r\\n\\r\\n.repair-container {\\r\\n  display: inline-flex;\\r\\n  white-space: pre-wrap;\\r\\n}\\r\\n\\r\\n.repair-container button {\\r\\n  position: relative;\\r\\n  top: -25%;\\r\\n}\\r\\n\\r\\n.stats-container {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.upgrade-button {\\r\\n  width: -webkit-fit-content;\\r\\n  width: -moz-fit-content;\\r\\n  width: fit-content;\\r\\n}\\r\\n\\r\\n.upgrade-button mat-icon {\\r\\n  position: relative;\\r\\n  top: 5px;\\r\\n}\\r\\n\\r\\n.anchor-container {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n\\r\\n  width: 55px;\\r\\n  height: 55px;\\r\\n}\\r\\n\\r\\n.anchor-container #center {\\r\\n  position: absolute;\\r\\n\\r\\n  left: 15px;\\r\\n  top: 15px;\\r\\n}\\r\\n\\r\\n.anchor-container .corner {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.anchor-container:hover .corner {\\r\\n  display: inherit;\\r\\n}\\r\\n\\r\\n.anchor-container a {\\r\\n  cursor: pointer;\\r\\n  color: gray;\\r\\n}\\r\\n\\r\\n.anchor-container a:hover {\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n.anchor-container #arrow-upper-left {\\r\\n  -webkit-transform: rotate(225deg);\\r\\n  transform: rotate(225deg);\\r\\n\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n}\\r\\n\\r\\n.anchor-container #arrow-upper-right {\\r\\n  -webkit-transform: rotate(315deg);\\r\\n  transform: rotate(315deg);\\r\\n\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n.anchor-container #arrow-lower-left {\\r\\n  -webkit-transform: rotate(135deg);\\r\\n  transform: rotate(135deg);\\r\\n\\r\\n  position: absolute;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n}\\r\\n\\r\\n.anchor-container #arrow-lower-right {\\r\\n  -webkit-transform: rotate(45deg);\\r\\n  transform: rotate(45deg);\\r\\n\\r\\n  position: absolute;\\r\\n  bottom: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\"","module.exports = \"<mat-card appSnap [snapSetting]=\\\"snapSetting\\\" id=\\\"tile-tooltip\\\">\\n  <div class=\\\"anchor-container\\\">\\n    <a>\\n      <mat-icon class=\\\"corner\\\" id=\\\"arrow-upper-left\\\" (click)=\\\"snapSetting = 'upperLeft'\\\">arrow_forward</mat-icon>\\n    </a>\\n    <a>\\n      <mat-icon class=\\\"corner\\\" id=\\\"arrow-upper-right\\\" (click)=\\\"snapSetting = 'upperRight'\\\">arrow_forward</mat-icon>\\n    </a>\\n    <a>\\n      <mat-icon id=\\\"center\\\" (click)=\\\"snapSetting = 'free'\\\">all_out</mat-icon>\\n    </a>\\n    <a>\\n      <mat-icon class=\\\"corner\\\" id=\\\"arrow-lower-left\\\" (click)=\\\"snapSetting = 'lowerLeft'\\\">arrow_forward</mat-icon>\\n    </a>\\n    <a>\\n      <mat-icon class=\\\"corner\\\" id=\\\"arrow-lower-right\\\" (click)=\\\"snapSetting = 'lowerRight'\\\">arrow_forward</mat-icon>\\n    </a>\\n  </div>\\n  <div *ngIf=\\\"focusedBuildingTile\\\">\\n    <mat-card-title>{{focusedBuildingTile.name}}</mat-card-title>\\n    <mat-card-subtitle>{{focusedBuildingTile.description}}</mat-card-subtitle>\\n    <div class=\\\"repair-container\\\">\\n      {{focusedTile.health}}/{{focusedTile.maxHealth}} Health\\n      <div *ngIf=\\\"focusedTile.health < focusedTile.maxHealth\\\">\\n        <button mat-raised-button (click)=\\\"repairBuilding(focusedTile)\\\" color=\\\"accent\\\" [disabled]=\\\"!canRepairBuilding(focusedTile)\\\">\\n          Repair\\n          <div class=\\\"resource-list\\\">\\n            <div matTooltip=\\\"{{focusedBuildingTile.repairCostPerPoint * (focusedTile.maxHealth - focusedTile.health)}} {{getResource(focusedBuildingTile.repairResourceEnum).name | titlecase}}\\\"\\n              matTooltipPosition=\\\"below\\\">\\n              <img src=\\\"{{getResource(focusedBuildingTile.repairResourceEnum).iconPath}}\\\" alt=\\\"{{getResource(focusedBuildingTile.repairResourceEnum).name}}\\\">\\n              {{focusedBuildingTile.repairCostPerPoint * (focusedTile.maxHealth - focusedTile.health)}}\\n            </div>\\n          </div>\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"!focusedBuildingTile && focusedResourceTile\\\">\\n    <mat-card-title>{{focusedResourceTile.name}}</mat-card-title>\\n  </div>\\n\\n  <mat-card-content *ngIf=\\\"focusedTile\\\">\\n    <div *ngIf=\\\"focusedResourceTile\\\" class=\\\"resource-list\\\">\\n      Travel Time: {{focusedTile.buildingPath.length / this.mapService.tileAnimationSpeed / 1000 | number:'0.0-2'}}\\n      Seconds\\n      <br />\\n      Produces:\\n      <div *ngFor=\\\"let resource of focusedResources\\\">\\n        <img src=\\\"{{resource.iconPath}}\\\" alt=\\\"{{resource.name}}\\\"> {{resource.name | titlecase}}\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"focusedBuildingTile && focusedBuildingTile.upgradeBuilding\\\">\\n      <h3>Upgrade</h3>\\n      <button mat-raised-button (click)=\\\"upgradeBuilding(focusedTile)\\\" color=\\\"accent\\\" [disabled]=\\\"!canAffordUpgrade(this.mapService.buildingTiles[focusedBuildingTile.upgradeBuilding])\\\">\\n        <div class=\\\"title\\\" matTooltip=\\\"{{this.mapService.buildingTiles[focusedBuildingTile.upgradeBuilding].description}}\\\"\\n          matTooltipPosition=\\\"above\\\">\\n          {{this.mapService.buildingTiles[focusedBuildingTile.upgradeBuilding].name}}\\n        </div>\\n        <div class=\\\"resource-list\\\">\\n          <div *ngFor=\\\"let resourceCost of mapService.buildingTiles[focusedBuildingTile.upgradeBuilding].resourceCosts\\\"\\n            matTooltip=\\\"{{resourceCost.resourceCost}} {{getResource(resourceCost.resourceEnum).name | titlecase}}\\\"\\n            matTooltipPosition=\\\"below\\\">\\n            <img src=\\\"{{getResource(resourceCost.resourceEnum).iconPath}}\\\" alt=\\\"{{getResource(resourceCost.resourceEnum).name}}\\\">\\n            {{resourceCost.resourceCost}}\\n          </div>\\n        </div>\\n      </button>\\n    </div>\\n\\n    <div *ngIf=\\\"focusedTile.market\\\">\\n      Profit (Average of recent sales): {{focusedTile.market.averageRecentProfit | number:'0.0-2'}} {{getResource('GOLD').name | titlecase}}/Second\\n    </div>\\n\\n    <h3>Stats</h3>\\n      <table class=\\\"stats-container\\\">\\n        <tbody>\\n          <tr class=\\\"stat-row\\\">\\n            <td>\\n              <p>\\n                Max Health: {{focusedTile.maxHealth | number:'1.0-2'}}\\n              </p>\\n            </td>\\n            <td>\\n              <b>\\n                Level {{focusedTile.statLevels['MAXHEALTH']}}\\n              </b>\\n            </td>\\n            <td>\\n              <button class=\\\"upgrade-button\\\" color=\\\"accent\\\" mat-raised-button (click)=\\\"focusedTile.upgradeStat('MAXHEALTH')\\\"\\n                [disabled]=\\\"!focusedTile.canUpgradeStat('MAXHEALTH')\\\" matTooltip=\\\"Level {{focusedTile.statLevels['MAXHEALTH'] + 1}}: {{focusedTile.getUpgradedStat('MAXHEALTH') | number:'1.0-2'}} Max Health\\\"\\n                matTooltipPosition=\\\"below\\\">\\n                <mat-icon color=\\\"primary\\\">arrow_upward</mat-icon>\\n                <div class=\\\"resource-list\\\">\\n                  <div>\\n                    <img src=\\\"{{getResource('GOLD').iconPath}}\\\" alt=\\\"{{getResource('GOLD').name}}\\\">\\n                    {{focusedTile.statCosts['MAXHEALTH'] | number:'1.0-0'}}\\n                  </div>\\n                </div>\\n              </button>\\n            </td>\\n          </tr>\\n\\n          <tr class=\\\"stat-row\\\" *ngIf=\\\"focusedTile.market\\\">\\n            <td>\\n              <p>\\n                Sell Rate: {{1000 / focusedTile.market.sellInterval | number:'1.0-2'}} Sale{{focusedTile.market.sellInterval === 1000 ? '' : 's'}}/Second\\n              </p>\\n            </td>\\n            <td>\\n              <b>\\n                Level {{focusedTile.statLevels['SELLRATE']}}\\n              </b>\\n            </td>\\n            <td>\\n              <button class=\\\"upgrade-button\\\" color=\\\"accent\\\" mat-raised-button (click)=\\\"focusedTile.upgradeStat('SELLRATE')\\\"\\n                [disabled]=\\\"!focusedTile.canUpgradeStat('SELLRATE')\\\" matTooltip=\\\"Level {{focusedTile.statLevels['SELLRATE'] + 1}}: {{1000 / focusedTile.getUpgradedStat('SELLRATE') | number:'1.0-2'}} Sales/Second\\\"\\n                matTooltipPosition=\\\"below\\\">\\n                <mat-icon color=\\\"primary\\\">arrow_upward</mat-icon>\\n                <div class=\\\"resource-list\\\">\\n                  <div>\\n                    <img src=\\\"{{getResource('GOLD').iconPath}}\\\" alt=\\\"{{getResource('GOLD').name}}\\\">\\n                    {{focusedTile.statCosts['SELLRATE'] | number:'1.0-0'}}\\n                  </div>\\n                </div>\\n              </button>\\n            </td>\\n          </tr>\\n\\n          <tr class=\\\"stat-row\\\" *ngIf=\\\"focusedTile.market\\\">\\n            <td>\\n              <p>\\n                Sell Amount: {{focusedTile.market.sellQuantity | number:'1.0-2'}} Items/Sale\\n              </p>\\n            </td>\\n            <td>\\n              <b>\\n                Level {{focusedTile.statLevels['SELLAMOUNT']}}\\n              </b>\\n            </td>\\n            <td>\\n              <button class=\\\"upgrade-button\\\" color=\\\"accent\\\" mat-raised-button (click)=\\\"focusedTile.upgradeStat('SELLAMOUNT')\\\"\\n                [disabled]=\\\"!focusedTile.canUpgradeStat('SELLAMOUNT')\\\" matTooltip=\\\"Level {{focusedTile.statLevels['SELLAMOUNT'] + 1}}: {{focusedTile.getUpgradedStat('SELLAMOUNT') | number:'1.0-2'}} Items/Sale\\\"\\n                matTooltipPosition=\\\"below\\\">\\n                <mat-icon color=\\\"primary\\\">arrow_upward</mat-icon>\\n                <div class=\\\"resource-list\\\">\\n                  <div>\\n                    <img src=\\\"{{getResource('GOLD').iconPath}}\\\" alt=\\\"{{getResource('GOLD').name}}\\\">\\n                    {{focusedTile.statCosts['SELLAMOUNT'] | number:'1.0-0'}}\\n                  </div>\\n                </div>\\n              </button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n  </mat-card-content>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { MapService } from '../../services/map/map.service';\nimport { BuildingsService } from '../../services/buildings/buildings.service';\nimport { ResourcesService } from '../../services/resources/resources.service';\nimport { Tile, BuildingTile, ResourceTile, BuildingTileType } from '../../objects/tile';\nimport { Resource } from '../../objects/resource';\nimport { ResourceEnum } from '../../objects/resourceData';\n\n@Component({\n  selector: 'app-tile-detail',\n  templateUrl: './tile-detail.component.html',\n  styleUrls: ['./tile-detail.component.css']\n})\nexport class TileDetailComponent implements OnInit {\n  buildingTileTypes = BuildingTileType;\n  snapSetting = 'free';\n\n  constructor(public mapService: MapService,\n              public buildingsService: BuildingsService,\n              public resourcesService: ResourcesService) { }\n\n  ngOnInit() {\n  }\n\n  getResource(resourceEnum: ResourceEnum): Resource {\n    return this.resourcesService.resources.get(resourceEnum);\n  }\n\n  canAffordUpgrade(upgradeBuilding: BuildingTile) {\n    for (const resourceCost of upgradeBuilding.resourceCosts) {\n      if (this.getResource(resourceCost.resourceEnum).amount < resourceCost.resourceCost) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  get buildingTiles() {\n    return this.mapService.buildingTiles;\n  }\n\n  getBuildingTileArray(filterByPlaceable: boolean): BuildingTile[] {\n    let tiles = this.mapService.buildingTileArray;\n\n    if (filterByPlaceable) {\n      tiles = tiles.filter(tile => tile.placeable);\n    }\n\n    return tiles;\n  }\n\n  canAffordBuilding(buildingType: BuildingTileType): boolean {\n    return this.buildingsService.canAffordBuilding(this.buildingTiles[buildingType]);\n  }\n\n  upgradeBuilding(tile: Tile) {\n    const currentBuilding = this.mapService.buildingTiles[tile.buildingTileType];\n\n    this.buildingsService.clearBuilding(tile);\n    this.buildingsService.createBuilding(tile, currentBuilding.upgradeBuilding);\n\n    this.focusedBuildingTile = this.mapService.buildingTiles[tile.buildingTileType];\n    this.focusedResourceTile = this.mapService.resourceTiles[tile.resourceTileType];\n  }\n\n  canRepairBuilding(tile: Tile): boolean {\n    return this.buildingsService.canRepairBuilding(tile);\n  }\n\n  repairBuilding(tile: Tile) {\n    this.buildingsService.repairBuilding(tile);\n  }\n\n  get focusedTile(): Tile {\n    return this.mapService.focusedTile;\n  }\n\n  set focusedTile(value: Tile) {\n    this.mapService.focusedTile = value;\n  }\n\n  get focusedBuildingTile(): BuildingTile {\n    return this.mapService.focusedBuildingTile;\n  }\n\n  set focusedBuildingTile(value: BuildingTile) {\n    this.mapService.focusedBuildingTile = value;\n  }\n\n  get focusedResourceTile(): ResourceTile {\n    return this.mapService.focusedResourceTile;\n  }\n\n  set focusedResourceTile(value: ResourceTile) {\n    this.mapService.focusedResourceTile = value;\n  }\n\n  get focusedResources(): Resource[] {\n    return this.mapService.focusedResources;\n  }\n\n  set focusedResources(value: Resource[]) {\n    this.mapService.focusedResources = value;\n  }\n}\n","module.exports = \"/* UpgradesComponent's private CSS styles */\\r\\n.upgrades {\\r\\n  margin: 0 0 2em 0;\\r\\n  list-style-type: none;\\r\\n  padding: 0;\\r\\n  /* width: 25em; */\\r\\n}\\r\\n.upgrades mat-expansion-panel {\\r\\n  margin: 0;\\r\\n}\\r\\n.upgrades mat-expansion-panel-header {\\r\\n  height: 30px !important;\\r\\n}\\r\\n.upgrades mat-card-subtitle {\\r\\n  position: absolute;\\r\\n  top: 10px;\\r\\n  right: 10px;\\r\\n  font-weight: bold;\\r\\n}\\r\\n.upgrades button {\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n  margin: .5em;\\r\\n  padding: .4em 0;\\r\\n  height: 3.6em;\\r\\n  width: 100%;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.upgrades button:hover {\\r\\n  left: .1em;\\r\\n}\\r\\n.upgrades button.mat-disabled {\\r\\n  cursor: default;\\r\\n}\\r\\n.upgrades .badge {\\r\\n  display: inline-block;\\r\\n  font-size: small;\\r\\n  color: white;\\r\\n  padding: 0.8em 0.7em 0 0.7em;\\r\\n  background-color: #607D8B;\\r\\n  line-height: 1em;\\r\\n  position: absolute;\\r\\n  right: -9px;\\r\\n  top: 1px;\\r\\n  height: 1.8em;\\r\\n  min-width: 16px;\\r\\n  text-align: center;\\r\\n  margin-right: .8em;\\r\\n  border-radius: 0 4px 4px 0;\\r\\n}\\r\\nbutton {\\r\\n  background-color: #eee;\\r\\n  border: none;\\r\\n  padding: 5px 10px;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n  cursor: hand;\\r\\n  font-family: Arial;\\r\\n}\\r\\n.upgrades {\\r\\n  text-align: center;\\r\\n}\\r\\n.upgrades.slim-interface button {\\r\\n  width: auto;\\r\\n  height: auto;\\r\\n}\\r\\n.upgrade {\\r\\n  display: inline-block;\\r\\n  max-width: 300px;\\r\\n  width: 15vw;\\r\\n}\\r\\n.resource-list {\\r\\n  text-align: center;\\r\\n}\\r\\n.resource-list div {\\r\\n  display: inline-block;\\r\\n}\\r\\n.resource-list img {\\r\\n  width: 16px;\\r\\n  height: 16px;\\r\\n}\\r\\n\"","module.exports = \"<mat-checkbox class=\\\"hidePurchased\\\" checked=\\\"true\\\" [(ngModel)]=\\\"hidePurchasedUpgrades\\\">Hide Purchased Upgrades</mat-checkbox>\\n<br />\\n<br />\\n\\n<div class=\\\"upgrades\\\" [ngClass]=\\\"{'slim-interface': settingsService.slimInterface}\\\">\\n  <div *ngIf=\\\"!settingsService.slimInterface\\\">\\n    <mat-card class=\\\"upgrade\\\" *ngFor=\\\"let upgrade of getUpgrades(false, hidePurchasedUpgrades, adminService.filterAccessible)\\\">\\n      <button mat-raised-button color=\\\"accent\\\" [disabled]='upgrade.purchased || !canAffordUpgrade(upgrade.id)' (click)='purchaseUpgrade(upgrade.id)'>\\n        <mat-card-title>\\n          <b>\\n            <mat-icon *ngIf=\\\"upgrade.purchased\\\" color=\\\"primary\\\">check</mat-icon>\\n          </b>\\n          {{upgrade.name}}\\n        </mat-card-title>\\n      </button>\\n      <mat-card-subtitle>{{upgradesService.getUpgradeTypeString(upgrade.id)}}</mat-card-subtitle>\\n      <mat-card-content>\\n        {{upgrade.description}}\\n        <div class=\\\"resource-list\\\">\\n          <div *ngFor=\\\"let resourceCost of upgrade.resourceCosts\\\" matTooltip=\\\"{{resourceCost.resourceCost}} {{getResource(resourceCost.resourceEnum).name | titlecase}}\\\"\\n            matTooltipPosition=\\\"below\\\">\\n            <img src=\\\"{{getResource(resourceCost.resourceEnum).iconPath}}\\\" alt=\\\"{{getResource(resourceCost.resourceEnum).name}}\\\"> {{resourceCost.resourceCost}}\\n          </div>\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <div *ngIf=\\\"settingsService.slimInterface\\\">\\n    <button mat-raised-button *ngFor=\\\"let upgrade of getUpgrades(false, hidePurchasedUpgrades, adminService.filterAccessible)\\\" color=\\\"accent\\\"\\n      [disabled]='upgrade.purchased || !canAffordUpgrade(upgrade.id)' (click)='purchaseUpgrade(upgrade.id)'>\\n    <div class=\\\"title\\\" matTooltip=\\\"{{upgrade.description}}\\\" matTooltipPosition=\\\"above\\\">\\n      <b>\\n        <mat-icon *ngIf=\\\"upgrade.purchased\\\" color=\\\"primary\\\">check</mat-icon>\\n      </b>\\n      {{upgrade.name}}\\n    </div>\\n    <div class=\\\"resource-list\\\">\\n      <div *ngFor=\\\"let resourceCost of upgrade.resourceCosts\\\" matTooltip=\\\"{{resourceCost.resourceCost}} {{getResource(resourceCost.resourceEnum).name | titlecase}}\\\"\\n        matTooltipPosition=\\\"below\\\">\\n        <img src=\\\"{{getResource(resourceCost.resourceEnum).iconPath}}\\\" alt=\\\"{{getResource(resourceCost.resourceEnum).name}}\\\">\\n        {{resourceCost.resourceCost}}\\n      </div>\\n    </div>\\n  </button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { ResourcesService } from '../../services/resources/resources.service';\nimport { ResourceEnum } from '../../objects/resourceData';\nimport { Upgrade, UpgradeType } from '../../objects/upgrade';\nimport { UpgradesService } from '../../services/upgrades/upgrades.service';\nimport { SettingsService } from '../../services/settings/settings.service';\nimport { AdminService } from '../../services/admin/admin.service';\n\n@Component({\n  selector: 'app-upgrades',\n  templateUrl: './upgrades.component.html',\n  styleUrls: ['./upgrades.component.css']\n})\nexport class UpgradesComponent implements OnInit {\n  upgradeTypes = UpgradeType;\n\n  constructor(public resourcesService: ResourcesService,\n              public upgradesService: UpgradesService,\n              public settingsService: SettingsService,\n              public adminService: AdminService) { }\n\n  ngOnInit() {\n  }\n\n  canAffordUpgrade(id: number) {\n    return this.upgradesService.getUpgrade(id).canAfford();\n  }\n\n  getUpgrades(filterByPurchased: boolean, filterByUnpurchased: boolean, filterByAccessible: boolean): Upgrade[] {\n    return this.upgradesService.getUpgrades(filterByPurchased, filterByUnpurchased, filterByAccessible);\n  }\n\n  upgradesOfType(upgradeType: string, filterByPurchased: boolean, filterByUnpurchased: boolean, filterByAccessible: boolean): Upgrade[] {\n    return this.upgradesService.getUpgrades(filterByPurchased, filterByUnpurchased, filterByAccessible, this.upgradeTypes[upgradeType]);\n  }\n\n  purchaseUpgrade(id: number) {\n    this.upgradesService.getUpgrade(id).purchaseUpgrade();\n  }\n\n  getBackgroundColor(id: number): string {\n    const upgrade = this.upgradesService.getUpgrade(id);\n\n    if (upgrade.purchased) {\n      return 'lightgreen';\n    } else if (!upgrade.canAfford()) {\n      return 'gray';\n    }\n\n    return 'lightblue';\n  }\n\n  getResource(resourceEnum: ResourceEnum) {\n    return this.resourcesService.resources.get(resourceEnum);\n  }\n\n  get hidePurchasedUpgrades(): boolean {\n    return this.upgradesService.hidePurchasedUpgrades;\n  }\n\n  set hidePurchasedUpgrades(value: boolean) {\n    this.upgradesService.hidePurchasedUpgrades = value;\n  }\n}\n","module.exports = \"/* WorkersComponent's private CSS styles */\\r\\n.workers {\\r\\n  margin: 0 0 2em 0;\\r\\n  list-style-type: none;\\r\\n  padding: 0;\\r\\n  width: 100%;\\r\\n}\\r\\n.workers mat-expansion-panel {\\r\\n  margin: 0;\\r\\n}\\r\\n.workers mat-expansion-panel-header {\\r\\n  height: 30px !important;\\r\\n}\\r\\n.workers mat-card-title {\\r\\n  text-align: left;\\r\\n}\\r\\n.workers mat-card-subtitle {\\r\\n  position: absolute;\\r\\n  top: 10px;\\r\\n  right: 10px;\\r\\n}\\r\\n.workers mat-slider {\\r\\n  width: 100%;\\r\\n  top: -22px;\\r\\n}\\r\\n.workers mat-card {\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n  margin: .5em;\\r\\n  padding: .4em 0;\\r\\n  height: 3.6em;\\r\\n  width: 100%;\\r\\n  border-radius: 4px;\\r\\n  background: antiquewhite;\\r\\n}\\r\\n.workers button {\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n  margin: .5em;\\r\\n  padding: .4em 0;\\r\\n  height: 3.6em;\\r\\n  width: 100%;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.workers button:hover {\\r\\n  color: #607D8B;\\r\\n  background-color: #DDD;\\r\\n  left: .1em;\\r\\n}\\r\\n.workers a {\\r\\n  color: #888;\\r\\n  text-decoration: none;\\r\\n  position: relative;\\r\\n  display: block;\\r\\n  width: 250px;\\r\\n}\\r\\n.workers a:hover {\\r\\n  color:#607D8B;\\r\\n}\\r\\n.workers .harvestable {\\r\\n  background-color: antiquewhite;\\r\\n}\\r\\n.worker-input {\\r\\n  width: 50px;\\r\\n  border: none;\\r\\n}\\r\\n.mat-card-subtitle {\\r\\n  z-index: 1;\\r\\n}\\r\\n.workers .badge {\\r\\n  display: inline-block;\\r\\n  font-size: small;\\r\\n  color: white;\\r\\n  padding: 0.8em 0.7em 0 0.7em;\\r\\n  background-color: #607D8B;\\r\\n  line-height: 1em;\\r\\n  position: absolute;\\r\\n  right: -9px;\\r\\n  top: 1px;\\r\\n  height: 1.8em;\\r\\n  min-width: 16px;\\r\\n  text-align: center;\\r\\n  margin-right: .8em;\\r\\n  border-radius: 0 4px 4px 0;\\r\\n}\\r\\n.path-broken-warn {\\r\\n  position: absolute;\\r\\n  top: 5px;\\r\\n  right: 125px;\\r\\n}\\r\\nbutton {\\r\\n  background-color: #eee;\\r\\n  border: none;\\r\\n  padding: 5px 10px;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n  cursor: hand;\\r\\n  font-family: Arial;\\r\\n}\\r\\nbutton:hover {\\r\\n  background-color: #cfd8dc;\\r\\n}\\r\\nbutton.delete {\\r\\n  position: relative;\\r\\n  left: 194px;\\r\\n  top: -32px;\\r\\n  background-color: gray !important;\\r\\n  color: white;\\r\\n}\\r\\n\"","module.exports = \"<ul class=\\\"workers\\\">\\n  <mat-checkbox [(ngModel)]=\\\"workersPaused\\\" color=\\\"accent\\\">Pause Workers</mat-checkbox>\\n  <mat-accordion multi=\\\"true\\\">\\n    <mat-expansion-panel expanded=\\\"true\\\" *ngFor=\\\"let worker of getWorkers(true, true, true)\\\">\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          {{worker.resourceType | titlecase}}\\n        </mat-panel-title>\\n        <mat-panel-description>\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n\\n      <button mat-raised-button [color]=\\\"worker.canAffordToHire() ? 'accent' : 'disabled'\\\" (click)=\\\"worker.hireWorker()\\\">\\n        <mat-card-title>{{worker.workerCount}} Workers ({{worker.freeWorkers}} Idle)</mat-card-title>\\n        <mat-card-subtitle>{{worker.cost | number}} Gold</mat-card-subtitle>\\n      </button>\\n\\n      <div *ngFor=\\\"let resourceWorker of getAccessibleResourceWorkers(worker)\\\">\\n        <mat-card [ngClass]=\\\"{'resource-disabled': !canHarvest(resourceWorker.resourceEnum)}\\\"\\n        *ngIf=\\\"shouldShowResource(resourceWorker.resourceEnum)\\\" matTooltip=\\\"{{getTooltipMessage(resourceWorker.resourceEnum)}}\\\" matTooltipPosition=\\\"right\\\">\\n          <mat-card-title [style.color]=\\\"canHarvest(resourceWorker.resourceEnum) ? 'black' : 'red'\\\">\\n            {{getResource(resourceWorker.resourceEnum).name | titlecase}}\\n          </mat-card-title>\\n          <div class=\\\"path-broken-warn\\\" *ngIf=\\\"!pathAvailable(resourceWorker.resourceEnum)\\\">(Path Broken)</div>\\n          <mat-card-subtitle>\\n            Workers: <input class=\\\"worker-input\\\" type=\\\"number\\\" min=\\\"0\\\" [max]=\\\"worker.workerCount\\\"\\n              [(ngModel)]=\\\"resourceWorker.sliderSetting\\\" (input)=\\\"checkSliderValue(resourceWorker.resourceEnum)\\\" (change)=\\\"updateResourceWorker(resourceWorker.resourceEnum, resourceWorker.sliderSetting)\\\"/>\\n          </mat-card-subtitle>\\n          <mat-slider [color]=\\\"resourceWorker.sliderSettingValid ? 'accent' : 'warn'\\\" [id]=\\\"resourceWorker.resourceEnum\\\" [max]=\\\"worker.workerCount\\\"\\n              [tickInterval]=\\\"1\\\" [(ngModel)]=\\\"resourceWorker.sliderSetting\\\" (input)=\\\"checkSliderValue($event)\\\" (change)=\\\"updateResourceWorker($event)\\\">\\n          </mat-slider>\\n        </mat-card>\\n      </div>\\n    </mat-expansion-panel>\\n  </mat-accordion>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Resource } from '../../objects/resource';\nimport { ResourceType, ResourceEnum } from '../../objects/resourceData';\nimport { Worker } from '../../objects/worker';\nimport { ResourcesService } from '../../services/resources/resources.service';\nimport { WorkersService } from '../../services/workers/workers.service';\nimport { TooltipService } from './../../services/tooltip/tooltip.service';\nimport { AdminService } from '../../services/admin/admin.service';\n\n@Component({\n  selector: 'app-workers',\n  templateUrl: './workers.component.html',\n  styleUrls: ['./workers.component.css']\n})\nexport class WorkersComponent implements OnInit {\n  resourceTypes = ResourceType;\n\n  constructor(protected resourcesService: ResourcesService,\n              protected workersService: WorkersService,\n              protected tooltipService: TooltipService,\n              protected adminService: AdminService) { }\n\n  ngOnInit() {\n  }\n\n  getWorkers(filterByAccessible: boolean, filterByWorkable: boolean, filterByHarvestable: boolean): Worker[] {\n    return this.workersService.getWorkers(filterByAccessible, filterByWorkable, filterByHarvestable);\n  }\n\n  public getWorker(resourceType: ResourceType) {\n    return this.workersService.workers.get(resourceType);\n  }\n\n  getResource(resourceEnum: ResourceEnum): Resource {\n    return this.resourcesService.resources.get(resourceEnum);\n  }\n\n  getAccessibleResourceWorkers(worker: Worker) {\n    return worker.getResourceWorkers(true);\n  }\n\n  canAffordToHarvest(resourceEnum: ResourceEnum): boolean {\n    return this.workersService.getWorker(resourceEnum).canAffordToHarvest(resourceEnum);\n  }\n\n  canHarvest(resourceEnum: ResourceEnum): boolean {\n    return this.resourcesService.resources.get(resourceEnum).canHarvest() && this.canAffordToHarvest(resourceEnum);\n  }\n\n  shouldShowResource(resourceEnum: ResourceEnum): boolean {\n    const resource = this.resourcesService.resources.get(resourceEnum);\n    const resourceWorker = this.workersService.getResourceWorker(resourceEnum);\n\n    return (resourceWorker.workable && resource.harvestable) || !this.adminService.filterAccessible;\n  }\n\n  getTooltipMessage(resourceEnum: ResourceEnum): string {\n    return this.tooltipService.getWorkerTooltip(resourceEnum);\n  }\n\n  checkSliderValue(eventOrEnum: any | string) {\n    const resourceEnum = typeof(eventOrEnum) === 'string' ? eventOrEnum : eventOrEnum.source._elementRef.nativeElement.id;\n\n    const resource = this.resourcesService.resources.get(resourceEnum);\n    const worker = this.getWorker(resource.resourceType);\n    const resourceWorker = this.workersService.getResourceWorker(resourceEnum);\n\n    const newValue = typeof(eventOrEnum) === 'string' ? resourceWorker.sliderSetting : +eventOrEnum.value;\n\n    resourceWorker.sliderSettingValid = worker.freeWorkers + resourceWorker.workerCount - newValue >= 0;\n  }\n\n  updateResourceWorker(eventOrEnum: any | string, value = -1) {\n    const resourceEnum = typeof(eventOrEnum) === 'string' ? eventOrEnum : eventOrEnum.source._elementRef.nativeElement.id;\n    if (value === -1) {\n      value = +eventOrEnum.value;\n    }\n\n    this.workersService.getWorker(resourceEnum).updateResourceWorker(resourceEnum, value);\n  }\n\n  pathAvailable(resourceEnum: ResourceEnum): boolean {\n    return this.resourcesService.resources.get(resourceEnum).pathAvailable;\n  }\n\n  get workersPaused(): boolean {\n    return this.workersService.workersPaused;\n  }\n\n  set workersPaused(value: boolean) {\n    this.workersService.workersPaused = value;\n  }\n}\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\n\nimport { MapService } from './../../services/map/map.service';\n\n@Directive({\n  selector: '[appCrop]'\n})\nexport class CropDirective {\n\n  constructor(protected element: ElementRef,\n              protected renderer: Renderer2,\n              protected mapService: MapService) {\n  // const tileCropDetail = this.mapService.getTile(\n  //   +element.nativeElement.attributes['x'].value, +element.nativeElement.attributes['y'].value);\n\n  this.renderer.setStyle(element.nativeElement, 'clip', 'rect(0, 0, 16, 16)');\n  }\n}\n","import { Directive, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\r\n\r\nimport { Entity } from '../../objects/entity';\r\nimport { Tile, ResourceTile, BuildingTile } from '../../objects/tile';\r\nimport { Vector } from '../../objects/vector';\r\nimport { ResourcesService } from './../../services/resources/resources.service';\r\nimport { SettingsService } from './../../services/settings/settings.service';\r\nimport { EnemyService } from '../../services/enemy/enemy.service';\r\nimport { FighterService } from './../../services/fighter/fighter.service';\r\nimport { BuildingsService } from './../../services/buildings/buildings.service';\r\nimport { MapService, CursorTool } from './../../services/map/map.service';\r\nimport { Tick } from './../../services/tick/tick.service';\r\n\r\ndeclare var d3: any;\r\n\r\n@Directive({\r\n  selector: '[appMap]'\r\n})\r\nexport class MapDirective implements AfterViewInit, Tick {\r\n  canvas;\r\n  context: CanvasRenderingContext2D;\r\n  canvasContainer: Element;\r\n\r\n  lastEnemyReprosessTime = Date.now();\r\n  enemyReprocessDelay = 2000;\r\n\r\n  tileTooltip: any;\r\n  fighterTooltip: any;\r\n\r\n  headerPixels = 64;\r\n\r\n  imageElements = {};\r\n\r\n  transform = d3.zoomIdentity;\r\n  refreshTimer;\r\n  lowFramerateActive = false;\r\n\r\n  constructor(protected element: ElementRef,\r\n              protected renderer: Renderer2,\r\n              protected resourcesService: ResourcesService,\r\n              protected settingsService: SettingsService,\r\n              protected enemyService: EnemyService,\r\n              protected fighterService: FighterService,\r\n              protected buildingsService: BuildingsService,\r\n              protected mapService: MapService) { }\r\n\r\n  ngAfterViewInit() {\r\n    this.canvas = d3.select('canvas');\r\n    this.context = this.canvas.node().getContext('2d');\r\n    this.canvasContainer = document.getElementById('canvas-container');\r\n\r\n    this.tileTooltip = document.getElementById('tile-tooltip');\r\n    this.fighterTooltip = document.getElementById('fighter-tooltip');\r\n\r\n    const imageElementContainer = document.getElementById('tile-images');\r\n    for (let i = 0; i < imageElementContainer.children.length; i++) {\r\n      const imageElement = imageElementContainer.children[i];\r\n      this.imageElements[imageElement.id] = imageElement;\r\n    }\r\n\r\n    this.context.font = 'bold 4px Arial';\r\n\r\n    this.resizeCanvas();\r\n\r\n    this.transform.k = 2;\r\n\r\n    this.canvas.call(d3.zoom()\r\n        .filter(this.scrollFilter(this))\r\n        .scaleExtent([1, 5])\r\n        .translateExtent([[0, 0], [this.mapService.gridWidth * this.mapService.tilePixelSize,\r\n                                   this.mapService.gridHeight * this.mapService.tilePixelSize]])\r\n        .on('zoom', this.zoomed(this)));\r\n\r\n    this.canvas.on('mousedown mousemove mouseup', this.clickTile(this));\r\n\r\n    this.refreshTimer = d3.interval(this.refreshCanvas(this), 25);\r\n  }\r\n\r\n  tick(elapsed: number) {\r\n\r\n  }\r\n\r\n  scrollFilter(self: MapDirective) {\r\n    return function(elapsed) {\r\n      return d3.event.type !== 'dblclick' && (d3.event.type !== 'mousedown' || d3.event.button === 2);\r\n    };\r\n  }\r\n\r\n  zoomed(self: MapDirective) {\r\n    return function(elapsed) {\r\n      self.transform = d3.event.transform;\r\n    };\r\n  }\r\n\r\n  clickTile(self: MapDirective) {\r\n    return async function(elapsed) {\r\n      if (!d3.event.buttons && d3.event.type !== 'mouseup') {\r\n        return;\r\n      }\r\n\r\n      const coordinates = d3.mouse(this);\r\n      coordinates[0] = Math.floor(self.transform.invertX(coordinates[0]) / self.mapService.tilePixelSize);\r\n      coordinates[1] = Math.floor(self.transform.invertY(coordinates[1]) / self.mapService.tilePixelSize);\r\n\r\n      const tile = self.mapService.tiledMap[coordinates[0] + coordinates[1] * self.mapService.mapWidth];\r\n\r\n      let shouldUpdateEnemies = false;\r\n\r\n      if (d3.event.type === 'mousedown' && self.mapService.cursorTool === CursorTool.TileDetail) {\r\n        self.updateTileTooltip(coordinates);\r\n      } else if (d3.event.type === 'mousedown' && self.mapService.cursorTool === CursorTool.FighterDetail) {\r\n        self.updateFighterTooltip(coordinates);\r\n      } else if (self.mapService.cursorTool === CursorTool.PlaceBuildings && self.buildingsService.selectedBuilding) {\r\n        const buildingCreated = self.buildingsService.createBuilding(tile, self.buildingsService.selectedBuilding.tileType);\r\n        shouldUpdateEnemies = d3.event.type === 'mouseup' && buildingCreated;\r\n      } else if (self.mapService.cursorTool === CursorTool.ClearBuildings) {\r\n        const buildingCleared = self.buildingsService.clearBuilding(tile);\r\n        shouldUpdateEnemies = d3.event.type === 'mouseup' && buildingCleared;\r\n      } else if (d3.event.type === 'mousedown' &&\r\n        self.mapService.cursorTool === CursorTool.PlaceFighters && self.fighterService.selectedFighterType) {\r\n        self.fighterService.createFighter(tile, self.fighterService.selectedFighterType);\r\n      }\r\n\r\n      if (shouldUpdateEnemies && Date.now() - self.lastEnemyReprosessTime > self.enemyReprocessDelay) {\r\n        self.lastEnemyReprosessTime = Date.now();\r\n        await self.enemyService.recalculateTargets();\r\n      }\r\n    };\r\n  }\r\n\r\n  updateTileTooltip(coordinates: number[]) {\r\n    const focusedTile = this.mapService.tiledMap[coordinates[0] + coordinates[1] * this.mapService.mapWidth];\r\n\r\n    if (focusedTile.buildingTileType || focusedTile.resourceTileType) {\r\n      this.mapService.focusedTile = focusedTile;\r\n      this.mapService.focusedBuildingTile = this.mapService.buildingTiles[focusedTile.buildingTileType];\r\n      this.mapService.focusedResourceTile = this.mapService.resourceTiles[focusedTile.resourceTileType];\r\n      this.mapService.focusedResources = this.mapService.focusedResourceTile ?\r\n        this.mapService.focusedResourceTile.resourceEnums.map(rEnum => this.resourcesService.resources.get(rEnum)) : undefined;\r\n    } else {\r\n      this.mapService.focusedTile = undefined;\r\n      this.mapService.focusedBuildingTile = undefined;\r\n      this.mapService.focusedResourceTile = undefined;\r\n      this.mapService.focusedResources = undefined;\r\n    }\r\n  }\r\n\r\n  updateFighterTooltip(coordinates: number[]) {\r\n    const focusedTile = this.mapService.tiledMap[coordinates[0] + coordinates[1] * this.mapService.mapWidth];\r\n    const focusedFighter = this.fighterService.fighters.find(fighter => fighter.currentTile === focusedTile);\r\n\r\n    if (focusedFighter) {\r\n      this.mapService.focusedTile = focusedTile;\r\n      this.mapService.focusedFighter = focusedFighter;\r\n    } else {\r\n      this.mapService.focusedTile = undefined;\r\n      this.mapService.focusedFighter = undefined;\r\n    }\r\n  }\r\n\r\n  resizeCanvas() {\r\n    this.element.nativeElement.width = this.canvasContainer.clientWidth;\r\n    this.element.nativeElement.height = window.innerHeight - this.headerPixels;\r\n    this.mapService.canvasPixelWidth = this.canvasContainer.clientWidth;\r\n    this.mapService.canvasPixelHeight = window.innerHeight - this.headerPixels;\r\n  }\r\n\r\n  refreshCanvas(self: MapDirective) {\r\n    return function (elapsed) {\r\n      if (self.lowFramerateActive !== self.settingsService.mapLowFramerate) {\r\n        self.lowFramerateActive = self.settingsService.mapLowFramerate;\r\n\r\n        self.refreshTimer.stop();\r\n        self.refreshTimer = d3.interval(self.refreshCanvas(self),\r\n        self.lowFramerateActive ? self.mapService.lowFramerate : self.mapService.highFramerate);\r\n      }\r\n\r\n      self.resizeCanvas();\r\n\r\n      self.context.save();\r\n      self.context.clearRect(0, 0, self.mapService.canvasPixelWidth, self.mapService.canvasPixelHeight);\r\n      self.context.translate(self.transform.x, self.transform.y);\r\n      self.context.scale(self.transform.k, self.transform.k);\r\n      self.drawCanvas();\r\n      self.context.restore();\r\n    };\r\n  }\r\n\r\n  drawCanvas() {\r\n    const upperLeftPixel = [(-this.transform.x - this.mapService.tilePixelSize * 5) / this.transform.k,\r\n                            (-this.transform.y - this.mapService.tilePixelSize * 5) / this.transform.k];\r\n    const lowerRightPixel =\r\n      [upperLeftPixel[0] + (this.mapService.canvasPixelWidth + this.mapService.tilePixelSize * 5) / this.transform.k,\r\n      upperLeftPixel[1] + (this.mapService.canvasPixelHeight + this.mapService.tilePixelSize * 5) / this.transform.k];\r\n\r\n    for (const tile of this.mapService.tiledMap) {\r\n      if (tile.x < upperLeftPixel[0] || tile.x > lowerRightPixel[0] ||\r\n          tile.y < upperLeftPixel[1] || tile.y > lowerRightPixel[1]) {\r\n        continue;\r\n      }\r\n\r\n      const mapTileImage = this.imageElements[tile.mapTileType.toLowerCase()];\r\n      this.drawTile(tile.position, mapTileImage);\r\n\r\n      if (tile.buildingTileType) {\r\n        const buildingTileImage = this.imageElements[tile.buildingTileType.toLowerCase()];\r\n        this.drawTile(tile.position, buildingTileImage);\r\n      }\r\n\r\n      if (tile.resourceTileType) {\r\n        const resourceTileImage = this.imageElements[tile.resourceTileType.toLowerCase().replace(' ', '-')];\r\n        this.drawTile(tile.position, resourceTileImage, 1, tile.health / tile.maxHealth);\r\n      }\r\n\r\n      if (tile.health === 0) {\r\n        this.context.globalAlpha = 0.5;\r\n        this.drawTile(tile.position, this.imageElements['disabled']);\r\n        this.context.globalAlpha = 1;\r\n      } else if (tile.buildingTileType && !tile.buildingRemovable && this.mapService.cursorTool === CursorTool.ClearBuildings) {\r\n        this.context.globalAlpha = 0.5;\r\n        this.drawTile(tile.position, this.imageElements['locked']);\r\n        this.context.globalAlpha = 1;\r\n      }\r\n    }\r\n\r\n    for (const resourceAnimation of this.mapService.resourceAnimations) {\r\n      const resourceTileImage = this.imageElements[\r\n          this.resourcesService.resources.get(resourceAnimation.resourceEnum).name.toLowerCase().replace(' ', '-')];\r\n      this.context.drawImage(resourceTileImage, resourceAnimation.x, resourceAnimation.y,\r\n          this.mapService.tilePixelSize / 2, this.mapService.tilePixelSize / 2);\r\n        this.drawTile(resourceAnimation.position, resourceTileImage, 0.5);\r\n\r\n      this.context.fillStyle = this.settingsService.resourceAnimationColors[resourceAnimation.animationType];\r\n\r\n      this.context.fillText(Math.floor(resourceAnimation.multiplier).toString(),\r\n        resourceAnimation.x + this.mapService.tilePixelSize / 2, resourceAnimation.y + this.mapService.tilePixelSize / 2);\r\n    }\r\n\r\n    for (const enemy of this.enemyService.enemies) {\r\n      const enemyTileImage = this.imageElements[enemy.name.toLowerCase().replace(' ', '-')];\r\n      this.context.drawImage(enemyTileImage, enemy.x, enemy.y, this.mapService.tilePixelSize, this.mapService.tilePixelSize);\r\n      this.drawTile(enemy.position, enemyTileImage, 1, enemy.health / enemy.maxHealth);\r\n    }\r\n\r\n    for (const fighter of this.fighterService.fighters) {\r\n      const fighterTileImage = this.imageElements[fighter.name.toLowerCase().replace(' ', '-')];\r\n      this.context.drawImage(fighterTileImage, fighter.x, fighter.y, this.mapService.tilePixelSize, this.mapService.tilePixelSize);\r\n      this.drawTile(fighter.position, fighterTileImage, 1, fighter.health / fighter.maxHealth);\r\n    }\r\n\r\n    for (const projectile of this.mapService.projectiles) {\r\n      const projectileTileImage = this.imageElements[projectile.name.toLowerCase().replace(' ', '-')];\r\n\r\n      this.context.translate(projectile.x, projectile.y);\r\n      this.context.rotate(projectile.rotation);\r\n      this.context.drawImage(projectileTileImage, -this.mapService.tilePixelSize / 2, -this.mapService.tilePixelSize / 2,\r\n                             this.mapService.tilePixelSize, this.mapService.tilePixelSize);\r\n      this.drawTile(new Vector(-this.mapService.tilePixelSize / 2, -this.mapService.tilePixelSize / 2), projectileTileImage);\r\n      this.context.rotate(-projectile.rotation);\r\n      this.context.translate(-projectile.x, -projectile.y);\r\n    }\r\n\r\n    if (this.mapService.focusedTile) {\r\n      const tooltipPosition = this.getTooltipPosition(this.mapService.focusedTile.position);\r\n      this.tileTooltip.style.setProperty('--detail-tooltip-left', tooltipPosition.x + 'px');\r\n      this.tileTooltip.style.setProperty('--detail-tooltip-top', tooltipPosition.y + 'px');\r\n\r\n      this.context.globalAlpha = 0.5;\r\n      this.context.fillStyle = 'cyan';\r\n      for (const pathTile of this.mapService.focusedTile.buildingPath) {\r\n        this.context.fillRect(pathTile.x, pathTile.y, this.mapService.tilePixelSize, this.mapService.tilePixelSize);\r\n      }\r\n      this.context.fillStyle = 'black';\r\n      this.context.globalAlpha = 1;\r\n    }\r\n\r\n    if (this.mapService.focusedFighter) {\r\n      const fighter = this.mapService.focusedFighter;\r\n\r\n      const tooltipPosition = this.getTooltipPosition(fighter.position);\r\n      this.fighterTooltip.style.setProperty('--detail-tooltip-left', tooltipPosition.x + 'px');\r\n      this.fighterTooltip.style.setProperty('--detail-tooltip-top', tooltipPosition.y + 'px');\r\n\r\n      this.context.globalAlpha = 0.5;\r\n      this.context.fillStyle = 'cyan';\r\n\r\n      this.context.beginPath();\r\n      this.context.arc(fighter.x + this.mapService.tilePixelSize / 2, fighter.y + this.mapService.tilePixelSize / 2,\r\n        fighter.attackRange * this.mapService.tilePixelSize, 0, 2 * Math.PI);\r\n      this.context.stroke();\r\n\r\n      this.context.fillStyle = 'black';\r\n      this.context.globalAlpha = 1;\r\n    }\r\n  }\r\n\r\n  getTooltipPosition(targetPosition: Vector): Vector {\r\n    return new Vector((targetPosition.x + this.mapService.tilePixelSize) * this.transform.k + this.transform.x,\r\n                      targetPosition.y * this.transform.k + this.transform.y - this.tileTooltip.clientHeight);\r\n  }\r\n\r\n  drawTile(position: Vector, image: HTMLImageElement, scale: number = 1, healthRatio: number = 1) {\r\n    this.context.drawImage(image, position.x, position.y, this.mapService.tilePixelSize * scale, this.mapService.tilePixelSize * scale);\r\n\r\n    if (healthRatio > 0 && healthRatio < 1) {\r\n      this.context.fillStyle = 'red';\r\n      this.context.fillRect(position.x, position.y + this.mapService.tilePixelSize, this.mapService.tilePixelSize  * healthRatio, -2);\r\n      this.context.fillStyle = 'black';\r\n      this.context.strokeRect(position.x, position.y + this.mapService.tilePixelSize, this.mapService.tilePixelSize, -2);\r\n    }\r\n  }\r\n}\r\n","import { Directive, Renderer2, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appNoScroll]'\n})\nexport class NoScrollDirective {\n  constructor(protected element: ElementRef,\n              protected renderer: Renderer2) {\n    element.nativeElement.addEventListener('mousewheel', function(e) {\n      e.preventDefault();\n    });\n  }\n}\n","import { Directive, HostListener, ElementRef, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appSnap]'\n})\nexport class SnapDirective {\n  constructor(private element: ElementRef) { }\n\n  @Input('snapSetting') snapSetting: string;\n\n  @HostListener('click') onClick() {\n    switch (this.snapSetting) {\n      case 'upperLeft': {\n        this.element.nativeElement.style.left = 0;\n        this.element.nativeElement.style.top = '72px';\n        this.element.nativeElement.style.right = 'unset';\n        this.element.nativeElement.style.bottom = 'unset';\n        break;\n      } case 'upperRight': {\n        this.element.nativeElement.style.left = 'unset';\n        this.element.nativeElement.style.top = '72px';\n        this.element.nativeElement.style.right = 0;\n        this.element.nativeElement.style.bottom = 'unset';\n        break;\n      } case 'lowerLeft': {\n        this.element.nativeElement.style.left = 0;\n        this.element.nativeElement.style.top = 'unset';\n        this.element.nativeElement.style.right = 'unset';\n        this.element.nativeElement.style.bottom = 0;\n        break;\n      } case 'lowerRight': {\n        this.element.nativeElement.style.left = 'unset';\n        this.element.nativeElement.style.top = 'unset';\n        this.element.nativeElement.style.right = 0;\n        this.element.nativeElement.style.bottom = 0;\n        break;\n      } case 'free': {\n        this.element.nativeElement.style.left = 'var(--detail-tooltip-left)';\n        this.element.nativeElement.style.top = 'var(--detail-tooltip-top)';\n        this.element.nativeElement.style.right = 'unset';\n        this.element.nativeElement.style.bottom = 'unset';\n        break;\n      }\n    }\n  }\n}\n","export const canvasWidth = 750;\r\nexport const canvasHeight = 750;\r\n\r\nexport const tilePixelSize = 16;\r\nexport const gridWidth = 150;\r\nexport const gridHeight = 150;\r\n","import { NgModule } from '@angular/core';\n\nimport { MatButtonModule, MatCheckboxModule, MatSortModule } from '@angular/material';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTableModule } from '@angular/material/table';\n\nconst modules = [\n  MatButtonModule,\n  MatCheckboxModule,\n  MatProgressBarModule,\n  MatChipsModule,\n  MatIconModule,\n  MatTooltipModule,\n  MatCardModule,\n  MatGridListModule,\n  MatTabsModule,\n  MatExpansionModule,\n  MatDividerModule,\n  MatInputModule,\n  MatSelectModule,\n  MatListModule,\n  MatSliderModule,\n  MatDialogModule,\n  MatStepperModule,\n  MatSnackBarModule,\n  MatBadgeModule,\n  MatButtonToggleModule,\n  MatSidenavModule,\n  MatToolbarModule,\n  MatTableModule,\n  MatSortModule\n];\n\n@NgModule({\n  imports: modules,\n  exports: modules\n})\nexport class MaterialImportModule { }\n","import { ResourceEnum } from './resourceData';\r\nimport { BuildingTileType, Tile } from './tile';\r\nimport { Vector } from './vector';\r\nimport { tilePixelSize } from '../globals';\r\nimport { Tick } from './../services/tick/tick.service';\r\nimport { ResourcesService } from '../services/resources/resources.service';\r\nimport { EnemyService } from './../services/enemy/enemy.service';\r\nimport { StoreService } from './../services/store/store.service';\r\nimport { MapService } from './../services/map/map.service';\r\n\r\nexport enum FighterStat {\r\n  Attack = 'ATTACK',\r\n  Defense = 'DEFENSE',\r\n  Range = 'RANGE',\r\n  MovementSpeed = 'MOVEMENTSPEED',\r\n  FireRate = 'FIRERATE',\r\n  MaxHealth = 'MAXHEALTH'\r\n}\r\n\r\nexport enum ResourceAnimationType {\r\n  PlayerSpawned = 'PLAYERSPAWNED',\r\n  WorkerSpawned = 'WORKERSPAWNED',\r\n  Sold = 'SOLD'\r\n}\r\n\r\nexport class Entity implements Tick {\r\n  name: string;\r\n\r\n  position: Vector;\r\n  spawnPosition: Vector;\r\n  currentTile: Tile;\r\n\r\n  tilePath: Tile[];\r\n  pathStep: number;\r\n  pathingDone = false;\r\n  animationSpeed: number;\r\n\r\n  health: number;\r\n  maxHealth: number;\r\n\r\n  public constructor(name: string, position: Vector, currentTile: Tile, health: number, animationSpeed = 0.003, tilePath: Tile[] = []) {\r\n    this.name = name;\r\n\r\n    this.position = position;\r\n    this.spawnPosition = new Vector(position.x, position.y);\r\n    this.currentTile = currentTile;\r\n\r\n    this.tilePath = tilePath;\r\n    this.pathStep = 0;\r\n    this.pathingDone = false;\r\n\r\n    this.health = health;\r\n    this.maxHealth = health;\r\n\r\n    this.animationSpeed = animationSpeed;\r\n  }\r\n\r\n  tick(elapsed: number, deltaTime: number) { }\r\n\r\n  public get x(): number {\r\n    return this.position.x;\r\n  }\r\n\r\n  public set x(value: number) {\r\n    this.position.x = value;\r\n  }\r\n\r\n  public get y(): number {\r\n    return this.position.y;\r\n  }\r\n\r\n  public set y(value: number) {\r\n    this.position.y = value;\r\n  }\r\n\r\n  updatePathPosition(deltaTime: number) {\r\n    if (this.tilePath === undefined || this.pathStep >= this.tilePath.length - 1) {\r\n      return;\r\n    }\r\n\r\n    let totalDistance = this.animationSpeed * deltaTime;\r\n\r\n    while (totalDistance > 0) {\r\n      const stepDistance = Math.min(1, totalDistance);\r\n      totalDistance -= 1;\r\n\r\n      const currentTile = this.tilePath[this.pathStep];\r\n      const destinationTile = this.tilePath[this.pathStep + 1];\r\n\r\n      this.x += (destinationTile.x - currentTile.x) * stepDistance;\r\n      this.y += (destinationTile.y - currentTile.y) * stepDistance;\r\n\r\n      const offset = this.position.subtract(new Vector(currentTile.x, currentTile.y));\r\n\r\n      if (Math.abs(offset.x) >= tilePixelSize || Math.abs(offset.y) >= tilePixelSize) {\r\n        this.pathStep++;\r\n        this.currentTile = destinationTile;\r\n\r\n        if (this.pathStep === this.tilePath.length - 1) {\r\n            this.pathingDone = true;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class Actor extends Entity {\r\n  attack: number;\r\n  defense: number;\r\n  attackRange: number;\r\n\r\n  public constructor(name: string, position: Vector, currentTile: Tile, health: number,\r\n      animationSpeed = 0.003, attack: number, defense: number, attackRange: number) {\r\n    super(name, position, currentTile, health, animationSpeed);\r\n\r\n    this.attack = attack;\r\n    this.defense = defense;\r\n    this.attackRange = attackRange;\r\n  }\r\n}\r\n\r\ninterface Target {\r\n  tile: Tile;\r\n  accessible: boolean;\r\n  wanderTarget: boolean;\r\n}\r\n\r\nexport class Enemy extends Actor {\r\n  targetableBuildingTypes: BuildingTileType[];\r\n  targets: Target[];\r\n  targetIndex: number;\r\n  pathAttempt: number;\r\n\r\n  resourcesToSteal: ResourceEnum[];\r\n  resourcesHeld: Map<ResourceEnum, number>;\r\n  totalHeld: number;\r\n  stealMax: number;\r\n  resourceCapacity: number;\r\n\r\n  public constructor(name: string, position: Vector, currentTile: Tile,\r\n      health: number, animationSpeed = 0.003, attack: number, defense: number,\r\n      attackRange: number, targetableBuildingTypes: BuildingTileType[], resourcesToSteal: ResourceEnum[],\r\n      stealMax: number, resourceCapacity: number) {\r\n    super(name, position, currentTile, health, animationSpeed, attack, defense, attackRange);\r\n\r\n    this.targetableBuildingTypes = targetableBuildingTypes;\r\n    this.targets = [];\r\n    this.targetIndex = 0;\r\n    this.pathAttempt = 0;\r\n\r\n    this.resourcesToSteal = resourcesToSteal;\r\n    this.resourcesHeld = new Map<ResourceEnum, number>();\r\n    this.totalHeld = 0;\r\n    this.stealMax = stealMax;\r\n    this.resourceCapacity = resourceCapacity;\r\n  }\r\n}\r\n\r\nexport class Fighter extends Actor {\r\n  description: string;\r\n\r\n  targetEnemy: Enemy;\r\n  cost: number;\r\n  moveable: boolean;\r\n\r\n  fireMilliseconds: number;\r\n  lastFire = 0;\r\n\r\n  statLevels = {};\r\n  statCosts = {};\r\n\r\n  resourcesService: ResourcesService;\r\n  enemyService: EnemyService;\r\n  mapService: MapService;\r\n\r\n  public constructor(name: string, position: Vector, currentTile: Tile,\r\n      health: number, animationSpeed, attack: number, defense: number,\r\n      attackRange: number, description: string, cost: number, moveable: boolean, fireMilliseconds: number,\r\n      resourcesService: ResourcesService, enemyService: EnemyService, mapService: MapService) {\r\n    super(name, position, currentTile, health, animationSpeed, attack, defense, attackRange);\r\n\r\n    this.description = description;\r\n\r\n    this.cost = cost;\r\n    this.moveable = moveable;\r\n\r\n    this.fireMilliseconds = fireMilliseconds;\r\n\r\n    this.statLevels[FighterStat.Attack] = 1;\r\n    this.statLevels[FighterStat.Defense] = 1;\r\n    this.statLevels[FighterStat.FireRate] = 1;\r\n    this.statLevels[FighterStat.MovementSpeed] = 1;\r\n    this.statLevels[FighterStat.Range] = 1;\r\n    this.statLevels[FighterStat.MaxHealth] = 1;\r\n\r\n    this.statCosts[FighterStat.Attack] = 1500;\r\n    this.statCosts[FighterStat.Defense] = 1500;\r\n    this.statCosts[FighterStat.FireRate] = 1500;\r\n    this.statCosts[FighterStat.MovementSpeed] = 1500;\r\n    this.statCosts[FighterStat.Range] = 1500;\r\n    this.statCosts[FighterStat.MaxHealth] = 1500;\r\n\r\n    this.resourcesService = resourcesService;\r\n    this.enemyService = enemyService;\r\n    this.mapService = mapService;\r\n  }\r\n\r\n  tick(elapsed: number, deltaTime: number) {\r\n    if (elapsed - this.lastFire > this.fireMilliseconds) {\r\n      const enemiesInRange = this.enemyService.enemies.filter(\r\n        enemy => Math.abs(Math.sqrt((this.x - enemy.x) ** 2 + (this.y - enemy.y) ** 2)) / 16 <= this.attackRange);\r\n\r\n      const targetedEnemy = enemiesInRange[Math.floor(Math.random() * enemiesInRange.length)];\r\n\r\n      if (targetedEnemy) {\r\n        this.mapService.spawnProjectile(this, targetedEnemy);\r\n      }\r\n\r\n      this.lastFire = elapsed;\r\n    }\r\n  }\r\n\r\n  public canUpgradeStat(stat: FighterStat): boolean {\r\n    return this.resourcesService.resources.get(ResourceEnum.Gold).amount >= this.statCosts[stat];\r\n  }\r\n\r\n  public getUpgradedStat(stat: FighterStat): number {\r\n    switch (stat) {\r\n      case FighterStat.Attack: {\r\n        return this.attack * 1.2;\r\n      } case FighterStat.Defense: {\r\n        return this.defense * 1.2;\r\n      }  case FighterStat.FireRate: {\r\n        return this.fireMilliseconds / 1.1;\r\n      } case FighterStat.MovementSpeed: {\r\n        return this.animationSpeed * 1.2;\r\n      } case FighterStat.Range: {\r\n        return this.attackRange + 1;\r\n      } case FighterStat.MaxHealth: {\r\n        return Math.floor(this.maxHealth * 1.2);\r\n      }\r\n    }\r\n  }\r\n\r\n  public upgradeStat(stat: FighterStat) {\r\n    if (!this.canUpgradeStat(stat)) {\r\n      return;\r\n    }\r\n\r\n    this.resourcesService.resources.get(ResourceEnum.Gold).addAmount(-this.statCosts[stat]);\r\n\r\n    const upgradedStat = this.getUpgradedStat(stat);\r\n    switch (stat) {\r\n      case FighterStat.Attack: {\r\n        this.attack = upgradedStat;\r\n        break;\r\n      } case FighterStat.Defense: {\r\n        this.defense = upgradedStat;\r\n        break;\r\n      }  case FighterStat.FireRate: {\r\n        this.fireMilliseconds = upgradedStat;\r\n        break;\r\n      } case FighterStat.MovementSpeed: {\r\n        this.animationSpeed = upgradedStat;\r\n        break;\r\n      } case FighterStat.Range: {\r\n        this.attackRange = upgradedStat;\r\n        break;\r\n      } case FighterStat.MaxHealth: {\r\n        this.maxHealth = upgradedStat;\r\n        this.health = this.maxHealth;\r\n      }\r\n    }\r\n\r\n    this.statLevels[stat]++;\r\n    this.statCosts[stat] *= 1.5;\r\n  }\r\n\r\n  public canHeal(): boolean {\r\n    return this.resourcesService.resources.get(ResourceEnum.Gold).amount >= this.healCost;\r\n  }\r\n\r\n  public heal() {\r\n    if (!this.canHeal()) {\r\n      return;\r\n    }\r\n\r\n    this.resourcesService.resources.get(ResourceEnum.Gold).addAmount(-this.healCost);\r\n    this.health = this.maxHealth;\r\n  }\r\n\r\n  public get healCost() {\r\n    return (this.cost / this.maxHealth) * 0.65 * (this.maxHealth - this.health);\r\n  }\r\n}\r\n\r\nexport class Projectile extends Entity {\r\n  owner: Actor;\r\n  target: Actor;\r\n\r\n  rotation: number;\r\n\r\n  hitTarget = false;\r\n\r\n  public constructor(name: string, position: Vector, currentTile: Tile,\r\n      animationSpeed = 0.003, owner: Actor, target: Actor) {\r\n    super(name, position, currentTile, 1, animationSpeed);\r\n\r\n    this.owner = owner;\r\n    this.target = target;\r\n  }\r\n\r\n  tick(elapsed: number, deltaTime: number) {\r\n    const distance = this.target.position.subtract(this.position);\r\n    const totalDistance = this.target.position.subtract(this.spawnPosition);\r\n\r\n    if (distance.magnitude < tilePixelSize) {\r\n      this.target.health -= this.owner.attack;\r\n      this.hitTarget = true;\r\n    }\r\n\r\n    const gradientY = this.target.y - this.y;\r\n    const gradientX = this.target.x - this.x;\r\n    const angle = Math.atan2(gradientY, gradientX) + (Math.PI / 2);\r\n\r\n    totalDistance.x *= this.animationSpeed * deltaTime;\r\n    totalDistance.y *= this.animationSpeed * deltaTime;\r\n\r\n    this.position = this.position.add(totalDistance);\r\n    this.rotation = angle;\r\n  }\r\n}\r\n\r\nexport class ResourceAnimation extends Entity {\r\n  animationType: ResourceAnimationType;\r\n\r\n  resourceEnum: ResourceEnum;\r\n  multiplier: number;\r\n\r\n  spawnedByPlayer: boolean;\r\n\r\n  resourcesService: ResourcesService;\r\n  storeService: StoreService;\r\n\r\n  public constructor(position: Vector, currentTile: Tile, animationSpeed = 0.003, tilePath: Tile[],\r\n    animationType: ResourceAnimationType, resourceEnum: ResourceEnum, multiplier: number, spawnedByPlayer: boolean,\r\n      resourcesService: ResourcesService, storeService: StoreService) {\r\n    super('', position, currentTile, -1, animationSpeed, tilePath);\r\n\r\n    this.animationType = animationType;\r\n\r\n    this.resourceEnum = resourceEnum;\r\n    this.multiplier = multiplier;\r\n    this.spawnedByPlayer = spawnedByPlayer;\r\n\r\n    this.resourcesService = resourcesService;\r\n    this.storeService = storeService;\r\n  }\r\n\r\n  tick(elapsed: number, deltaTime: number) {\r\n    this.updatePathPosition(deltaTime);\r\n  }\r\n\r\n  finishAnimation() {\r\n    this.resourcesService.resources.get(this.resourceEnum).finishResourceAnimation(this.multiplier, this.animationType);\r\n  }\r\n}\r\n","export enum MessageSource {\n  Admin = 'ADMIN',\n  Buildings = 'BUILDINGS',\n  Main = 'MAIN',\n  Enemy = 'ENEMY',\n  Fighter = 'FIGHTER',\n  Map = 'MAP',\n  Resources = 'RESOURCES',\n  Settings = 'SETTINGS',\n  Store = 'STORE',\n  Upgrades = 'UPGRADES',\n  Workers = 'WORKERS'\n}\n\nexport class Message {\n  source: MessageSource;\n  message: string;\n  timestamp: number;\n\n  constructor(source: MessageSource, message: string) {\n    this.source = source;\n    this.message = message;\n    this.timestamp = Date.now();\n  }\n}\n","import { ResourceType, ResourceEnum } from './resourceData';\r\nimport { ResourceAnimationType } from './entity';\r\nimport { ResourcesService } from '../services/resources/resources.service';\r\n\r\nexport interface ResourceConsume {\r\n  resourceEnum: ResourceEnum;\r\n  cost: number;\r\n}\r\n\r\nexport class Resource {\r\n  name: string;\r\n  resourceType: ResourceType;\r\n  resourceEnum: ResourceEnum;\r\n\r\n  iconPath: string;\r\n\r\n  amount = 0;\r\n  amountTravelling = 0;\r\n\r\n  resourceConsumes: ResourceConsume[];\r\n\r\n  harvestable = true;\r\n  harvestYield = 1;\r\n  harvestMilliseconds = 1000;\r\n  pathAvailable: boolean;\r\n\r\n  harvestStartDate = Date.now();\r\n  harvesting = false;\r\n  progressBarValue = 0;\r\n\r\n  sellable = true;\r\n  sellsFor = 0;\r\n  autoSellCutoff = 0;\r\n\r\n  resourceDescription: string;\r\n  workerVerb: string;\r\n  workerNoun: string;\r\n\r\n  resourceTier: number;\r\n\r\n  resourceBeingStolen = false;\r\n\r\n  bindIndex: number;\r\n\r\n  resourcesService: ResourcesService;\r\n\r\n  public constructor(name: string, resourceType: ResourceType, resourceEnum: ResourceEnum, iconPath: string,\r\n                     resourceConsumes: ResourceConsume[], harvestable: boolean, harvestMilliseconds: number, sellable: boolean,\r\n                     sellsFor: number, resourceDescription: string, workerVerb: string, workerNoun: string, resourceTier: number,\r\n                     resourcesService: ResourcesService) {\r\n    this.name = name;\r\n    this.resourceType = resourceType;\r\n    this.resourceEnum = resourceEnum;\r\n\r\n    this.iconPath = iconPath;\r\n\r\n    this.resourceConsumes = resourceConsumes;\r\n\r\n    this.harvestable = harvestable;\r\n    this.harvestMilliseconds = harvestMilliseconds;\r\n    this.pathAvailable = false;\r\n\r\n    this.sellable = sellable;\r\n    this.sellsFor = sellsFor;\r\n\r\n    this.resourceDescription = resourceDescription;\r\n    this.workerVerb = workerVerb;\r\n    this.workerNoun = workerNoun;\r\n\r\n    this.resourceTier = resourceTier;\r\n\r\n    this.resourcesService = resourcesService;\r\n  }\r\n\r\n  addAmount(amount: number) {\r\n    this.amount += amount;\r\n    if (this.amount <= 0) {\r\n      this.amount = 0;\r\n    }\r\n  }\r\n\r\n  harvestResource(multiplier = 1) {\r\n    if (this.resourceTier > this.resourcesService.highestTierReached) {\r\n      this.resourcesService.highestTierReached = this.resourceTier;\r\n    }\r\n\r\n    this.addAmount(multiplier);\r\n  }\r\n\r\n  public deductResourceConsumes(multiplier = 1) {\r\n    for (const resourceConsume of this.resourceConsumes) {\r\n      this.resourcesService.resources.get(resourceConsume.resourceEnum).addAmount(-resourceConsume.cost * multiplier);\r\n    }\r\n  }\r\n\r\n  public finishResourceAnimation(multiplier = 1, animationType: ResourceAnimationType) {\r\n    switch (animationType) {\r\n      case ResourceAnimationType.PlayerSpawned: {\r\n        this.amountTravelling--;\r\n        this.harvestResource(multiplier);\r\n        break;\r\n      } case ResourceAnimationType.WorkerSpawned: {\r\n        this.harvestResource(multiplier);\r\n        break;\r\n      } case ResourceAnimationType.Sold: {\r\n        this.resourcesService.resources.get(ResourceEnum.Gold).addAmount(multiplier * this.sellsFor);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public canHarvest(multiplier = 1): boolean {\r\n    if (!this.harvestable || !this.pathAvailable) {\r\n      return false;\r\n    }\r\n\r\n    return this.canAfford(multiplier);\r\n  }\r\n\r\n  public canAfford(multiplier = 1): boolean {\r\n    for (const resourceConsume of this.resourceConsumes) {\r\n      if (this.resourcesService.resources.get(resourceConsume.resourceEnum).amount < resourceConsume.cost * multiplier) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  get resourceAccessible(): boolean {\r\n    return this.resourceTier <= this.resourcesService.highestTierReached + 1;\r\n  }\r\n}\r\n","export enum ResourceType {\r\n  Currency = 'CURRENCY',\r\n  Wood = 'WOOD',\r\n  Mineral = 'MINERAL',\r\n  Metal = 'METAL'\r\n}\r\n\r\nexport enum ResourceEnum {\r\n  Gold = 'GOLD',\r\n  Oak = 'OAK',\r\n  Pine = 'PINE',\r\n  Birch = 'BIRCH',\r\n  Eucalyptus = 'EUCALYPTUS',\r\n  Willow = 'WILLOW',\r\n  Teak = 'TEAK',\r\n  EntSoul = 'ENTSOUL',\r\n  ReanimatedEnt = 'REANIMATEDENT',\r\n  Stone = 'STONE',\r\n  Graphite = 'GRAPHITE',\r\n  Limestone = 'LIMESTONE',\r\n  Marble = 'MARBLE',\r\n  Quartz = 'QUARTZ',\r\n  Obsidian = 'OBSIDIAN',\r\n  Diamond = 'DIAMOND',\r\n  CopperOre = 'COPPERORE',\r\n  TinOre = 'TINORE',\r\n  BronzeIngot = 'BRONZEINGOT',\r\n  IronOre = 'IRONORE',\r\n  IronIngot = 'IRONINGOT',\r\n  SteelIngot = 'STEELINGOT',\r\n  GoldOre = 'GOLDORE',\r\n  GoldIngot = 'GOLDINGOT',\r\n  LatinumOre = 'LATINUMORE',\r\n  LatinumIngot = 'LATINUMINGOT',\r\n  UnbelieviumOre = 'UNBELIEVIUMORE',\r\n  LustrialOre = 'LUSTRIALORE',\r\n  SpectrusOre = 'SPECTRUSORE',\r\n  TemprousIngot = 'TEMPROUSINGOT',\r\n  RefinedTemprous = 'REFINEDTEMPROUS'\r\n}","import { Vector } from './vector';\r\nimport { Resource } from './resource';\r\nimport { ResourceType, ResourceEnum } from './resourceData';\r\nimport { ResourceCost } from './resourceCost';\r\nimport { ResourcesService } from '../services/resources/resources.service';\r\nimport { MapService } from '../services/map/map.service';\r\n\r\nexport enum MapTileType {\r\n  Grass = 'GRASS',\r\n  Water = 'WATER',\r\n  Mountain = 'MOUNTAIN'\r\n}\r\n\r\nexport enum ResourceTileType {\r\n  OakTree = 'OAKTREE',\r\n  PineTree = 'PINETREE',\r\n  BirchTree = 'BIRCHTREE',\r\n  EucalyptusTree = 'EUCALYPTUSTREE',\r\n  WillowTree = 'WILLOWTREE',\r\n  TeakTree = 'TEAKTREE',\r\n  DeadEnt = 'DEADENT',\r\n  StoneMine = 'STONEMINE',\r\n  GraphiteMine = 'GRAPHITEMINE',\r\n  LimestoneMine = 'LIMESTONEMINE',\r\n  MarbleMine = 'MARBLEMINE',\r\n  QuartzMine = 'QUARTZMINE',\r\n  ObsidianMine = 'OBSIDIANMINE',\r\n  DiamondMine = 'DIAMONDMINE',\r\n  CopperMine = 'COPPERMINE',\r\n  TinMine = 'TINMINE',\r\n  IronMine = 'IRONMINE',\r\n  GoldMine = 'GOLDMINE',\r\n  LatinumMine = 'LATINUMMINE',\r\n  UnbelieviumMine = 'UNBELIEVIUMMINE',\r\n  LustrialMine = 'LUSTRIALMINE',\r\n  SpectrusMine = 'SPECTRUSMINE',\r\n  CrackedForge = 'CRACKEDFORGE',\r\n  StoneForge = 'STONEFORGE',\r\n  IronForge = 'IRONFORGE',\r\n  GoldForge = 'GOLDFORGE',\r\n  LatinumForge = 'LATINUMFORGE',\r\n  TemprousDistillery = 'TEMPROUSDISTILLERY'\r\n}\r\n\r\nexport enum BuildingTileType {\r\n  Wall = 'WALL',\r\n  Road = 'ROAD',\r\n  Home = 'HOME',\r\n  Bridge = 'BRIDGE',\r\n  CrackedForge = 'CRACKEDFORGE',\r\n  StoneForge = 'STONEFORGE',\r\n  IronForge = 'IRONFORGE',\r\n  GoldForge = 'GOLDFORGE',\r\n  LatinumForge = 'LATINUMFORGE',\r\n  TemprousDistillery = 'TEMPROUSDISTILLERY',\r\n  EnemyPortal = 'ENEMYPORTAL',\r\n  WoodMarket = 'WOODMARKET',\r\n  MineralMarket = 'MINERALMARKET',\r\n  MetalMarket = 'METALMARKET'\r\n}\r\n\r\nexport enum BuildingSubType {\r\n  Resource = 'RESOURCE',\r\n  Market = 'MARKET',\r\n  Misc = 'MISC'\r\n}\r\n\r\nexport enum TileStat {\r\n  SellRate = 'SELLRATE',\r\n  SellAmount = 'SELLAMOUNT',\r\n  MaxHealth = 'MAXHEALTH'\r\n}\r\n\r\nexport interface MapTile {\r\n  tileType: MapTileType;\r\n\r\n  name: string;\r\n\r\n  walkable: boolean;\r\n}\r\n\r\nexport interface BuildingTile {\r\n  tileType: BuildingTileType;\r\n  subType: BuildingSubType;\r\n\r\n  name: string;\r\n  description: string;\r\n  placeable: boolean;\r\n  maxPlaceable: number;\r\n\r\n  upgradeBuilding?: BuildingTileType;\r\n\r\n  baseHealth: number;\r\n  repairResourceEnum?: ResourceEnum;\r\n  repairCostPerPoint?: number;\r\n\r\n  resourceCosts: ResourceCost[];\r\n  buildableSurfaces: MapTileType[];\r\n\r\n  placesResourceTile: boolean;\r\n  resourceTileType?: ResourceTileType;\r\n\r\n  resourcePathable: boolean;\r\n}\r\n\r\nexport interface ResourceTile {\r\n  tileType: ResourceTileType;\r\n\r\n  name: string;\r\n  placeable: boolean;\r\n\r\n  resourceEnums: ResourceEnum[];\r\n}\r\n\r\nexport interface TileCropDetail {\r\n  x: number;\r\n  y: number;\r\n\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport class Tile {\r\n  id: number;\r\n\r\n  mapTileType: MapTileType;\r\n  resourceTileType?: ResourceTileType;\r\n  buildingTileType?: BuildingTileType;\r\n\r\n  buildingPath?: Tile[];\r\n  buildingRemovable: boolean;\r\n\r\n  market?: Market;\r\n\r\n  statLevels = {};\r\n  statCosts = {};\r\n\r\n  health: number;\r\n  maxHealth: number;\r\n\r\n  position: Vector;\r\n\r\n  tileCropDetail: TileCropDetail;\r\n\r\n  resourcesService: ResourcesService;\r\n\r\n  public constructor(id: number, mapTileType: MapTileType, resourceTileType: ResourceTileType, buildingTileType: BuildingTileType,\r\n        buildingRemovable: boolean, position: Vector, tileCropDetail: TileCropDetail,\r\n        health: number = -1, resourcesService: ResourcesService) {\r\n    this.id = id;\r\n\r\n    this.mapTileType = mapTileType;\r\n    this.resourceTileType = resourceTileType;\r\n    this.buildingTileType = buildingTileType;\r\n\r\n    this.buildingPath = [];\r\n    this.buildingRemovable = buildingRemovable;\r\n\r\n    this.statLevels[TileStat.MaxHealth] = 1;\r\n    this.statCosts[TileStat.MaxHealth] = 1500;\r\n\r\n    this.health = health;\r\n    this.maxHealth = health;\r\n    this.position = position;\r\n    this.tileCropDetail = tileCropDetail;\r\n\r\n    this.resourcesService = resourcesService;\r\n  }\r\n\r\n  public canUpgradeStat(stat: TileStat): boolean {\r\n    return this.resourcesService.resources.get(ResourceEnum.Gold).amount >= this.statCosts[stat];\r\n  }\r\n\r\n  public getUpgradedStat(stat: TileStat): number {\r\n    switch (stat) {\r\n      case TileStat.SellAmount: {\r\n        return this.market.sellQuantity * 1.2;\r\n      } case TileStat.SellRate: {\r\n        return this.market.sellInterval / 1.1;\r\n      } case TileStat.MaxHealth: {\r\n        return Math.floor(this.maxHealth * 1.2);\r\n      }\r\n    }\r\n  }\r\n\r\n  public upgradeStat(stat: TileStat) {\r\n    if (!this.canUpgradeStat(stat)) {\r\n      return;\r\n    }\r\n\r\n    this.resourcesService.resources.get(ResourceEnum.Gold).addAmount(-this.statCosts[stat]);\r\n\r\n    const upgradedStat = this.getUpgradedStat(stat);\r\n    switch (stat) {\r\n      case TileStat.SellAmount: {\r\n        this.market.sellQuantity = upgradedStat;\r\n        break;\r\n      } case TileStat.SellRate: {\r\n        this.market.sellInterval = upgradedStat;\r\n        break;\r\n      } case TileStat.MaxHealth: {\r\n        this.maxHealth = upgradedStat;\r\n        this.health = this.maxHealth;\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.statLevels[stat]++;\r\n    this.statCosts[stat] *= 1.5;\r\n  }\r\n\r\n  public get x(): number {\r\n    return this.position.x;\r\n  }\r\n\r\n  public set x(value: number) {\r\n    this.position.x = value;\r\n  }\r\n\r\n  public get y(): number {\r\n    return this.position.y;\r\n  }\r\n\r\n  public set y(value: number) {\r\n    this.position.y = value;\r\n  }\r\n}\r\n\r\nexport class Market {\r\n  mapService: MapService;\r\n  resourcesService: ResourcesService;\r\n\r\n  homeTile: Tile;\r\n  owningTile: Tile;\r\n  tilePath: Tile[];\r\n  soldResources: Resource[];\r\n  currentResource = 0;\r\n\r\n  recentSales: number[] = [];\r\n  recentWindowSize = 20;\r\n  timeSinceLastSale = 0;\r\n\r\n  lastSellTime = 0;\r\n  sellInterval = 1000;\r\n  sellQuantity = 50;\r\n\r\n  public constructor(mapService: MapService, resourcesService: ResourcesService, resourceType: ResourceType, owningTile: Tile,\r\n      shouldInitStats: boolean) {\r\n    if (shouldInitStats) {\r\n      owningTile.statLevels[TileStat.SellAmount] = 1;\r\n      owningTile.statLevels[TileStat.SellRate] = 1;\r\n\r\n      owningTile.statCosts[TileStat.SellAmount] = 1500;\r\n      owningTile.statCosts[TileStat.SellRate] = 1500;\r\n    }\r\n\r\n    this.mapService = mapService;\r\n    this.resourcesService = resourcesService;\r\n\r\n    this.soldResources = resourcesService.getResources(resourceType);\r\n\r\n    this.homeTile = mapService.tiledMap.filter(tile => tile.buildingTileType === BuildingTileType.Home)[0];\r\n    this.owningTile = owningTile;\r\n\r\n    this.calculateConnection();\r\n  }\r\n\r\n  public tick(elapsed: number, deltaTime: number) {\r\n    if (this.tilePath.length && elapsed - this.lastSellTime > this.sellInterval) {\r\n      this.timeSinceLastSale += deltaTime;\r\n\r\n      const resource = this.soldResources[this.currentResource];\r\n      const sellAmount = Math.min(this.sellQuantity, resource.amount - resource.autoSellCutoff);\r\n\r\n      if (sellAmount > 0) {\r\n        this.mapService.spawnSoldResourceAnimation(resource.resourceEnum, sellAmount, this);\r\n        this.lastSellTime = elapsed;\r\n\r\n        resource.addAmount(-sellAmount);\r\n\r\n        this.logSale(sellAmount * resource.sellsFor);\r\n\r\n        this.timeSinceLastSale = 0;\r\n      }\r\n\r\n      if (this.timeSinceLastSale >= 1000) {\r\n        this.logSale(0);\r\n        this.timeSinceLastSale = 0;\r\n      }\r\n\r\n      do {\r\n        this.currentResource = (this.currentResource + 1) % this.soldResources.length;\r\n      } while (!this.soldResources[this.currentResource].sellable);\r\n    }\r\n  }\r\n\r\n  logSale(profit: number) {\r\n    this.recentSales.push(profit);\r\n    if (this.recentSales.length >= this.recentWindowSize) {\r\n      this.recentSales = this.recentSales.slice(1, this.recentWindowSize);\r\n    }\r\n  }\r\n\r\n  public calculateConnection() {\r\n    this.mapService.findPath(this.homeTile, this.owningTile, true, true).subscribe(path => {\r\n      this.tilePath = path;\r\n    });\r\n  }\r\n\r\n  public get averageRecentProfit(): number {\r\n    if (!this.recentSales.length) {\r\n      return 0;\r\n    }\r\n\r\n    return this.recentSales.reduce((total, sale) => total += sale) / this.recentSales.length;\r\n  }\r\n}\r\n","import { ResourcesService } from './../services/resources/resources.service';\r\nimport { WorkersService } from './../services/workers/workers.service';\r\nimport { MessagesService } from './../services/messages/messages.service';\r\nimport { ResourceCost } from './resourceCost';\r\nimport { ResourceType, ResourceEnum } from './resourceData';\r\nimport { MessageSource } from './message';\r\n\r\nexport enum UpgradeType {\r\n  Resource = 'RESOURCE',\r\n  Worker = 'WORKER'\r\n}\r\n\r\nexport enum UpgradeVariable {\r\n  Harvestability = 'HARVESTABILITY',\r\n  HarvestYield = 'HARVEST_YIELD',\r\n  HarvestMilliseconds = 'HARVEST_MILLISECONDS',\r\n  Workable = 'WORKABLE',\r\n  WorkerYield = 'WORKER_YIELD',\r\n  WorkerCost = 'WORKER_COST'\r\n}\r\n\r\nexport interface UpgradeEffect {\r\n  upgradeIsForWholeType: boolean;\r\n\r\n  resourceType?: ResourceType;\r\n  resourceEnum?: ResourceEnum;\r\n  maxTier?: number;\r\n\r\n  upgradeVariable: UpgradeVariable;\r\n  upgradeFactor: number;\r\n}\r\n\r\nexport class Upgrade {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n\r\n  upgradeType: UpgradeType;\r\n\r\n  upgradeEffects: UpgradeEffect[];\r\n  resourceCosts: ResourceCost[];\r\n\r\n  purchased = false;\r\n\r\n  resourcesService: ResourcesService;\r\n  workersService: WorkersService;\r\n  messagesService: MessagesService;\r\n\r\n  public constructor(id: number, name: string, description: string, upgradeType: UpgradeType,\r\n                     upgradeEffects: UpgradeEffect[], resourceCosts: ResourceCost[], purchased = false,\r\n                     resourcesService: ResourcesService, workersService: WorkersService, messagesService: MessagesService) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.description = description;\r\n\r\n    this.upgradeType = upgradeType;\r\n\r\n    this.upgradeEffects = upgradeEffects;\r\n    this.resourceCosts = resourceCosts;\r\n\r\n    this.purchased = purchased;\r\n\r\n    this.resourcesService = resourcesService;\r\n    this.workersService = workersService;\r\n    this.messagesService = messagesService;\r\n  }\r\n\r\n  public purchaseUpgrade() {\r\n    if (this.purchased || !this.canAfford()) {\r\n      return;\r\n    }\r\n\r\n    for (const resourceCost of this.resourceCosts) {\r\n      this.resourcesService.resources.get(resourceCost.resourceEnum).addAmount(-resourceCost.resourceCost);\r\n    }\r\n\r\n    this.applyUpgrade();\r\n\r\n    this.purchased = true;\r\n  }\r\n\r\n  public applyUpgrade() {\r\n    for (const upgradeEffect of this.upgradeEffects) {\r\n      if (upgradeEffect.upgradeVariable === UpgradeVariable.WorkerCost) {\r\n        this.workersService.workers.get(upgradeEffect.resourceType).cost *= upgradeEffect.upgradeFactor;\r\n        continue;\r\n      }\r\n\r\n      let resourcesToUpgrade = [this.resourcesService.resources.get(upgradeEffect.resourceEnum)];\r\n      let workersToUpgrade = [this.workersService.getResourceWorker(upgradeEffect.resourceEnum)];\r\n\r\n      if (upgradeEffect.upgradeIsForWholeType) {\r\n        resourcesToUpgrade = this.resourcesService.getResources(upgradeEffect.resourceType);\r\n        workersToUpgrade = this.workersService.workers.get(upgradeEffect.resourceType).getResourceWorkers();\r\n\r\n        if (upgradeEffect.maxTier >= 0) {\r\n          resourcesToUpgrade = resourcesToUpgrade.filter(resource => resource.resourceTier <= upgradeEffect.maxTier);\r\n          workersToUpgrade = workersToUpgrade.filter(worker =>\r\n            this.resourcesService.resources.get(worker.resourceEnum).resourceTier <= upgradeEffect.maxTier);\r\n        }\r\n      }\r\n\r\n      for (const resourceToUpgrade of resourcesToUpgrade) {\r\n        switch (upgradeEffect.upgradeVariable) {\r\n          case UpgradeVariable.Harvestability: {\r\n            resourceToUpgrade.harvestable = !!upgradeEffect.upgradeFactor;\r\n            break;\r\n          }\r\n          case UpgradeVariable.HarvestYield: {\r\n            resourceToUpgrade.harvestYield *= upgradeEffect.upgradeFactor;\r\n            break;\r\n          }\r\n          case UpgradeVariable.HarvestMilliseconds: {\r\n            resourceToUpgrade.harvestMilliseconds *= upgradeEffect.upgradeFactor;\r\n            break;\r\n          }\r\n          default: {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (const workerToUpgrade of workersToUpgrade) {\r\n        switch(upgradeEffect.upgradeVariable) {\r\n          case UpgradeVariable.Workable: {\r\n            workerToUpgrade.workable = !!upgradeEffect.upgradeFactor;\r\n            break;\r\n          }\r\n          case UpgradeVariable.WorkerYield: {\r\n            workerToUpgrade.workerYield *= upgradeEffect.upgradeFactor;\r\n            break;\r\n          }\r\n          default: {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.log('Purchased upgrade: ' + this.name);\r\n  }\r\n\r\n  public canAfford(): boolean {\r\n    return this.resourceCosts.every(resourceCost =>\r\n      this.resourcesService.resources.get(resourceCost.resourceEnum).amount >= resourceCost.resourceCost);\r\n  }\r\n\r\n  private log(message: string) {\r\n    this.messagesService.add(MessageSource.Workers, message);\r\n  }\r\n}\r\n","export class Vector {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  get magnitude(): number {\n    return Math.sqrt(this.x ** 2 + this.y ** 2);\n  }\n\n  add(other: Vector) {\n    return new Vector(this.x + other.x, this.y + other.y);\n  }\n\n  subtract(other: Vector) {\n    return new Vector(this.x - other.x, this.y - other.y);\n  }\n\n  static get identity(): Vector {\n    return new Vector(1, 1);\n  }\n}\n","import { Tick } from './../services/tick/tick.service';\r\nimport { ResourcesService } from './../services/resources/resources.service';\r\nimport { MapService } from './../services/map/map.service';\r\nimport { MessagesService } from './../services/messages/messages.service';\r\nimport { ResourceType, ResourceEnum } from './resourceData';\r\nimport { MessageSource } from './message';\r\n\r\nexport interface ResourceWorker {\r\n  resourceEnum: ResourceEnum;\r\n  workable: boolean;\r\n\r\n  recurringCost: number;\r\n  workerCount: number;\r\n  workerYield: number;\r\n\r\n  sliderSetting: number;\r\n  sliderSettingValid: boolean;\r\n}\r\n\r\nexport class Worker implements Tick {\r\n  cost: number;\r\n\r\n  resourceType: ResourceType;\r\n  workerCount = 0;\r\n  freeWorkers = 0;\r\n\r\n  resourceWorkers: Map<string, ResourceWorker>;\r\n\r\n  resourcesService: ResourcesService;\r\n  mapService: MapService;\r\n  messagesService: MessagesService;\r\n\r\n  public constructor(cost: number, resourceType: ResourceType, resourceWorkers: Map<string, ResourceWorker>,\r\n                     resourcesService: ResourcesService, mapService: MapService, messagesService: MessagesService) {\r\n    this.cost = cost;\r\n    this.resourceType = resourceType;\r\n    this.resourceWorkers = resourceWorkers;\r\n\r\n    this.resourcesService = resourcesService;\r\n    this.mapService = mapService;\r\n    this.messagesService = messagesService;\r\n  }\r\n\r\n  public tick(elapsed: number, deltaTime: number) {\r\n    for (const resourceWorker of this.getResourceWorkers()) {\r\n      const resource = this.resourcesService.resources.get(resourceWorker.resourceEnum);\r\n\r\n      if (resourceWorker.workerCount === 0 || !this.canAffordToHarvest(resource.resourceEnum)) {\r\n        continue;\r\n      }\r\n\r\n      this.resourcesService.resources.get(ResourceEnum.Gold).addAmount(-resourceWorker.recurringCost * resourceWorker.workerCount);\r\n\r\n      if (!this.canAffordToHarvest(resource.resourceEnum)) {\r\n        this.log(`No more money available for ${resource.name}.`);\r\n      }\r\n\r\n      this.mapService.spawnHarvestedResourceAnimation(resource, resourceWorker.workerYield * resourceWorker.workerCount, false);\r\n    }\r\n  }\r\n\r\n  public getResourceWorkers(filterByAccessible = false, filterByWorkable = false, filterByHarvestable = false): ResourceWorker[] {\r\n    let resourceWorkers = Array.from(this.resourceWorkers.values());\r\n\r\n    if (filterByAccessible) {\r\n      resourceWorkers = resourceWorkers.filter(rw => this.resourcesService.resources.get(rw.resourceEnum).resourceAccessible);\r\n    }\r\n    if (filterByWorkable) {\r\n      resourceWorkers = resourceWorkers.filter(rw => rw.workable);\r\n    }\r\n    if (filterByHarvestable) {\r\n      resourceWorkers = resourceWorkers.filter(rw => this.resourcesService.resources.get(rw.resourceEnum).harvestable);\r\n    }\r\n\r\n    return resourceWorkers;\r\n  }\r\n\r\n  hireWorker() {\r\n    if (!this.canAffordToHire()) {\r\n      return;\r\n    }\r\n\r\n    this.resourcesService.resources.get(ResourceEnum.Gold).addAmount(-this.cost);\r\n\r\n    this.cost *= 1.01;\r\n    this.workerCount++;\r\n    this.freeWorkers++;\r\n  }\r\n\r\n  canAffordToHire(): boolean {\r\n    return this.cost <= this.resourcesService.resources.get(ResourceEnum.Gold).amount;\r\n  }\r\n\r\n  canAffordToHarvest(resourceEnum: ResourceEnum): boolean {\r\n    return this.resourceWorkers.get(resourceEnum).recurringCost <= this.resourcesService.resources.get(ResourceEnum.Gold).amount;\r\n  }\r\n\r\n  updateResourceWorker(resourceEnum: ResourceEnum, newResourceWorkerCount: number) {\r\n    const resourceWorker = this.resourceWorkers.get(resourceEnum);\r\n\r\n    if (!resourceWorker.sliderSettingValid) {\r\n      newResourceWorkerCount = this.freeWorkers + resourceWorker.workerCount;\r\n      resourceWorker.sliderSetting = newResourceWorkerCount;\r\n    }\r\n\r\n    const newFreeWorkers = this.freeWorkers + resourceWorker.workerCount - newResourceWorkerCount;\r\n\r\n    this.freeWorkers = newFreeWorkers;\r\n    resourceWorker.workerCount = newResourceWorkerCount;\r\n  }\r\n\r\n  private log(message: string) {\r\n    this.messagesService.add(MessageSource.Workers, message);\r\n  }\r\n}\r\n","import { Pipe } from '@angular/core';\r\nimport { PipeTransform } from '@angular/core/src/change_detection/pipe_transform';\r\n\r\n@Pipe({\r\n    name: 'enumToArray'\r\n})\r\nexport class EnumToPipe implements PipeTransform {\r\n    transform(data: object) {\r\n        return Object.keys(data);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EnumToPipe } from './enumtoarraypipe';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    EnumToPipe\n  ],\n  exports: [\n    EnumToPipe\n  ]\n})\nexport class PipeModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  public filterAccessible = true;\n  public editMode = false;\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ResourceType } from './../../objects/resourceData';\nimport { Tile, BuildingTileType, BuildingTile, BuildingSubType, Market } from '../../objects/tile';\nimport { ResourcesService } from './../resources/resources.service';\nimport { MapService } from '../map/map.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BuildingsService {\n  selectedBuilding: BuildingTile;\n\n  constructor(protected resourcesService: ResourcesService,\n              protected mapService: MapService) { }\n\n  public createBuilding(tile: Tile, buildingType: BuildingTileType): boolean {\n    const buildingTile: BuildingTile = this.mapService.buildingTiles[buildingType];\n\n    if (tile.buildingTileType !== undefined ||\n        tile.resourceTileType !== undefined ||\n        !buildingTile.buildableSurfaces.some(bs => bs === tile.mapTileType) ||\n        !this.canAffordBuilding(buildingTile)) {\n      return false;\n    }\n\n    for (const resourceCost of buildingTile.resourceCosts) {\n      this.resourcesService.resources.get(resourceCost.resourceEnum).addAmount(-resourceCost.resourceCost);\n    }\n\n    if (buildingTile.placesResourceTile) {\n      tile.resourceTileType = buildingTile.resourceTileType;\n    }\n\n    tile.health = buildingTile.baseHealth;\n    tile.maxHealth = buildingTile.baseHealth;\n\n    tile.buildingRemovable = true;\n    tile.buildingTileType = buildingType;\n    this.mapService.calculateResourceConnections();\n\n    if (buildingTile.subType === BuildingSubType.Market) {\n      let resourceType: ResourceType;\n      switch (buildingTile.tileType) {\n        case BuildingTileType.WoodMarket: {\n          resourceType = ResourceType.Wood;\n          break;\n        } case BuildingTileType.MineralMarket: {\n          resourceType = ResourceType.Mineral;\n          break;\n        } case BuildingTileType.MetalMarket: {\n          resourceType = ResourceType.Metal;\n          break;\n        }\n      }\n\n      tile.market = new Market(this.mapService, this.resourcesService, resourceType, tile, true);\n    }\n\n    return true;\n  }\n\n  public canAffordBuilding(buildingTile: BuildingTile): boolean {\n    if (buildingTile.maxPlaceable > 0 &&\n        this.mapService.tiledMap.filter(tile => tile.buildingTileType === buildingTile.tileType).length >= buildingTile.maxPlaceable) {\n      return false;\n    }\n    for (const resourceCost of buildingTile.resourceCosts) {\n      if (this.resourcesService.resources.get(resourceCost.resourceEnum).amount < resourceCost.resourceCost) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  public clearBuilding(tile: Tile): boolean {\n    if (!tile.buildingRemovable || !tile.buildingTileType) {\n      return false;\n    }\n\n    const buildingTile = this.mapService.buildingTiles[tile.buildingTileType];\n\n    if (buildingTile.placesResourceTile) {\n      tile.resourceTileType = undefined;\n    }\n\n    tile.buildingTileType = undefined;\n    tile.health = tile.maxHealth;\n    tile.market = undefined;\n\n    for (const resourceCost of buildingTile.resourceCosts) {\n      this.resourcesService.resources.get(resourceCost.resourceEnum).addAmount(resourceCost.resourceCost * 0.85);\n    }\n\n    this.mapService.calculateResourceConnections();\n\n    return true;\n  }\n\n  public canRepairBuilding(tile: Tile): boolean {\n    const buildingTile: BuildingTile = this.mapService.buildingTiles[tile.buildingTileType];\n    const repairResource = this.resourcesService.resources.get(buildingTile.repairResourceEnum);\n\n    return repairResource.amount >= buildingTile.repairCostPerPoint * (tile.maxHealth - tile.health);\n  }\n\n  public repairBuilding(tile: Tile) {\n    if (!this.canRepairBuilding(tile)) {\n      return;\n    }\n    const buildingTile: BuildingTile = this.mapService.buildingTiles[tile.buildingTileType];\n    const healAmount = tile.maxHealth - tile.health;\n\n    const repairResource = this.resourcesService.resources.get(buildingTile.repairResourceEnum);\n    repairResource.addAmount(-buildingTile.repairCostPerPoint * healAmount);\n    tile.health = tile.maxHealth;\n\n    this.mapService.calculateResourceConnections();\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { timer } from 'rxjs';\n\nimport { ResourcesService } from '../resources/resources.service';\nimport { WorkersService } from '../workers/workers.service';\nimport { MapService, CursorTool } from '../map/map.service';\nimport { EnemyService } from './../enemy/enemy.service';\nimport { MessagesService } from '../messages/messages.service';\nimport { SettingsService } from '../settings/settings.service';\nimport { AdminService } from '../admin/admin.service';\nimport { Tick } from './../tick/tick.service';\nimport { Resource } from '../../objects/resource';\nimport { ResourceType } from './../../objects/resourceData';\nimport { MessageSource } from '../../objects/message';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClickerMainService implements Tick {\n  timeElapsed: number;\n\n  resourceTypes = ResourceType;\n\n  constructor(protected resourcesService: ResourcesService,\n              protected workersService: WorkersService,\n              protected mapService: MapService,\n              protected enemyService: EnemyService,\n              protected messagesService: MessagesService,\n              protected settingsService: SettingsService,\n              protected adminService: AdminService) {\n    document.addEventListener('keydown', (event) => this.processInput(event));\n  }\n\n  tick(elapsed: number, deltaTime: number) {\n    this.timeElapsed = elapsed;\n    for (const resource of this.resourcesService.getResources().filter(_resource => _resource.harvesting)) {\n      const millisecondsElapsed = elapsed - resource.harvestStartDate;\n      resource.progressBarValue = Math.floor(millisecondsElapsed / resource.harvestMilliseconds * 100);\n    }\n  }\n\n  processInput(event: KeyboardEvent) {\n    if (event.repeat) {\n      return;\n    }\n\n    switch (event.code) {\n      case 'KeyQ': {\n        this.mapService.cursorTool = CursorTool.PlaceBuildings;\n        this.mapService.buildingListVisible = true;\n        this.mapService.fighterListVisible = false;\n        break;\n      } case 'KeyW': {\n        this.mapService.cursorTool = CursorTool.ClearBuildings;\n        this.mapService.buildingListVisible = false;\n        this.mapService.fighterListVisible = false;\n        break;\n      } case 'KeyE': {\n        this.mapService.cursorTool = CursorTool.TileDetail;\n        this.mapService.buildingListVisible = false;\n        this.mapService.fighterListVisible = false;\n        break;\n      } case 'KeyR': {\n        if (!this.enemyService.enemiesActive) {\n          break;\n        }\n\n        this.mapService.cursorTool = CursorTool.PlaceFighters;\n        this.mapService.buildingListVisible = false;\n        this.mapService.fighterListVisible = true;\n        break;\n      } case 'KeyT': {\n        if (!this.enemyService.enemiesActive) {\n          break;\n        }\n\n        this.mapService.cursorTool = CursorTool.FighterDetail;\n        this.mapService.buildingListVisible = false;\n        this.mapService.fighterListVisible = false;\n        break;\n      }\n    }\n\n    const keyDigit = +event.code.replace('Digit', '').replace('Numpad', '');\n\n    if (!isNaN(keyDigit)) {\n      const resourceEnum = this.settingsService.resourceBinds[keyDigit];\n      const resource = this.resourcesService.resources.get(resourceEnum);\n\n      if (resource && resource.resourceAccessible && !resource.harvesting) {\n        this.startHarvesting(resource);\n      }\n    }\n  }\n\n  startHarvesting(resource: Resource) {\n    resource.harvestStartDate = this.timeElapsed;\n\n    if (!resource.canHarvest(resource.harvestYield)) {\n      return;\n    }\n\n    resource.harvesting = true;\n\n    const harvestTimer = timer(resource.harvestMilliseconds);\n    harvestTimer.subscribe(_ => this.harvestResource(resource));\n  }\n\n  harvestResource(resource: Resource) {\n    resource.amountTravelling++;\n\n    this.mapService.spawnHarvestedResourceAnimation(resource, resource.harvestYield, true);\n\n    if (resource.resourceTier > 3 && !this.enemyService.enemiesActive) {\n      this.enemyService.enemiesActive = true;\n      this.log('Your base has begun attracting unwanted attention...');\n    }\n\n    resource.progressBarValue = 0;\n    resource.harvesting = false;\n  }\n\n  private log(message: string) {\n    this.messagesService.add(MessageSource.Main, message);\n  }\n}\n","import { Injectable, AfterViewInit } from '@angular/core';\r\n\r\nimport { timer } from 'rxjs';\r\n\r\nimport { Resource } from '../../objects/resource';\r\nimport { Enemy } from './../../objects/entity';\r\nimport { Vector } from '../../objects/vector';\r\nimport { MapService } from '../map/map.service';\r\nimport { Tile, BuildingTileType, MapTileType } from '../../objects/tile';\r\nimport { MessageSource } from '../../objects/message';\r\nimport { BuildingsService } from '../buildings/buildings.service';\r\nimport { ResourcesService } from '../resources/resources.service';\r\nimport { MessagesService } from '../messages/messages.service';\r\nimport { Tick } from '../tick/tick.service';\r\n\r\ndeclare var require: any;\r\nconst baseEnemyTypes = require('../../../assets/json/enemies.json');\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EnemyService implements Tick, AfterViewInit {\r\n  public enemyTypes: Enemy[] = baseEnemyTypes;\r\n  public enemies: Enemy[] = [];\r\n  activePortalTile: Tile;\r\n\r\n  spawnInterval = 45000;\r\n  lastSpawnTime = 0;\r\n  processInterval = 1000;\r\n  lastProcessTime = 0;\r\n\r\n  minimumResourceAmount = 500;\r\n  maxPathRetryCount = 25;\r\n  maxEnemyCount = 25;\r\n\r\n  enemiesActive: boolean;\r\n\r\n  constructor(protected resourcesService: ResourcesService,\r\n              protected buildingsService: BuildingsService,\r\n              protected mapService: MapService,\r\n              protected messagesService: MessagesService) { }\r\n\r\n  ngAfterViewInit() {\r\n    this.openPortal(this.mapService.enemySpawnTiles[0]);\r\n  }\r\n\r\n  tick(elapsed: number, deltaTime: number) {\r\n    if (elapsed - this.lastSpawnTime >= this.spawnInterval) {\r\n      this.spawnEnemy();\r\n      this.lastSpawnTime = elapsed;\r\n    }\r\n\r\n    if (elapsed - this.lastProcessTime >= this.processInterval) {\r\n      this.processEnemies();\r\n      this.lastProcessTime = elapsed;\r\n    }\r\n\r\n    for (const enemy of this.enemies) {\r\n      enemy.updatePathPosition(deltaTime);\r\n\r\n      if (enemy.health <= 0) {\r\n        this.killEnemy(enemy);\r\n      }\r\n    }\r\n  }\r\n\r\n  pickTarget(enemy: Enemy) {\r\n    const sortedTargets = enemy.targets.filter(target => target.accessible).sort((a, b) => {\r\n      const aDist = Math.abs(a.tile.x - enemy.x) + Math.abs(a.tile.y - enemy.y);\r\n      const bDist = Math.abs(b.tile.x - enemy.x) + Math.abs(b.tile.y - enemy.y);\r\n\r\n      return aDist - bDist;\r\n    });\r\n\r\n    enemy.targetIndex = enemy.targets.indexOf(sortedTargets[0]);\r\n\r\n    enemy.pathStep = 0;\r\n    enemy.pathingDone = false;\r\n\r\n    enemy.currentTile = this.getTilePosition(enemy);\r\n\r\n    if (enemy.targetIndex < 0) {\r\n      enemy.targets = enemy.targets.filter(target => !target.wanderTarget);\r\n      enemy.targets.push({tile: this.mapService.getRandomTile([MapTileType.Grass]), accessible: true, wanderTarget: true});\r\n      enemy.targetIndex = enemy.targets.length - 1;\r\n    }\r\n\r\n    this.mapService.findPath(enemy.currentTile, enemy.targets[enemy.targetIndex].tile, false, true, 250).subscribe(tilePath => {\r\n      enemy.tilePath = tilePath;\r\n\r\n      if (!enemy.tilePath.length) {\r\n        enemy.pathAttempt++;\r\n        enemy.targets[enemy.targetIndex].accessible = false;\r\n\r\n        if (enemy.pathAttempt >= this.maxPathRetryCount) {\r\n          this.killEnemy(enemy, true);\r\n        }\r\n\r\n        this.finishTask(enemy);\r\n      }\r\n    });\r\n  }\r\n\r\n  openPortal(tile: Tile) {\r\n    for (const existingTile of this.mapService.tiledMap.filter(_tile => _tile.buildingTileType === BuildingTileType.EnemyPortal)) {\r\n      existingTile.buildingTileType = undefined;\r\n    }\r\n\r\n    tile.buildingTileType = BuildingTileType.EnemyPortal;\r\n    this.activePortalTile = tile;\r\n  }\r\n\r\n  getTilePosition(enemy: Enemy) {\r\n    const x = Math.floor(enemy.x / 16) * 16;\r\n    const y = Math.floor(enemy.y / 16) * 16;\r\n\r\n    return this.mapService.tiledMap.filter(tile => tile.x === x && tile.y === y)[0];\r\n  }\r\n\r\n  spawnEnemy() {\r\n    if (Math.random() > 0.2) {\r\n      const spawnIndex = Math.floor(Math.random() *  this.mapService.enemySpawnTiles.length);\r\n      this.openPortal(this.mapService.enemySpawnTiles[spawnIndex]);\r\n    }\r\n\r\n    if (this.enemies.length >= this.maxEnemyCount || !this.enemiesActive) {\r\n      return;\r\n    }\r\n\r\n    const enemyIndex = Math.floor(Math.random() * this.enemyTypes.length);\r\n\r\n    const spawnPoint = this.activePortalTile;\r\n    const enemyType = this.enemyTypes[enemyIndex];\r\n\r\n    const difficultyModifier = Math.max(1, Math.random() * this.resourcesService.getPlayerScore() / 50000);\r\n    const animationSpeed = Math.min(0.008, 0.003 + difficultyModifier / 10000);\r\n\r\n    const enemy = new Enemy(enemyType.name, new Vector(spawnPoint.x, spawnPoint.y), spawnPoint, enemyType.health * difficultyModifier,\r\n      animationSpeed, enemyType.attack * difficultyModifier, enemyType.defense * difficultyModifier,\r\n      enemyType.attackRange, enemyType.targetableBuildingTypes, enemyType.resourcesToSteal,\r\n      enemyType.stealMax * difficultyModifier, enemyType.resourceCapacity * difficultyModifier);\r\n\r\n    this.findTargets(enemy);\r\n    this.pickTarget(enemy);\r\n\r\n    this.log('An enemy has appeared!');\r\n\r\n    this.enemies.push(enemy);\r\n  }\r\n\r\n  findTargets(enemy: Enemy) {\r\n    for (const buildingType of enemy.targetableBuildingTypes) {\r\n      for (const tile of this.mapService.tiledMap.filter(_tile => _tile.buildingTileType === buildingType)) {\r\n        if (!enemy.targets.some(target => target.tile === tile)) {\r\n          enemy.targets.push({tile: tile, accessible: true, wanderTarget: false});\r\n        }\r\n      }\r\n    }\r\n\r\n    if (enemy.targets[enemy.targetIndex].wanderTarget ||\r\n      enemy.tilePath.some(tile => !tile.buildingTileType || !this.mapService.mapTiles[tile.mapTileType].walkable)) {\r\n      this.finishTask(enemy);\r\n    }\r\n  }\r\n\r\n  async recalculateTargets() {\r\n    this.enemies.map(enemy => this.findTargets(enemy));\r\n  }\r\n\r\n  finishTask(enemy: Enemy) {\r\n    enemy.targets[enemy.targetIndex].accessible = false;\r\n\r\n    if (enemy.targets) {\r\n      this.pickTarget(enemy);\r\n    }\r\n  }\r\n\r\n  processEnemies() {\r\n    for (const enemy of this.enemies) {\r\n      const target = enemy.targets[enemy.targetIndex];\r\n\r\n      if (target === undefined || ((!target.wanderTarget || enemy.pathingDone) && target.tile.buildingTileType === undefined)) {\r\n        this.finishTask(enemy);\r\n\r\n        continue;\r\n      }\r\n\r\n      if (enemy.pathingDone) {\r\n        if (target.tile.buildingTileType === BuildingTileType.Home) {\r\n          for (const resourceEnum of enemy.resourcesToSteal) {\r\n            this.resourcesService.resources.get(resourceEnum).resourceBeingStolen = true;\r\n          }\r\n\r\n          if (enemy.totalHeld >= enemy.resourceCapacity) {\r\n            for (const resource of this.resourcesService.getResources()) {\r\n              resource.resourceBeingStolen = false;\r\n            }\r\n\r\n            this.finishTask(enemy);\r\n          }\r\n\r\n          const resourceIndex = Math.floor(Math.random() * enemy.resourcesToSteal.length);\r\n          const resourceToSteal = this.resourcesService.resources.get(enemy.resourcesToSteal[resourceIndex]);\r\n\r\n          if (resourceToSteal.amount > this.minimumResourceAmount) {\r\n            let amountToSteal = Math.floor(Math.random() * enemy.stealMax);\r\n            if (resourceToSteal.amount - amountToSteal < this.minimumResourceAmount) {\r\n              amountToSteal = resourceToSteal.amount - this.minimumResourceAmount;\r\n            }\r\n\r\n            if (!enemy.resourcesHeld.get(resourceToSteal.resourceEnum)) {\r\n              enemy.resourcesHeld.set(resourceToSteal.resourceEnum, amountToSteal);\r\n            } else {\r\n              enemy.resourcesHeld.set(resourceToSteal.resourceEnum, enemy.resourcesHeld.get(resourceToSteal.resourceEnum) + amountToSteal);\r\n            }\r\n\r\n            if (amountToSteal > 0) {\r\n              enemy.totalHeld += amountToSteal;\r\n\r\n              resourceToSteal.addAmount(-amountToSteal);\r\n              this.log(`An enemy stole ${Math.floor(amountToSteal)} ${resourceToSteal.name}!`);\r\n            }\r\n          }\r\n        } else {\r\n          target.tile.health -= enemy.attack;\r\n          if (target.tile.health < 0) {\r\n            target.tile.health = 0;\r\n          }\r\n\r\n          if (target.tile.health <= 0) {\r\n            this.mapService.calculateResourceConnections();\r\n\r\n            this.finishTask(enemy);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  killEnemy(enemy: Enemy, killSilently = false) {\r\n    let enemyDefeatedMessage = 'An enemy has been defeated!';\r\n\r\n    if (enemy.totalHeld > 0) {\r\n      enemyDefeatedMessage += ' Resources recovered:';\r\n\r\n      for (const resourceEnum of enemy.resourcesToSteal) {\r\n        const stolenAmount = enemy.resourcesHeld.get(resourceEnum);\r\n        if (isNaN(stolenAmount) || stolenAmount <= 0) {\r\n          continue;\r\n        }\r\n\r\n        const resource = this.resourcesService.resources.get(resourceEnum);\r\n        resource.addAmount(stolenAmount);\r\n\r\n        enemyDefeatedMessage += ` ${Math.floor(stolenAmount)} ${resource.name},`;\r\n      }\r\n\r\n      enemyDefeatedMessage = enemyDefeatedMessage.slice(0, enemyDefeatedMessage.length - 1) + '.';\r\n    }\r\n\r\n    if (!killSilently) {\r\n      this.log(enemyDefeatedMessage);\r\n    }\r\n\r\n    this.enemies = this.enemies.filter(_enemy => _enemy !== enemy);\r\n  }\r\n\r\n  resourceIsBeingStolen(resource: Resource): boolean {\r\n    const activeEnemies = this.enemies.filter(\r\n      enemy => enemy.pathingDone && enemy.targets.length &&\r\n        enemy.targets[enemy.targetIndex].tile.buildingTileType === BuildingTileType.Home);\r\n\r\n    return activeEnemies.some(enemy => enemy.resourcesToSteal.includes(resource.resourceEnum));\r\n  }\r\n\r\n  private log(message: string) {\r\n    this.messagesService.add(MessageSource.Enemy, message);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\nimport { Fighter } from '../../objects/entity';\nimport { Tile } from '../../objects/tile';\nimport { Resource } from './../../objects/resource';\nimport { ResourceEnum } from './../../objects/resourceData';\nimport { MapTile } from './../../objects/tile';\nimport { Vector } from '../../objects/vector';\nimport { ResourcesService } from '../resources/resources.service';\nimport { EnemyService } from './../enemy/enemy.service';\nimport { MapService } from '../map/map.service';\nimport { Tick } from '../tick/tick.service';\n\ndeclare var require: any;\nconst baseFighterTypes = require('../../../assets/json/fighters.json');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FighterService implements Tick {\n  public fighterTypes: Fighter[] = baseFighterTypes;\n  public fighters: Fighter[] = [];\n  public selectedFighterType: Fighter;\n\n  constructor(protected resourcesService: ResourcesService,\n              protected enemyService: EnemyService,\n              protected mapService: MapService) {\n  }\n\n  tick(elapsed: number, deltaTime: number) {\n    this.fighters.map(fighter => fighter.tick(elapsed, deltaTime));\n\n    this.fighters = this.fighters.filter(fighter => fighter.health > 0);\n  }\n\n  processFighters() {\n    const enemies = this.enemyService.enemies;\n    const enemyMagnitudes = enemies.map(enemy => Math.sqrt(enemy.x ** 2 + enemy.y ** 2));\n\n    for (const fighter of this.fighters) {\n      const distance = Math.sqrt(fighter.x ** 2 + fighter.y ** 2);\n\n      for (let i = 0; i < enemies.length; i++) {\n        if (Math.abs(distance - enemyMagnitudes[i]) <= fighter.attackRange * this.mapService.tilePixelSize) {\n          this.mapService.spawnProjectile(fighter, enemies[i]);\n          break;\n        }\n      }\n    }\n  }\n\n  createFighter(tile: Tile, fighterType: Fighter) {\n    const goldResource: Resource = this.resourcesService.resources.get(ResourceEnum.Gold);\n    const mapTile: MapTile = this.mapService.mapTiles[tile.mapTileType];\n    const overlaps = this.fighters.filter(_fighter => !_fighter.moveable && _fighter.currentTile === tile);\n\n    if (goldResource.amount < fighterType.cost || !mapTile.walkable || overlaps.length) {\n      return;\n    }\n\n    this.resourcesService.resources.get(ResourceEnum.Gold).addAmount(-fighterType.cost);\n\n    const fighter = new Fighter(fighterType.name, new Vector(tile.x, tile.y), tile, fighterType.health, 0.003, fighterType.attack,\n      fighterType.defense, fighterType.attackRange, fighterType.description, fighterType.cost, fighterType.moveable, 1000,\n      this.resourcesService, this.enemyService, this.mapService);\n\n    this.fighters.push(fighter);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { ResourcesService } from '../resources/resources.service';\r\nimport { StoreService } from './../store/store.service';\r\nimport { Tick } from './../tick/tick.service';\r\nimport { ResourceEnum } from './../../objects/resourceData';\r\nimport { Tile, MapTileType, BuildingTileType, MapTile, BuildingTile, TileCropDetail, ResourceTile, Market } from '../../objects/tile';\r\nimport { Resource } from '../../objects/resource';\r\nimport { ResourceAnimation, Projectile, Actor, Fighter, ResourceAnimationType } from '../../objects/entity';\r\nimport { Vector } from '../../objects/vector';\r\n\r\ndeclare var require: any;\r\nconst Jimp = require('jimp');\r\nconst baseTiles = require('../../../assets/json/tileTypes.json');\r\n\r\nexport enum CursorTool {\r\n  PlaceBuildings = 'PLACEBUILDINGS',\r\n  ClearBuildings = 'CLEARBUILDINGS',\r\n  TileDetail = 'TILEDETAIL',\r\n  PlaceFighters = 'PLACEFIGHTERS',\r\n  FighterDetail = 'FIGHTERDETAIL'\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MapService implements Tick {\r\n  public tileTypes = baseTiles.tileTypes;\r\n\r\n  public mapTiles = baseTiles.mapTiles;\r\n  public buildingTiles = baseTiles.buildingTiles;\r\n  public resourceTiles = baseTiles.resourceTiles;\r\n\r\n  public mapTileArray: MapTile[] = [];\r\n  public buildingTileArray: BuildingTile[] = [];\r\n  public resourceTileArray: ResourceTile[] = [];\r\n\r\n  cursorTool: CursorTool;\r\n\r\n  buildingListVisible = false;\r\n  fighterListVisible = false;\r\n\r\n  focusedTile: Tile;\r\n  focusedFighter: Fighter;\r\n  focusedBuildingTile: BuildingTile;\r\n  focusedResourceTile: ResourceTile;\r\n  focusedResources: Resource[];\r\n\r\n  public enemySpawnTiles: Tile[] = [];\r\n\r\n  mapWidth: number;\r\n  mapHeight: number;\r\n\r\n  public tiledMap: Tile[] = [];\r\n  resourceAnimations: ResourceAnimation[] = [];\r\n  projectiles: Projectile[] = [];\r\n\r\n  deleteMode = false;\r\n\r\n  tileAnimationSpeed = 0.003;\r\n  enemyAnimationSpeed = 0.003;\r\n  projectileAnimationSpeed = 0.003;\r\n\r\n  highFramerate = 25;\r\n  lowFramerate = 125;\r\n\r\n  canvasWidth = 750;\r\n  canvasHeight = 750;\r\n\r\n  tilePixelSize = 16;\r\n  gridWidth = 150;\r\n  gridHeight = 150;\r\n  canvasPixelWidth: number;\r\n  canvasPixelHeight: number;\r\n\r\n  constructor(protected resourcesService: ResourcesService,\r\n              protected storeService: StoreService) { }\r\n\r\n  initializeMap() {\r\n    const _tiledMap: Tile[] = [];\r\n    let mapTileIds: number[], resourceTileIds: number[], buildingTileIds: number[], flagTileIds: number[];\r\n    let _mapWidth: number, _mapHeight: number;\r\n\r\n    for (const key in this.mapTiles) {\r\n      if (this.mapTiles.hasOwnProperty(key)) {\r\n        this.mapTileArray.push(this.mapTiles[key]);\r\n      }\r\n    }\r\n\r\n    for (const key in this.buildingTiles) {\r\n      if (this.buildingTiles.hasOwnProperty(key)) {\r\n        this.buildingTileArray.push(this.buildingTiles[key]);\r\n      }\r\n    }\r\n\r\n    for (const key in this.resourceTiles) {\r\n      if (this.resourceTiles.hasOwnProperty(key)) {\r\n        this.resourceTileArray.push(this.resourceTiles[key]);\r\n      }\r\n    }\r\n\r\n    const xmlRequest = new XMLHttpRequest();\r\n    xmlRequest.onload = function() {\r\n      const xmlDoc = new DOMParser().parseFromString(xmlRequest.responseText, 'text/xml');\r\n      const layers = xmlDoc.getElementsByTagName('layer');\r\n      let mapLayer: Element, resourceLayer: Element, buildingLayer: Element, flagLayer: Element;\r\n\r\n      for (let i = 0; i < layers.length; i++) {\r\n        switch (layers[i].attributes['name'].value) {\r\n          case 'Map Layer':\r\n            mapLayer = layers[i];\r\n            break;\r\n          case 'Resource Layer':\r\n            resourceLayer = layers[i];\r\n            break;\r\n          case 'Building Layer':\r\n            buildingLayer = layers[i];\r\n            break;\r\n          case 'Flag Layer':\r\n            flagLayer = layers[i];\r\n            break;\r\n        }\r\n      }\r\n\r\n      _mapWidth = +mapLayer.attributes.getNamedItem('width').value;\r\n      _mapHeight = +mapLayer.attributes.getNamedItem('height').value;\r\n\r\n      mapTileIds = mapLayer.textContent.split(',').map(tileId => +tileId);\r\n      resourceTileIds = resourceLayer.textContent.split(',').map(tileId => +tileId);\r\n      buildingTileIds = buildingLayer.textContent.split(',').map(tileId => +tileId);\r\n      flagTileIds = flagLayer.textContent.split(',').map(tileId => +tileId);\r\n    };\r\n\r\n    xmlRequest.open('GET', './assets/tilemap/map.tmx', false);\r\n    xmlRequest.send();\r\n\r\n    for (let i = 0; i < mapTileIds.length; i++) {\r\n      const mapTileId = mapTileIds[i];\r\n      const resourceTileId = resourceTileIds[i];\r\n      const buildingTileId = buildingTileIds[i];\r\n      const flagTileId = flagTileIds[i];\r\n\r\n      const position = new Vector(16 * (_tiledMap.length % _mapWidth), 16 * Math.floor(_tiledMap.length / _mapWidth));\r\n      const tileCropDetail = {x: 0, y: 0, width: 16, height: 16};\r\n\r\n      let resourceTileType, buildingTileType;\r\n\r\n      if (resourceTileId > 0) {\r\n        resourceTileType = this.tileTypes[resourceTileId];\r\n      }\r\n\r\n      if (buildingTileId > 0) {\r\n        buildingTileType = this.tileTypes[buildingTileId];\r\n      }\r\n\r\n      const tile = new Tile(_tiledMap.length, this.tileTypes[mapTileId],\r\n        resourceTileType, buildingTileType, false, position, tileCropDetail, 50, this.resourcesService);\r\n\r\n      const flagTileType = this.tileTypes[flagTileId];\r\n      if (flagTileType === BuildingTileType.EnemyPortal) {\r\n        this.enemySpawnTiles.push(tile);\r\n      }\r\n      _tiledMap.push(tile);\r\n    }\r\n\r\n    this.tiledMap = _tiledMap;\r\n    this.mapWidth = _mapWidth;\r\n    this.mapHeight = _mapHeight;\r\n\r\n    this.calculateResourceConnections();\r\n  }\r\n\r\n  tick(elapsed: number, deltaTime: number) {\r\n    for (const resourceAnimation of this.resourceAnimations) {\r\n      resourceAnimation.tick(elapsed, deltaTime);\r\n\r\n      if (resourceAnimation.pathingDone) {\r\n        resourceAnimation.finishAnimation();\r\n      }\r\n    }\r\n\r\n    for (const tile of this.tiledMap.filter(_tile => _tile.market)) {\r\n      tile.market.tick(elapsed, deltaTime);\r\n    }\r\n\r\n    this.resourceAnimations = this.resourceAnimations.filter(animation => !animation.pathingDone);\r\n\r\n    for (const projectile of this.projectiles) {\r\n      projectile.tick(elapsed, deltaTime);\r\n    }\r\n\r\n    this.projectiles = this.projectiles.filter(projectile => !projectile.hitTarget);\r\n  }\r\n\r\n  calculateResourceConnections() {\r\n    const resourceTiles = this.getResourceTiles();\r\n\r\n    for (const resource of this.resourcesService.getResources()) {\r\n      resource.pathAvailable = false;\r\n    }\r\n\r\n    const homeTile = this.tiledMap.filter(tile => tile.buildingTileType === BuildingTileType.Home)[0];\r\n\r\n    for (const resourceTile of resourceTiles) {\r\n      if (resourceTile.health <= 0) {\r\n        continue;\r\n      }\r\n\r\n      this.findPath(resourceTile, homeTile, true, true).subscribe(tilePath => {\r\n        resourceTile.buildingPath = tilePath;\r\n\r\n        if (resourceTile.buildingPath.length && !resourceTile.buildingPath.some(tile => tile.health <= 0)) {\r\n          const resources = this.resourceTiles[resourceTile.resourceTileType].resourceEnums\r\n            .map(resourceEnum => this.resourcesService.resources.get(resourceEnum));\r\n          for (const resource of resources) {\r\n            resource.pathAvailable = true;\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    for (const marketTile of this.tiledMap.filter(tile => tile.market)) {\r\n      marketTile.market.calculateConnection();\r\n    }\r\n  }\r\n\r\n  findPath(startTile: Tile, targetTile: Tile, onlyPathable: boolean, onlyWalkable: boolean,\r\n      maxAttempts: number = Infinity): Observable<Tile[]> {\r\n    const visitedTiles: Tile[] = [];\r\n\r\n    let tileQueue: Tile[] = [];\r\n    const tileDistances = this.tiledMap.map(_ => Infinity);\r\n    const tileHeuristicDistances = this.tiledMap.map(_ => Infinity);\r\n    const nodeMap = new Map<Tile, Tile>();\r\n\r\n    let currentNode: Tile;\r\n\r\n    tileDistances[startTile.id] = 0;\r\n\r\n    tileQueue.push(startTile);\r\n\r\n    let nodesProcessed = 0;\r\n\r\n    while (tileQueue.length) {\r\n      nodesProcessed++;\r\n      if (nodesProcessed > maxAttempts) {\r\n        break;\r\n      }\r\n\r\n      currentNode = tileQueue.sort((a, b) => tileHeuristicDistances[a.id] - tileHeuristicDistances[b.id])[0];\r\n      tileQueue = tileQueue.filter(tile => tile !== currentNode);\r\n\r\n      if (currentNode === targetTile) {\r\n        const buildingPath: Tile[] = [];\r\n\r\n        let backtrackNode = currentNode;\r\n        while (backtrackNode !== startTile) {\r\n          buildingPath.push(backtrackNode);\r\n          backtrackNode = nodeMap.get(backtrackNode);\r\n        }\r\n\r\n        buildingPath.push(backtrackNode);\r\n\r\n        return of(buildingPath.reverse());\r\n      }\r\n\r\n      const neighborDistance = tileDistances[currentNode.id] + 1;\r\n\r\n      for (const neighbor of this.getNeighborTiles(currentNode)) {\r\n        const pathable = neighbor.buildingTileType && this.buildingTiles[neighbor.buildingTileType].resourcePathable;\r\n        const walkable = this.mapTiles[neighbor.mapTileType].walkable || pathable;\r\n\r\n        if (!visitedTiles.includes(neighbor) && (!onlyPathable || pathable) && (!onlyWalkable || walkable) &&\r\n            tileDistances[neighbor.id] > neighborDistance) {\r\n          nodeMap.set(neighbor, currentNode);\r\n\r\n          tileDistances[neighbor.id] = neighborDistance;\r\n          tileHeuristicDistances[neighbor.id] = neighborDistance + targetTile.position.subtract(neighbor.position).magnitude;\r\n\r\n          tileQueue.push(neighbor);\r\n        }\r\n      }\r\n\r\n      visitedTiles.push(currentNode);\r\n    }\r\n\r\n    return of([]);\r\n  }\r\n\r\n  getRandomTile(tileTypes?: MapTileType[]): Tile {\r\n    let tiles = this.tiledMap;\r\n\r\n    if (tileTypes) {\r\n      tiles = tiles.filter(tile => tileTypes.some(tileType => tileType === tile.mapTileType));\r\n    }\r\n\r\n    return tiles[Math.floor(Math.random() * tiles.length)];\r\n  }\r\n\r\n  spawnHarvestedResourceAnimation(resource: Resource, multiplier: number = 1, spawnedByPlayer: boolean) {\r\n    const matchingTiles = this.getTilesForResource(resource).filter(_tile => _tile.buildingPath.length > 0);\r\n\r\n    if (!resource.canAfford(multiplier)) {\r\n      return;\r\n    }\r\n\r\n    resource.deductResourceConsumes(multiplier);\r\n\r\n    const tile = matchingTiles[Math.floor(Math.random() * matchingTiles.length)];\r\n    if (tile === undefined) {\r\n      return;\r\n    }\r\n\r\n    const tilePathCopy = tile.buildingPath.map(_tile => _tile);\r\n    const animationType = spawnedByPlayer ? ResourceAnimationType.PlayerSpawned : ResourceAnimationType.WorkerSpawned;\r\n\r\n    const resourceAnimation = new ResourceAnimation(new Vector(tile.x, tile.y), tile,\r\n      0.003, tilePathCopy, animationType, resource.resourceEnum, multiplier, spawnedByPlayer, this.resourcesService, this.storeService);\r\n    this.resourceAnimations.push(resourceAnimation);\r\n  }\r\n\r\n  spawnSoldResourceAnimation(resourceEnum: ResourceEnum, multiplier: number, market: Market) {\r\n    const resourceAnimation = new ResourceAnimation(new Vector(market.homeTile.x, market.homeTile.y),\r\n      market.homeTile, 0.003, market.tilePath, ResourceAnimationType.Sold,\r\n      resourceEnum, multiplier, false, this.resourcesService, this.storeService);\r\n    this.resourceAnimations.push(resourceAnimation);\r\n  }\r\n\r\n  spawnProjectile(owner: Actor, target: Actor) {\r\n    const projectile = new Projectile('Arrow', new Vector(owner.x, owner.y),\r\n      owner.currentTile, 0.006, owner, target);\r\n    this.projectiles.push(projectile);\r\n  }\r\n\r\n  getNeighborTiles(tile: Tile): Tile[] {\r\n    const tileCoordinates = this.getTileCoordinates(tile);\r\n\r\n    const neighborPositions = [\r\n      {x: tileCoordinates.x - 1, y: tileCoordinates.y},\r\n      {x: tileCoordinates.x + 1, y: tileCoordinates.y},\r\n      {x: tileCoordinates.x, y: tileCoordinates.y - 1},\r\n      {x: tileCoordinates.x, y: tileCoordinates.y + 1}\r\n    ];\r\n\r\n    const tiles: Tile[] = [];\r\n    for (const position of neighborPositions) {\r\n      if (position.x >= 0 && position.x < this.mapWidth &&\r\n          position.y >= 0 && position.y < this.mapHeight) {\r\n        tiles.push(this.getTile(position.x, position.y));\r\n      }\r\n    }\r\n\r\n    return tiles;\r\n  }\r\n\r\n  getRowCount(): number {\r\n    return this.mapHeight;\r\n  }\r\n\r\n  getColumnCount(): number {\r\n    return this.mapWidth;\r\n  }\r\n\r\n  getTileCoordinates(tile: Tile) {\r\n    const tileIndex = this.tiledMap.indexOf(tile);\r\n\r\n    return {\r\n      x: tileIndex % this.mapWidth,\r\n      y: Math.floor(tileIndex / this.mapWidth)\r\n    };\r\n  }\r\n\r\n  getTile(x: number, y: number) {\r\n    return this.tiledMap[x + y * this.mapWidth];\r\n  }\r\n\r\n  clampTileCoordinates(x: number, y: number) {\r\n    return [Math.floor(x / this.tilePixelSize), Math.floor(y / this.tilePixelSize)];\r\n  }\r\n\r\n  getResourceTiles(resourceEnum?: ResourceEnum): Tile[] {\r\n    let tiles = this.tiledMap.filter(tile => tile.resourceTileType !== undefined);\r\n\r\n    if (resourceEnum !== undefined) {\r\n      const matchingTypes = this.resourceTileArray.filter(tile => tile.resourceEnums.includes(resourceEnum)).map(tile => tile.tileType);\r\n      tiles = tiles.filter(tile => matchingTypes.includes(tile.resourceTileType));\r\n    }\r\n\r\n    return tiles;\r\n  }\r\n\r\n  getTileType(tileId: number): MapTileType {\r\n    if (tileId in [37, 38, 39, 40, 41, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 71, 72, 73, 74, 75, 76, 77, 78, 88,\r\n      89, 90, 91, 92, 93, 94, 95, 105, 106, 107, 108, 109, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 130]) {\r\n      return MapTileType.Grass;\r\n    } else if (tileId in [53, 122]) {\r\n      return MapTileType.Water;\r\n    }\r\n\r\n    return MapTileType.Mountain;\r\n  }\r\n\r\n  getTileCropDetail(tileId: number): TileCropDetail {\r\n    return {x: 0, y: 0, width: 16, height: 16};\r\n  }\r\n\r\n  getTilesForResource(resource: Resource) {\r\n    const matchingTypes = this.resourceTileArray.filter(tile => tile.resourceEnums.includes(resource.resourceEnum))\r\n      .map(tile => tile.tileType);\r\n\r\n    return this.tiledMap.filter(tile => matchingTypes.includes(tile.resourceTileType));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\n\nimport { Message, MessageSource } from './../../objects/message';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessagesService {\n  messages: Message[] = [];\n  visibleSources: MessageSource[] = [MessageSource.Admin, MessageSource.Buildings, MessageSource.Main, MessageSource.Enemy,\n    MessageSource.Fighter, MessageSource.Map, MessageSource.Resources, MessageSource.Settings,\n    MessageSource.Store, MessageSource.Upgrades, MessageSource.Workers];\n  messagesDataSource = new MatTableDataSource(this.messages);\n  messageLimit = 50;\n\n  constructor() { }\n\n  add(source: MessageSource, message: string) {\n    if (this.messages.length >= this.messageLimit) {\n      this.messages = this.messages.slice(1);\n    }\n\n    this.messages.push(new Message(source, message));\n\n    this.getFilteredMessages();\n  }\n\n  clear() {\n    this.messages = [];\n    this.messagesDataSource.data = [];\n  }\n\n  getFilteredMessages() {\n    this.messagesDataSource.data = this.messages.filter(message => this.visibleSources.includes(message.source));\n  }\n}\n","import { Injectable, OnInit } from '@angular/core';\r\n\r\nimport { Resource } from '../../objects/resource';\r\nimport { ResourceType, ResourceEnum } from './../../objects/resourceData';\r\nimport { MessageSource } from '../../objects/message';\r\nimport { MessagesService } from '../messages/messages.service';\r\n\r\ndeclare var require: any;\r\nconst baseResources = require('../../../assets/json/resources.json');\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResourcesService {\r\n  public resources = new Map<string, Resource>();\r\n  highestTierReached = 0;\r\n\r\n  constructor(protected messagesService: MessagesService) {\r\n    this.loadBaseResources();\r\n  }\r\n\r\n  public loadBaseResources() {\r\n    for (const resourceName in ResourceEnum) {\r\n      if (Number(resourceName)) {\r\n        continue;\r\n      }\r\n\r\n      const resourceEnum = ResourceEnum[resourceName];\r\n\r\n      const baseResource = baseResources[resourceEnum];\r\n      const resource = new Resource(baseResource.name, baseResource.resourceType, baseResource.resourceEnum, baseResource. iconPath,\r\n                                    baseResource.resourceConsumes, baseResource.harvestable, baseResource.harvestMilliseconds,\r\n                                    baseResource.sellable, baseResource.sellsFor, baseResource.resourceDescription, baseResource.workerVerb,\r\n                                    baseResource.workerNoun, baseResource.resourceTier, this);\r\n      this.resources.set(resourceEnum, resource);\r\n    }\r\n  }\r\n\r\n  public getResources(resourceType?: ResourceType,\r\n                      filterBySellable = false, filterByAccessible = false, filterByHarvestable = false): Resource[] {\r\n    let resources = Array.from(this.resources.values());\r\n\r\n    if (resourceType) {\r\n      resources = resources.filter(resource => resource.resourceType === resourceType);\r\n    }\r\n    if (filterBySellable) {\r\n      resources = resources.filter(resource => resource.sellable);\r\n    }\r\n    if (filterByAccessible) {\r\n      resources = resources.filter(resource => resource.resourceAccessible);\r\n    }\r\n    if (filterByHarvestable) {\r\n      resources = resources.filter(resource => resource.harvestable);\r\n    }\r\n\r\n    return resources;\r\n  }\r\n\r\n  public getPlayerScore(): number {\r\n    const resources = Array.from(this.resources.values());\r\n    return resources.map(resource => resource.amount * resource.resourceTier).reduce((total, amount) => total += amount);\r\n  }\r\n\r\n  private log(message: string) {\r\n    this.messagesService.add(MessageSource.Resources, message);\r\n  }\r\n}\r\n","import { FormControl } from '@angular/forms';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar, MatDialog, MatSelectChange } from '@angular/material';\n\nimport { SaveDialogComponent } from '../../components/save-dialog/save-dialog.component';\nimport { ResourcesService } from './../resources/resources.service';\nimport { UpgradesService } from './../upgrades/upgrades.service';\nimport { WorkersService } from './../workers/workers.service';\nimport { MessagesService } from '../messages/messages.service';\nimport { MapService } from './../map/map.service';\nimport { EnemyService } from './../enemy/enemy.service';\nimport { FighterService } from './../fighter/fighter.service';\nimport { Tick } from './../tick/tick.service';\nimport { ResourceType, ResourceEnum } from './../../objects/resourceData';\nimport { SaveData, WorkerData, TileData } from '../../objects/savedata';\nimport { BuildingTileType, BuildingSubType, Market } from '../../objects/tile';\nimport { Enemy, Fighter, ResourceAnimationType } from '../../objects/entity';\nimport { MessageSource } from './../../objects/message';\nimport { Vector } from '../../objects/vector';\n\nconst defaultResourceBinds = [ResourceEnum.Oak, ResourceEnum.Pine, ResourceEnum.Birch, ResourceEnum.Stone, ResourceEnum.Graphite,\n  ResourceEnum.Limestone, ResourceEnum.CopperOre, ResourceEnum.TinOre, ResourceEnum.BronzeIngot, ResourceEnum.IronOre];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService implements Tick {\n  versionHistory = ['1.2', 'Alpha 3', 'Alpha 3.1', 'Alpha 3.2'];\n  gameVersion = 'Alpha 3.2';\n\n  bindSelected = new FormControl();\n\n  autosaveInterval = 60000;\n  lastAutosave = this.autosaveInterval;\n  debugMode = false;\n\n  resourceBinds = defaultResourceBinds;\n\n  disableAnimations = false;\n  slimInterface = false;\n\n  mapDetailMode = true;\n  mapLowFramerate = false;\n\n  harvestDetailColor = '#a4ff89';\n  workerDetailColor = '#ae89ff';\n  resourceAnimationColors = {\n    'PLAYERSPAWNED': '#a4ff89',\n    'WORKERSPAWNED': 'ae89ff',\n    'SOLD': '#ffc089'\n  };\n\n  constructor(protected resourcesService: ResourcesService,\n              protected upgradesService: UpgradesService,\n              protected workersService: WorkersService,\n              protected mapService: MapService,\n              protected enemyService: EnemyService,\n              protected fighterService: FighterService,\n              protected messagesService: MessagesService,\n              protected snackbar: MatSnackBar,\n              public dialog: MatDialog) { }\n\n  tick(elapsed: number, deltaTime: number) {\n    if (elapsed - this.lastAutosave < this.autosaveInterval || this.autosaveInterval < 0) {\n      return;\n    }\n\n    this.lastAutosave = elapsed;\n    this.saveGame();\n  }\n\n  resourceBindChange(event: MatSelectChange) {\n    const limitExceeded = event.value.length > 10;\n    this.bindSelected.setErrors({'length': limitExceeded});\n\n    if (!limitExceeded) {\n      this.resourceBinds = event.value;\n\n      for (const resource of this.resourcesService.getResources()) {\n        resource.bindIndex = -1;\n      }\n\n      for (const resourceBind of this.resourceBinds) {\n        const resource = this.resourcesService.resources.get(resourceBind);\n        resource.bindIndex = this.resourceBinds.indexOf(resourceBind);\n      }\n    }\n  }\n\n  openSaveDialog(saveData?: string) {\n    const dialogRef = this.dialog.open(SaveDialogComponent, {\n      width: '750px',\n      height: '150px',\n      data: saveData === undefined ? {} : {saveData: saveData}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result !== undefined) {\n        if (this.importSave(result)) {\n          this.snackbar.open('Game successfully loaded!', '', {duration: 2000});\n          this.log('Game successfully loaded!');\n        }\n      }\n    });\n  }\n\n  setAutosave() {\n    this.lastAutosave = this.autosaveInterval;\n  }\n\n  saveGame() {\n    const saveData = this.exportSave();\n\n    localStorage.setItem('clickerGameSaveData', saveData);\n\n    this.snackbar.open('Game successfully saved!', '', {duration: 2000});\n    this.log('Game successfully saved!');\n  }\n\n  loadGame() {\n    const saveData = localStorage.getItem('clickerGameSaveData');\n\n    if (saveData === null) {\n      return;\n    }\n\n    if (this.importSave(saveData)) {\n      this.snackbar.open('Game successfully loaded!', '', {duration: 2000});\n      this.log('Game successfully loaded!');\n    }\n  }\n\n  deleteSave() {\n    localStorage.removeItem('clickerGameSaveData');\n\n    this.resourcesService.loadBaseResources();\n    this.upgradesService.loadBaseUpgrades();\n    this.workersService.loadBaseWorkers();\n    this.mapService.initializeMap();\n    this.enemyService.enemies = [];\n    this.fighterService.fighters = [];\n\n    this.autosaveInterval = 60000;\n    this.setAutosave();\n\n    this.debugMode = false;\n\n    this.resourcesService.highestTierReached = 0;\n\n    this.workersService.workersPaused = false;\n\n    this.resourceBinds = defaultResourceBinds;\n    this.bindSelected.setValue(this.resourceBinds);\n    this.resourceBindChange({'source': null, 'value': this.resourceBinds});\n\n    this.messagesService.visibleSources = [MessageSource.Admin, MessageSource.Buildings, MessageSource.Main, MessageSource.Enemy,\n      MessageSource.Fighter, MessageSource.Map, MessageSource.Resources, MessageSource.Settings,\n      MessageSource.Store, MessageSource.Upgrades, MessageSource.Workers];\n\n    this.enemyService.enemiesActive = false;\n\n    this.disableAnimations = false;\n    this.slimInterface = false;\n\n    this.mapLowFramerate = false;\n    this.resourceAnimationColors = {\n      'PLAYERSPAWNED': '#a4ff89',\n      'WORKERSPAWNED': 'ae89ff',\n      'SOLD': '#ffc089'\n    };\n\n    this.snackbar.open('Game save deleted.', '', {duration: 2000});\n    this.log('Game save deleted.');\n  }\n\n  exportSave() {\n    const saveData: SaveData = {\n      resources: [],\n      upgrades: [],\n      workers: [],\n      tiles: [],\n      enemies: [],\n      fighters: [],\n      settings: {\n        autosaveInterval: this.autosaveInterval,\n        debugMode: this.debugMode,\n        highestTierReached: this.resourcesService.highestTierReached,\n        workersPaused: this.workersService.workersPaused,\n        hidePurchasedUpgrades: this.upgradesService.hidePurchasedUpgrades,\n        resourceBinds: this.resourceBinds,\n        visibleSources: this.messagesService.visibleSources,\n        enemiesActive: this.enemyService.enemiesActive,\n        slimInterface: this.slimInterface,\n        mapLowFramerate: this.mapLowFramerate,\n        resourceAnimationColors: this.resourceAnimationColors\n      },\n      gameVersion: this.gameVersion\n    };\n\n    for (const resource of this.resourcesService.getResources()) {\n      saveData.resources.push({\n        resourceEnum: resource.resourceEnum,\n        amount: resource.amount,\n        harvestable: resource.harvestable,\n        harvestYield: resource.harvestYield,\n        harvestMilliseconds: resource.harvestMilliseconds,\n        sellable: resource.sellable,\n        sellsFor: resource.sellsFor,\n        autoSellCutoff: resource.autoSellCutoff,\n        resourceAccessible: resource.resourceAccessible\n      });\n    }\n\n    for (const upgrade of this.upgradesService.upgrades) {\n      saveData.upgrades.push({\n        id: upgrade.id,\n        purchased: upgrade.purchased\n      });\n    }\n\n    for (const worker of this.workersService.getWorkers()) {\n      const workerData: WorkerData = {\n        resourceType: worker.resourceType,\n        cost: worker.cost,\n        workerCount: worker.workerCount,\n        workersByResource: []\n      };\n\n      for (const resourceWorker of worker.getResourceWorkers()) {\n        workerData.workersByResource.push({\n          resourceEnum: resourceWorker.resourceEnum,\n          workable: resourceWorker.workable,\n          workerCount: resourceWorker.workerCount,\n          workerYield: resourceWorker.workerYield\n        });\n      }\n\n      saveData.workers.push(workerData);\n    }\n\n    for (const tile of this.mapService.tiledMap) {\n      if (tile.buildingTileType === undefined && tile.buildingTileType !== BuildingTileType.EnemyPortal) {\n        continue;\n      }\n\n      const tileData: TileData = {\n        id: tile.id,\n        health: tile.health,\n        maxHealth: tile.maxHealth,\n        buildingRemovable: tile.buildingRemovable,\n        tileCropDetail: tile.tileCropDetail,\n        statLevels: tile.statLevels,\n        statCosts: tile.statCosts\n      };\n\n      if (tile.resourceTileType !== undefined) {\n        tileData.resourceTileType = tile.resourceTileType;\n      }\n      if (tile.buildingTileType !== undefined) {\n        tileData.buildingTileType = tile.buildingTileType;\n      }\n\n      if (tile.market) {\n        tileData.sellInterval = tile.market.sellInterval;\n        tileData.sellQuantity = tile.market.sellQuantity;\n      }\n\n      saveData.tiles.push(tileData);\n    }\n\n    for (const enemy of this.enemyService.enemies) {\n      saveData.enemies.push({\n        name: enemy.name,\n        position: enemy.position,\n        spawnPosition: enemy.spawnPosition,\n        health: enemy.health,\n        maxHealth: enemy.maxHealth,\n        animationSpeed: enemy.animationSpeed,\n        attack: enemy.attack,\n        defense: enemy.defense,\n        attackRange: enemy.attackRange,\n        targetableBuildingTypes: enemy.targetableBuildingTypes,\n        resourcesToSteal: enemy.resourcesToSteal,\n        resorucesHeld: enemy.resourcesHeld,\n        stealMax: enemy.stealMax,\n        resourceCapacity: enemy.resourceCapacity\n      });\n    }\n\n    for (const fighter of this.fighterService.fighters) {\n      saveData.fighters.push({\n        name: fighter.name,\n        description: fighter.description,\n        position: fighter.position,\n        spawnPosition: fighter.spawnPosition,\n        health: fighter.health,\n        maxHealth: fighter.maxHealth,\n        animationSpeed: fighter.animationSpeed,\n        attack: fighter.attack,\n        defense: fighter.defense,\n        attackRange: fighter.attackRange,\n        moveable: fighter.moveable,\n        fireMilliseconds: fighter.fireMilliseconds,\n        cost: fighter.cost,\n        statLevels: fighter.statLevels,\n        statCosts: fighter.statCosts\n      });\n    }\n\n    return btoa(JSON.stringify(saveData));\n  }\n\n  importSave(saveDataString: string): boolean {\n    const backupSave = this.exportSave();\n\n    try {\n      let saveData: SaveData = JSON.parse(atob(saveDataString));\n      saveData = this.processVersionDifferences(saveData);\n\n      if (!saveData.gameVersion) {\n        throw new Error('Save data is incompatible with the current version.');\n      }\n\n      if (saveData.resources !== undefined) {\n        for (const resourceData of saveData.resources) {\n          const resource = this.resourcesService.resources.get(resourceData.resourceEnum);\n\n          if (resource === undefined) {\n            continue;\n          }\n\n          resource.amount = resourceData.amount;\n          resource.harvestable = resourceData.harvestable;\n          resource.harvestYield = resourceData.harvestYield;\n          resource.harvestMilliseconds = resourceData.harvestMilliseconds;\n          resource.sellable = resourceData.sellable;\n          resource.sellsFor = resourceData.sellsFor;\n          resource.autoSellCutoff = resourceData.autoSellCutoff ? resourceData.autoSellCutoff : 0;\n        }\n      }\n\n      if (saveData.upgrades !== undefined) {\n        for (const upgradeData of saveData.upgrades) {\n          const upgrade = this.upgradesService.getUpgrade(upgradeData.id);\n\n          if (upgrade === undefined) {\n            continue;\n          }\n\n          upgrade.purchased = upgradeData.purchased;\n        }\n      }\n\n      if (saveData.workers !== undefined) {\n        for (const workerData of saveData.workers) {\n          const worker = this.workersService.workers.get(workerData.resourceType);\n\n          worker.cost = workerData.cost;\n          worker.workerCount = workerData.workerCount;\n          worker.freeWorkers = workerData.workerCount;\n\n          for (const resourceWorkerData of workerData.workersByResource) {\n            const resourceWorker = worker.resourceWorkers.get(resourceWorkerData.resourceEnum);\n\n            resourceWorker.workable = resourceWorkerData.workable;\n            resourceWorker.workerYield = resourceWorkerData.workerYield;\n            resourceWorker.workerCount = 0;\n\n            resourceWorker.sliderSetting = resourceWorkerData.workerCount;\n\n            worker.updateResourceWorker(resourceWorkerData.resourceEnum, resourceWorkerData.workerCount);\n          }\n\n          if (worker.freeWorkers < 0) {\n            throw new Error('Invalid worker settings.');\n          }\n        }\n      }\n\n      if (saveData.tiles !== undefined) {\n        for (const tileData of saveData.tiles) {\n          const tile = this.mapService.tiledMap.find(_tile => _tile.id === tileData.id);\n\n          if (tile === undefined) {\n            continue;\n          }\n\n          tile.health = tileData.health ? tileData.health : 50;\n          tile.maxHealth = tileData.maxHealth ? tileData.maxHealth : 50;\n\n          tile.resourceTileType = tileData.resourceTileType;\n          tile.buildingTileType = tileData.buildingTileType;\n\n          tile.buildingRemovable = tileData.buildingRemovable;\n\n          tile.tileCropDetail = tileData.tileCropDetail;\n\n          tile.statLevels = tileData.statLevels;\n          tile.statCosts = tileData.statCosts;\n        }\n\n        const marketTiles = saveData.tiles.filter(\n          tile => tile.buildingTileType && this.mapService.buildingTiles[tile.buildingTileType].subType === BuildingSubType.Market);\n\n        for (const tileData of marketTiles) {\n          const tile = this.mapService.tiledMap[tileData.id];\n          let resourceType;\n          switch (tileData.buildingTileType) {\n            case BuildingTileType.WoodMarket: {\n              resourceType = ResourceType.Wood;\n              break;\n            } case BuildingTileType.MineralMarket: {\n              resourceType = ResourceType.Mineral;\n              break;\n            } case BuildingTileType.MetalMarket: {\n              resourceType = ResourceType.Metal;\n              break;\n            }\n          }\n          tile.market = new Market(this.mapService, this.resourcesService, resourceType, tile, false);\n\n          tile.market.sellInterval = tileData.sellInterval ? tileData.sellInterval : 1000;\n          tile.market.sellQuantity = tileData.sellQuantity ? tileData.sellQuantity : 50;\n        }\n      }\n\n      if (saveData.enemies !== undefined) {\n        for (const enemyData of saveData.enemies) {\n          const tilePosition = this.mapService.clampTileCoordinates(enemyData.position.x, enemyData.position.y);\n          const tile = this.mapService.getTile(tilePosition[0], tilePosition[1]);\n\n          const enemy = new Enemy(enemyData.name, new Vector(enemyData.position.x, enemyData.position.y), tile, enemyData.health,\n            enemyData.animationSpeed, enemyData.attack, enemyData.defense, enemyData.attackRange, enemyData.targetableBuildingTypes,\n            enemyData.resourcesToSteal, enemyData.stealMax, enemyData.resourceCapacity);\n          enemy.spawnPosition = new Vector(enemyData.spawnPosition.x, enemyData.spawnPosition.y);\n\n          this.enemyService.findTargets(enemy);\n          this.enemyService.pickTarget(enemy);\n          this.enemyService.enemies.push(enemy);\n        }\n      }\n\n      if (saveData.fighters !== undefined) {\n        for (const fighterData of saveData.fighters) {\n          const tilePosition = this.mapService.clampTileCoordinates(fighterData.position.x, fighterData.position.y);\n          const tile = this.mapService.getTile(tilePosition[0], tilePosition[1]);\n\n          const fighter = new Fighter(fighterData.name, new Vector(fighterData.position.x, fighterData.position.y),\n            tile, fighterData.health, fighterData.animationSpeed, fighterData.attack,\n            fighterData.defense, fighterData.attackRange, fighterData.description,\n            fighterData.cost ? fighterData.cost : 50, fighterData.moveable,\n            fighterData.fireMilliseconds ? fighterData.fireMilliseconds : 1000,\n            this.resourcesService, this.enemyService, this.mapService);\n          fighter.maxHealth = fighterData.maxHealth;\n\n          if (fighterData.statLevels) {\n            fighter.statLevels = fighterData.statLevels;\n          }\n          if (fighterData.statCosts) {\n            fighter.statCosts = fighterData.statCosts;\n          }\n\n          this.fighterService.fighters.push(fighter);\n        }\n      }\n\n      if (saveData.settings !== undefined) {\n        this.autosaveInterval = saveData.settings.autosaveInterval ? saveData.settings.autosaveInterval : 900000;\n        this.debugMode = saveData.settings.debugMode ? saveData.settings.debugMode : false;\n\n        this.resourcesService.highestTierReached = saveData.settings.highestTierReached ? saveData.settings.highestTierReached : 0;\n\n        this.workersService.workersPaused = saveData.settings.workersPaused ? saveData.settings.workersPaused : false;\n        this.upgradesService.hidePurchasedUpgrades =\n          saveData.settings.hidePurchasedUpgrades ? saveData.settings.hidePurchasedUpgrades : false;\n\n        this.resourceBinds = saveData.settings.resourceBinds ? saveData.settings.resourceBinds : defaultResourceBinds;\n\n        this.messagesService.visibleSources = saveData.settings.visibleSources ? saveData.settings.visibleSources :\n          [MessageSource.Admin, MessageSource.Buildings, MessageSource.Main, MessageSource.Enemy,\n            MessageSource.Fighter, MessageSource.Map, MessageSource.Resources, MessageSource.Settings,\n            MessageSource.Store, MessageSource.Upgrades, MessageSource.Workers];\n\n        this.enemyService.enemiesActive = saveData.settings.enemiesActive ? saveData.settings.enemiesActive : false;\n\n        this.slimInterface = saveData.settings.slimInterface ? saveData.settings.slimInterface : false;\n\n        this.mapLowFramerate = saveData.settings.mapLowFramerate ? saveData.settings.mapLowFramerate : false;\n\n        this.harvestDetailColor = saveData.settings.harvestDetailColor ? saveData.settings.harvestDetailColor : '#a4ff89';\n        this.workerDetailColor = saveData.settings.workerDetailColor ? saveData.settings.workerDetailColor : '#ae89ff';\n        if (saveData.settings.resourceAnimationColors) {\n          this.resourceAnimationColors = saveData.settings.resourceAnimationColors;\n        }\n      }\n\n      this.mapService.calculateResourceConnections();\n\n      return true;\n    } catch (error) {\n      this.snackbar.open(`Error loading save data: ${error}`, '', {duration: 5000});\n      this.log('Error loading save data. Printing data to console for debugging.');\n      this.importSave(backupSave);\n\n      console.log(saveDataString);\n      console.error(error);\n\n      return false;\n    }\n  }\n\n  processVersionDifferences(saveData: any): SaveData {\n    const legacyResourceIds = {\n      0: 'GOLD',\n      1: 'OAK',\n      2: 'COPPERORE',\n      3: 'TINORE',\n      4: 'BRONZEINGOT',\n      5: 'IRONORE',\n      6: 'IRONINGOT',\n      7: 'PINE',\n      8: 'BIRCH',\n      9: 'EUCALYPTUS',\n      10: 'STEELINGOT',\n      11: 'GOLDORE',\n      12: 'GOLDINGOT',\n      13: 'STONE',\n      15: 'WILLOW',\n      16: 'ENTSOUL',\n      17: 'REANIMATEDENT',\n      18: 'LATINUMORE',\n      19: 'LATINUMINGOT',\n      20: 'UNBELIEVIUMORE',\n      21: 'LUSTRIALORE',\n      22: 'SPECTRUSORE',\n      23: 'TEMPROUSINGOT',\n      24: 'REFINEDTEMPROUS',\n      25: 'TEAK',\n      26: 'GRAPHITE',\n      27: 'LIMESTONE',\n      28: 'MARBLE',\n      29: 'QUARTZ',\n      30: 'OBSIDIAN',\n      31: 'DIAMOND'\n    };\n\n    const legacyWorkerIds = {\n      0: 'WOOD',\n      1: 'METAL',\n      2: 'MINERAL'\n    };\n\n    const oldVersionIndex = this.versionHistory.indexOf(saveData.gameVersion);\n\n    if (oldVersionIndex <= this.versionHistory.indexOf('1.2')) {\n      for (const resourceData of saveData.resources) {\n        const resource = this.resourcesService.resources.get(legacyResourceIds[resourceData.resourceId]);\n        resourceData.sellsFor = resource.sellsFor;\n      }\n    }\n\n    if (oldVersionIndex <= this.versionHistory.indexOf('Alpha 3')) {\n      saveData.settings.resourceAnimationColors = {};\n      saveData.settings.resourceAnimationColors[ResourceAnimationType.PlayerSpawned] = saveData.settings.harvestDetailColor;\n      saveData.settings.resourceAnimationColors[ResourceAnimationType.WorkerSpawned] = saveData.settings.workerDetailColor;\n      saveData.settings.resourceAnimationColors[ResourceAnimationType.Sold] = '#ffc089';\n\n      saveData.tiles.map(tileData => {\n        const isMarket = this.mapService.buildingTiles[tileData.buildingTileType].subType === BuildingSubType.Market;\n        tileData.statLevels = isMarket ? {'MAXHEALTH': 1, 'SELLAMOUNT': 1, 'SELLRATE': 1} : {'MAXHEALTH': 1};\n        tileData.statCosts = isMarket ? {'MAXHEALTH': 1500, 'SELLAMOUNT': 1500, 'SELLRATE': 1500} : {'MAXHEALTH': 1500};\n      });\n    }\n\n    if (oldVersionIndex <= this.versionHistory.indexOf('Alpha 3.1')) {\n      for (const resourceData of saveData.resources) {\n        resourceData.resourceEnum = legacyResourceIds[resourceData.id];\n      }\n\n      for (const workerData of saveData.workers) {\n        workerData.resourceType = legacyWorkerIds[workerData.id];\n\n        for (const resourceWorkerData of workerData.workersByResource) {\n          resourceWorkerData.resourceEnum = legacyResourceIds[resourceWorkerData.resourceId];\n        }\n      }\n\n      for (const enemyData of saveData.enemies) {\n        const newResourcesToSteal = enemyData.resourcesToSteal.map(resourceId => legacyResourceIds[resourceId]);\n        const newResourcesHeld = new Map<ResourceEnum, number>();\n\n        if (!enemyData.resourcesHeld || !enemyData.resourcesHeld.length) {\n          continue;\n        }\n\n        for (const resourceId of enemyData.resourcesToSteal) {\n          const amountHeld = enemyData.resourcesHeld[resourceId];\n          newResourcesHeld.set(legacyResourceIds[resourceId], amountHeld === undefined ? 0 : amountHeld);\n        }\n\n        enemyData.resourcesToSteal = newResourcesToSteal;\n        enemyData.resourcesHeld = newResourcesHeld;\n      }\n\n      saveData.settings.resourceBinds = saveData.settings.resourceBinds.map(resourceId => legacyResourceIds[resourceId]);\n\n      const accessedTiers = saveData.resources.filter(resource => resource.amount).map(resource =>\n        this.resourcesService.resources.get(resource.resourceEnum).resourceTier);\n      saveData.settings.highestTierReached = accessedTiers.sort()[accessedTiers.length - 1];\n    }\n\n    return saveData;\n  }\n\n  private log(message: string) {\n    this.messagesService.add(MessageSource.Settings, message);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Resource } from '../../objects/resource';\nimport { ResourceEnum } from './../../objects/resourceData';\nimport { MessageSource } from '../../objects/message';\nimport { ResourcesService } from '../resources/resources.service';\nimport { MessagesService } from '../messages/messages.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreService {\n  constructor(private resourcesService: ResourcesService,\n              private messagesService: MessagesService) { }\n\n  public sellResource(resource: Resource, amount: number) {\n    if (!this.canSellResource(resource, amount)) {\n      return;\n    }\n\n    if (amount === -1) {\n      amount = resource.amount;\n    }\n\n    resource.addAmount(-amount);\n    this.resourcesService.resources.get(ResourceEnum.Gold).addAmount(amount * resource.sellsFor);\n  }\n\n  public canSellResource(resource: Resource, amount: number): boolean {\n    if (amount === -1) {\n      return resource.sellable && resource.amount > 0;\n    }\n\n    return resource.sellable && resource.amount - amount >= 0;\n  }\n\n  private log(message: string) {\n    this.messagesService.add(MessageSource.Store, message);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ClickerMainService } from './../clicker-main/clicker-main.service';\nimport { WorkersService } from './../workers/workers.service';\nimport { EnemyService } from './../enemy/enemy.service';\nimport { FighterService } from './../fighter/fighter.service';\nimport { SettingsService } from './../settings/settings.service';\nimport { MapService } from './../map/map.service';\n\ndeclare var d3: any;\n\nexport interface Tick {\n  tick(elapsed: number, deltaTime: number);\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TickService {\n  tickObjects = [this.clickerMainService, this.workersService, this.enemyService,\n                this.fighterService, this.settingsService, this.mapService];\n  timeElapsed: number;\n\n  constructor(protected clickerMainService: ClickerMainService,\n              protected workersService: WorkersService,\n              protected enemyService: EnemyService,\n              protected fighterService: FighterService,\n              protected settingsService: SettingsService,\n              protected mapService: MapService) {\n    d3.interval(this.tick(this), 25);\n  }\n\n  tick(self: TickService) {\n    return function(elapsed) {\n      for (const tickObject of self.tickObjects) {\n        tickObject.tick(elapsed, elapsed - self.timeElapsed);\n      }\n\n      self.timeElapsed = elapsed;\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ResourcesService } from './../resources/resources.service';\nimport { UpgradesService } from '../upgrades/upgrades.service';\nimport { WorkersService } from './../workers/workers.service';\nimport { MapService } from './../map/map.service';\nimport { Resource } from '../../objects/resource';\nimport { ResourceEnum } from './../../objects/resourceData';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TooltipService {\n  requiredUpgrades = {\n    7: 8,\n    8: 8,\n    9: 9,\n    15: 9,\n    25: 10,\n    16: 11,\n    17: 12,\n    2: 2,\n    3: 2,\n    13: 2,\n    26: 5,\n    5: 5,\n    27: 13,\n    28: 13,\n    11: 13,\n    29: 14,\n    18: 14,\n    30: 14,\n    31: 15,\n    20: 15,\n    21: 15,\n    22: 15\n  };\n\n  requiredBuildings = {\n    4: 'CRACKEDFORGE',\n    6: 'STONEFORGE',\n    10: 'IRONFORGE',\n    12: 'IRONFORGE',\n    19: 'GOLDFORGE',\n    23: 'LATINUMFORGE',\n    24: 'TEMPROUSDISTILLERY'\n  };\n\n  consumersByResource = {\n    1: 16,\n    7: 16,\n    8: 16,\n    9: 16,\n    15: 16,\n    25: 16,\n    16: 17,\n    2: 4,\n    3: 4,\n    5: 6,\n    6: 10,\n    11: 12,\n    10: 19,\n    12: 19,\n    18: 19,\n    19: 23,\n    20: 23,\n    21: 23,\n    22: 23,\n    23: 24,\n    31: 24\n  };\n\n  constructor(protected resourcesService: ResourcesService,\n              protected upgradesService: UpgradesService,\n              protected workersService: WorkersService,\n              protected mapService: MapService) { }\n\n  getResourceTooltip(resource: Resource): string {\n    const worker = this.workersService.getResourceWorker(resource.resourceEnum);\n\n    let tooltip = `${resource.resourceDescription}`;\n\n    if (resource.resourceEnum === ResourceEnum.Gold) {\n      let totalCost = 0;\n\n      for (const _worker of this.workersService.getWorkers()) {\n        for (const rw of _worker.getResourceWorkers()) {\n          if (resource.canHarvest(rw.workerYield) && _worker.canAffordToHarvest(rw.resourceEnum)) {\n            totalCost += rw.recurringCost * rw.workerCount;\n          }\n        }\n      }\n\n      tooltip += `\\n${totalCost} spent on workers per second.`;\n\n      return tooltip;\n    }\n\n    const requiredUpgrade = this.requiredUpgrades[resource.resourceEnum];\n    if (requiredUpgrade) {\n      const upgrade = this.upgradesService.getUpgrade(requiredUpgrade);\n      tooltip += `\\nNeeded Upgrade: ${upgrade.name}.`;\n    }\n\n    const requiredBuilding = this.requiredBuildings[resource.resourceEnum];\n    if (requiredBuilding) {\n      const building = this.mapService.buildingTiles[requiredBuilding];\n      tooltip += `\\nNeeded Building: ${building.name}.`;\n    }\n\n    if (resource.resourceConsumes.length) {\n      tooltip += '\\nResources required:';\n      for (const resourceConsume of resource.resourceConsumes) {\n        tooltip += ` ${this.resourcesService.resources.get(resourceConsume.resourceEnum).name}: ${resourceConsume.cost},`;\n      }\n      tooltip = tooltip.substring(0, tooltip.length - 1);\n      tooltip += '.';\n    }\n\n    let workerOutput = worker.workerYield * worker.workerCount;\n    if (resource.resourceEnum in this.consumersByResource) {\n      const consumingResource = this.resourcesService.resources[this.consumersByResource[resource.resourceEnum]];\n      const consumingWorker = this.workersService.getResourceWorker[this.consumersByResource[resource.resourceEnum]];\n      workerOutput -=\n        consumingResource.resourceConsumes.find(rc => rc.resourceEnum === resource.resourceEnum).cost * consumingWorker.workerCount;\n    }\n\n    tooltip += `\\n${Math.floor(resource.harvestYield * 1000) / 1000} harvested per click ` +\n               `(${Math.floor(resource.harvestMilliseconds) / 1000} seconds per harvest).` +\n               `\\n${Math.floor(1000 * workerOutput) / 1000} per second from workers.`;\n\n     return tooltip;\n  }\n\n  getWorkerTooltip(resourceEnum: ResourceEnum): string {\n    const resource = this.resourcesService.resources.get(resourceEnum);\n    const resourceWorker = this.workersService.getResourceWorker(resourceEnum);\n\n    return `${resource.workerVerb} ${Math.floor(resourceWorker.workerYield * 100) / 100} ` +\n      `${resource.workerNoun}${resourceWorker.workerYield === 1 ? '' : 's'} per second.\\n` +\n      `Cost: ${resourceWorker.recurringCost} per worker per second (${resourceWorker.recurringCost * resourceWorker.workerCount} total).`;\n  }\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Upgrade, UpgradeType, UpgradeVariable } from '../../objects/upgrade';\r\nimport { MessageSource } from '../../objects/message';\r\nimport { ResourcesService } from '../resources/resources.service';\r\nimport { WorkersService } from './../workers/workers.service';\r\nimport { MessagesService } from '../messages/messages.service';\r\n\r\ndeclare var require: any;\r\nconst baseUpgrades = require('../../../assets/json/upgrades.json');\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UpgradesService {\r\n  public upgrades: Upgrade[] = [];\r\n  hidePurchasedUpgrades = true;\r\n\r\n  constructor(private resourcesService: ResourcesService,\r\n              private workersService: WorkersService,\r\n              private messagesService: MessagesService) {\r\n    this.loadBaseUpgrades();\r\n  }\r\n\r\n  public loadBaseUpgrades() {\r\n    for (const baseUpgrade of baseUpgrades) {\r\n      const upgrade = new Upgrade(baseUpgrade.id, baseUpgrade.name, baseUpgrade.description, baseUpgrade.upgradeType,\r\n                                  baseUpgrade.upgradeEffects, baseUpgrade.resourceCosts, false,\r\n                                  this.resourcesService, this.workersService, this.messagesService);\r\n      this.upgrades.push(upgrade);\r\n    }\r\n  }\r\n\r\n  public getUpgrade(id: number): Upgrade {\r\n    return this.upgrades.find(upgrade => upgrade.id === id);\r\n  }\r\n\r\n  public getUpgrades(filterByPurchased = false, filterByUnpurchased = false, filterByAccessible = false,\r\n                     upgradeType?: UpgradeType, upgradeVariable?: UpgradeVariable): Upgrade[] {\r\n    let upgrades = this.upgrades;\r\n\r\n    if (upgradeType) {\r\n      upgrades = upgrades.filter(upgrade => upgrade.upgradeType === upgradeType);\r\n    }\r\n    if (upgradeVariable) {\r\n      upgrades = upgrades.filter(upgrade => upgrade.upgradeEffects.some(ue => ue.upgradeVariable === upgradeVariable));\r\n    }\r\n    if (filterByPurchased) {\r\n      upgrades = upgrades.filter(upgrade => upgrade.purchased);\r\n    }\r\n    if (filterByUnpurchased) {\r\n      upgrades = upgrades.filter(upgrade => !upgrade.purchased);\r\n    }\r\n    if (filterByAccessible) {\r\n      upgrades = upgrades.filter(upgrade => upgrade.resourceCosts.every(\r\n      rc => this.resourcesService.resources.get(rc.resourceEnum).resourceAccessible));\r\n    }\r\n\r\n    return upgrades;\r\n  }\r\n\r\n  public getUpgradeTypeString(id: number): string {\r\n    return UpgradeType[this.getUpgrade(id).upgradeType];\r\n  }\r\n\r\n  public getUpgradeVariableString(upgradeId: number, effectId: number): string {\r\n    return UpgradeVariable[this.getUpgrade(upgradeId).upgradeEffects[effectId].upgradeVariable];\r\n  }\r\n\r\n  private log(message: string) {\r\n    this.messagesService.add(MessageSource.Upgrades, message);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\nimport { ResourceType, ResourceEnum } from './../../objects/resourceData';\nimport { MessageSource } from '../../objects/message';\nimport { ResourcesService } from '../resources/resources.service';\nimport { Worker, ResourceWorker } from '../../objects/worker';\nimport { MapService } from './../map/map.service';\nimport { MessagesService } from '../messages/messages.service';\nimport { Tick } from './../tick/tick.service';\n\ndeclare var require: any;\nconst baseWorkers = require('../../../assets/json/workers.json');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkersService implements Tick {\n  public workers = new Map<string, Worker>();\n  workersPaused = false;\n\n  workerDelay = 1000;\n  lastWorkerTime: number;\n\n  constructor(protected resourcesService: ResourcesService,\n              protected mapService: MapService,\n              protected messagesService: MessagesService) {\n    this.loadBaseWorkers();\n  }\n\n  public loadBaseWorkers() {\n    for (const resourceTypeString in ResourceType) {\n      if (Number(resourceTypeString)) {\n        continue;\n      }\n\n      const resourceType = ResourceType[resourceTypeString];\n\n      const baseWorker = baseWorkers[resourceType];\n      if (!baseWorker) {\n        continue;\n      }\n\n      const resourceWorkers = new Map<string, ResourceWorker>();\n      for (const resoruceEnum in baseWorker.resourceWorkers) {\n        if (Number(resoruceEnum)) {\n          continue;\n        }\n\n        resourceWorkers.set(resoruceEnum, baseWorker.resourceWorkers[resoruceEnum]);\n      }\n\n      const worker = new Worker(baseWorker.cost, baseWorker.resourceType, resourceWorkers,\n                                this.resourcesService, this.mapService, this.messagesService);\n      this.workers.set(resourceType, worker);\n    }\n  }\n\n  tick(elapsed: number, deltaTime: number) {\n    if (this.workersPaused || elapsed - this.lastWorkerTime < this.workerDelay) {\n      return;\n    }\n\n    this.lastWorkerTime = elapsed;\n\n    for (const worker of this.getWorkers()) {\n      worker.tick(elapsed, deltaTime);\n    }\n  }\n\n  public getWorkers(filterByAccessible = false, filterByWorkable = false, filterByHarvestable = false): Worker[] {\n    const workers = Array.from(this.workers.values());\n    return workers.filter(worker => worker.getResourceWorkers(filterByAccessible, filterByWorkable, filterByHarvestable).length);\n  }\n\n  public getWorker(resourceEnum: ResourceEnum): Worker {\n    const resoruce = this.resourcesService.resources.get(resourceEnum);\n    return this.workers.get(resoruce.resourceType);\n  }\n\n  public getResourceWorker(resourceEnum: ResourceEnum): ResourceWorker {\n    const resource = this.resourcesService.resources.get(resourceEnum);\n    const worker = this.workers.get(resource.resourceType);\n\n    if (!resource || !worker) {\n      return undefined;\n    }\n\n    return worker.resourceWorkers.get(resourceEnum);\n  }\n\n  private log(message: string) {\n    this.messagesService.add(MessageSource.Workers, message);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}