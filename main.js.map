{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/admin-debug/admin-debug.component.css","webpack:///./src/app/components/admin-debug/admin-debug.component.html","webpack:///./src/app/components/admin-debug/admin-debug.component.ts","webpack:///./src/app/components/clicker-main/clicker-main.component.css","webpack:///./src/app/components/clicker-main/clicker-main.component.html","webpack:///./src/app/components/clicker-main/clicker-main.component.ts","webpack:///./src/app/components/map/map.component.css","webpack:///./src/app/components/map/map.component.html","webpack:///./src/app/components/map/map.component.ts","webpack:///./src/app/components/messages/messages.component.css","webpack:///./src/app/components/messages/messages.component.html","webpack:///./src/app/components/messages/messages.component.ts","webpack:///./src/app/components/resource-dialog/resource-dialog.component.css","webpack:///./src/app/components/resource-dialog/resource-dialog.component.html","webpack:///./src/app/components/resource-dialog/resource-dialog.component.ts","webpack:///./src/app/components/store/store.component.css","webpack:///./src/app/components/store/store.component.html","webpack:///./src/app/components/store/store.component.ts","webpack:///./src/app/components/upgrade-dialog/upgrade-dialog.component.css","webpack:///./src/app/components/upgrade-dialog/upgrade-dialog.component.html","webpack:///./src/app/components/upgrade-dialog/upgrade-dialog.component.ts","webpack:///./src/app/components/upgrades/upgrades.component.css","webpack:///./src/app/components/upgrades/upgrades.component.html","webpack:///./src/app/components/upgrades/upgrades.component.ts","webpack:///./src/app/components/workers/workers.component.css","webpack:///./src/app/components/workers/workers.component.html","webpack:///./src/app/components/workers/workers.component.ts","webpack:///./src/app/directive/touch/touch.directive.ts","webpack:///./src/app/material-import/material-import.module.ts","webpack:///./src/app/objects/resource.ts","webpack:///./src/app/objects/tile.ts","webpack:///./src/app/objects/upgrade.ts","webpack:///./src/app/pipe/enumtoarraypipe.ts","webpack:///./src/app/pipe/pipe.module.ts","webpack:///./src/app/services/admin/admin.service.ts","webpack:///./src/app/services/clicker-main/clicker-main.service.ts","webpack:///./src/app/services/map/map.service.ts","webpack:///./src/app/services/messages/messages.service.ts","webpack:///./src/app/services/resources/resources.service.ts","webpack:///./src/app/services/store/store.service.ts","webpack:///./src/app/services/upgrades/upgrades.service.ts","webpack:///./src/app/services/workers/workers.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,iEAAiE,uBAAuB,kBAAkB,uBAAuB,KAAK,QAAQ,qBAAqB,oBAAoB,qBAAqB,KAAK,WAAW,wBAAwB,4BAA4B,uBAAuB,4BAA4B,6BAA6B,yBAAyB,KAAK,2BAA2B,qBAAqB,KAAK,iBAAiB,qBAAqB,gCAAgC,KAAK,kBAAkB,qBAAqB,KAAK,iBAAiB,yBAAyB,eAAe,gBAAgB,KAAK,C;;;;;;;;;;;ACAxnB,2lB;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,cAAc,CAAC;QACvB,cAAS,GAAG,KAAK,CAAC;IACpB,CAAC;IAHY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAGxB;IAAD,mBAAC;CAAA;AAHwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACQ;AACzB;AACsC;AAEhC;AACyC;AACX;AACH;AACN;AACS;AACG;AAC1B;AAC+B;AACvB;AACmC;AACH;AAC3B;AA+BnE;IAAA;IAAyB,CAAC;IAAb,SAAS;QA7BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,oGAAoB;gBACpB,yFAAiB;gBACjB,sFAAgB;gBAChB,gFAAc;gBACd,yFAAiB;gBACjB,kGAAmB;gBACnB,2EAAY;gBACZ,8GAAuB;gBACvB,2GAAsB;gBACtB,gFAAc;aACf;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,kEAAmB;gBACnB,4FAAuB;gBACvB,6FAAoB;gBACpB,oEAAU;aACX;YACD,eAAe,EAAE;gBACf,8GAAuB;gBACvB,2GAAsB;aACvB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AChDtB,mB;;;;;;;;;;;ACAA,+nBAA+nB,2BAA2B,4VAA4V,mCAAmC,iHAAiH,mCAAmC,4lB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3nC;AAEgB;AACY;AAGN;AACG;AAO3E;IAME,6BACY,gBAAkC,EAClC,cAA8B,EAC9B,eAAgC,EAChC,YAA0B;QAH1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAc;QAT/B,qBAAgB,GAAG,IAAI,CAAC;IAU5B,CAAC;IAEJ,sCAAQ,GAAR,cAAY,CAAC;IAEb,gDAAkB,GAAlB;QACE,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC;IACzC,CAAC;IAED,+CAAiB,GAAjB;QACE,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC;IACxC,CAAC;IAED,+CAAiB,GAAjB;QACE,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CACrC,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,EACzB,CAAC,IAAI,CAAC,MAAM,CACb,CAAC;IACJ,CAAC;IAED,oDAAsB,GAAtB,UAAuB,QAAkB;QACvC,QAAQ,CAAC,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC;QAE3B,QAAQ,CAAC,MAAM,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC;QAEnC,GAAG,CAAC,CAA0B,UAAyB,EAAzB,aAAQ,CAAC,gBAAgB,EAAzB,cAAyB,EAAzB,IAAyB;YAAlD,IAAM,eAAe;YACxB,eAAe,CAAC,UAAU,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC;YACzD,eAAe,CAAC,IAAI,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC;SAC9C;QAED,QAAQ,CAAC,YAAY,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC;QAC/C,QAAQ,CAAC,mBAAmB,GAAG,CAAC,QAAQ,CAAC,mBAAmB,CAAC;QAE7D,QAAQ,CAAC,WAAW,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC;QAC7C,QAAQ,CAAC,QAAQ,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC;QAEvC,QAAQ,CAAC,YAAY,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC;QAC/C,QAAQ,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,YAAY,GAAG,CAAC,CAAC;QACpF,QAAQ,CAAC,kBAAkB,GAAG,QAAQ,CAAC,YAAY,KAAK,CAAC,CAAC;QAE1D,QAAQ,CAAC,MAAM,CAAC,WAAW,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC;QAC3D,QAAQ,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC;QAE7C,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QACpB,QAAQ,CAAC,kBAAkB,GAAG,QAAQ,CAAC,YAAY,KAAK,CAAC,CAAC;IAC5D,CAAC;IAED,kDAAoB,GAApB,UAAqB,MAAc;QACjC,MAAM,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;QAEvB,MAAM,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;QAE3B,GAAG,CAAC,CAAyB,UAAwB,EAAxB,WAAM,CAAC,iBAAiB,EAAxB,cAAwB,EAAxB,IAAwB;YAAhD,IAAM,cAAc;YACvB,cAAc,CAAC,UAAU,GAAG,CAAC,cAAc,CAAC,UAAU,CAAC;YAEvD,cAAc,CAAC,WAAW,GAAG,CAAC,cAAc,CAAC,WAAW,CAAC;YACzD,cAAc,CAAC,WAAW,GAAG,CAAC,cAAc,CAAC,WAAW,CAAC;SAC1D;QAED,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC;QACvB,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC;IACzB,CAAC;IAED,+CAAiB,GAAjB,UAAkB,QAAkB;QAClC,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;QAEtC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,gDAAkB,GAAlB;QACE,GAAG,CAAC,CAAmB,UAA+B,EAA/B,SAAI,CAAC,gBAAgB,CAAC,SAAS,EAA/B,cAA+B,EAA/B,IAA+B;YAAjD,IAAM,QAAQ;YACjB,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;SACvC;QAED,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,8CAAgB,GAAhB;QACE,GAAG,CAAC,CAAiB,UAA2B,EAA3B,SAAI,CAAC,cAAc,CAAC,OAAO,EAA3B,cAA2B,EAA3B,IAA2B;YAA3C,IAAM,MAAM;YACf,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;SACnC;QAED,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,+CAAiB,GAAjB;QACE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;IACvD,CAAC;IAjGU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAQ8B,sFAAgB;YAClB,gFAAc;YACb,mFAAe;YAClB,0EAAY;OAV3B,mBAAmB,CAkG/B;IAAD,0BAAC;CAAA;AAlG+B;;;;;;;;;;;;ACdhC,iFAAiF,wBAAwB,4BAA4B,iBAAiB,kBAAkB,KAAK,oCAAoC,gBAAgB,KAAK,2CAA2C,8BAA8B,KAAK,kCAAkC,yBAAyB,gBAAgB,kBAAkB,wBAAwB,KAAK,iCAAiC,yBAAyB,sBAAsB,mBAAmB,sBAAsB,oBAAoB,kBAAkB,yBAAyB,KAAK,uCAAuC,iBAAiB,KAAK,8CAA8C,sBAAsB,KAAK,uBAAuB,4BAA4B,uBAAuB,mBAAmB,mCAAmC,gCAAgC,uBAAuB,yBAAyB,kBAAkB,eAAe,oBAAoB,sBAAsB,yBAAyB,yBAAyB,iCAAiC,KAAK,sBAAsB,6BAA6B,mBAAmB,wBAAwB,yBAAyB,sBAAsB,mBAAmB,yBAAyB,KAAK,uBAAuB,oBAAoB,4BAA4B,0BAA0B,uBAAuB,eAAe,6BAA6B,mBAAmB,KAAK,mBAAmB,yBAAyB,iBAAiB,cAAc,KAAK,K;;;;;;;;;;;ACA9iD,0QAA0Q,cAAc,ieAAie,gCAAgC,8DAA8D,4BAA4B,kDAAkD,kCAAkC,4OAA4O,mBAAmB,WAAW,eAAe,2LAA2L,2BAA2B,iG;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAn4C;AAEqC;AACV;AACd;AACI;AAOpE;IAGE,8BAAsB,kBAAsC,EACtC,gBAAkC,EAClC,YAA0B;QAF1B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;QAJhD,kBAAa,GAAG,8DAAY,CAAC;IAIuB,CAAC;IAErD,uCAAQ,GAAR;IACA,CAAC;IAED,8CAAe,GAAf,UAAgB,YAAoB,EAAE,kBAA2B;QAC/D,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,kBAAkB,CAAC,CAAC;IAC5G,CAAC;IAEM,gDAAiB,GAAxB,UAAyB,EAAU;QACjC,IAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC;QAC7E,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;IAChE,CAAC;IAED,8CAAe,GAAf,UAAgB,EAAU;QACxB,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED,6CAAc,GAAd,UAAe,EAAU;QACvB,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;IAC7C,CAAC;IAED,gDAAiB,GAAjB,UAAkB,EAAU;QAC1B,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,uDAAwB,GAAxB,UAAyB,EAAU;QACjC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED,8CAAe,GAAf,UAAgB,EAAU;QACxB,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED,2CAAY,GAAZ,UAAa,EAAU;QACrB,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED,sBAAI,wDAAsB;aAA1B;YACE,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,CAAC;QACxD,CAAC;;;OAAA;IAED,sBAAI,uCAAK;aAAT;YACE,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;QACvC,CAAC;;;OAAA;IAED,sBAAI,sCAAI;aAAR;YACE,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;QACtC,CAAC;;;OAAA;IAED,sBAAI,mDAAiB;aAArB;YACE,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC;QACnD,CAAC;;;OAAA;IAED,sBAAI,kDAAgB;aAApB;YACE,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC;QAClD,CAAC;;;OAAA;IAED,sBAAI,wDAAsB;aAA1B;YACE,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,CAAC;QACxD,CAAC;;;OAAA;IAjEU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAI0C,8FAAkB;YACpB,sFAAgB;YACpB,0EAAY;OALrC,oBAAoB,CAkEhC;IAAD,2BAAC;CAAA;AAlEgC;;;;;;;;;;;;ACZjC,iCAAiC,yBAAyB,iBAAiB,KAAK,kBAAkB,kBAAkB,KAAK,kBAAkB,yBAAyB,iBAAiB,iBAAiB,2BAA2B,8BAA8B,iCAAiC,KAAK,uBAAuB,wBAAwB,KAAK,oBAAoB,yBAAyB,iBAAiB,mBAAmB,gBAAgB,KAAK,0BAA0B,yBAAyB,iBAAiB,gBAAgB,KAAK,K;;;;;;;;;;;ACAxhB,2DAA2D,mFAAmF,uHAAuH,YAAY,qLAAqL,uBAAuB,2DAA2D,8BAA8B,+MAA+M,yEAAyE,IAAI,2BAA2B,gXAAgX,uCAAuC,uVAAuV,6BAA6B,qEAAqE,wBAAwB,sa;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9nD;AAES;AACpC;AACM;AACY;AAO9E;IAeE,sBAAsB,UAAsB,EACtB,gBAAkC,EAClC,YAA0B;QAF1B,eAAU,GAAV,UAAU,CAAY;QACtB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;QAhBhD,iBAAY,GAAG,yDAAW,CAAC;QAC3B,sBAAiB,GAAG,8DAAgB,CAAC;QAErC,2BAAsB,GAAG,KAAK,CAAC;QAI/B,eAAU,GAAG,EAAE,CAAC;QAEhB,aAAQ,GAAG,CAAC,CAAC;QACb,aAAQ,GAAG,CAAC,CAAC;QACb,gBAAW,GAAG,EAAE,CAAC;QACjB,iBAAY,GAAG,EAAE,CAAC;IAIkC,CAAC;IAErD,+BAAQ,GAAR;QACE,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE7B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,8DAAgB,CAAC,IAAI,CAAC,CAAC;IAC/E,CAAC;IAGD,sCAAe,GAAf,UAAgB,KAAoB;QAClC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;YAClB,KAAK,GAAG,CAAC;YACT,KAAK,GAAG,CAAC;YACT,KAAK,SAAS;gBACZ,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC9B,KAAK,CAAC;YACR,KAAK,GAAG,CAAC;YACT,KAAK,GAAG,CAAC;YACT,KAAK,WAAW;gBACd,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC9B,KAAK,CAAC;YACR,KAAK,GAAG,CAAC;YACT,KAAK,GAAG,CAAC;YACT,KAAK,WAAW;gBACd,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC7B,KAAK,CAAC;YACR,KAAK,GAAG,CAAC;YACT,KAAK,GAAG,CAAC;YACT,KAAK,YAAY;gBACf,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC7B,KAAK,CAAC;QACV,CAAC;IACH,CAAC;IAED,iCAAU,GAAV,UAAW,IAAU;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;IACrC,CAAC;IAED,wCAAiB,GAAjB,UAAkB,YAA8B;QAC9C,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC;IACxF,CAAC;IAED,qCAAc,GAAd,UAAe,IAAU,EAAE,YAA8B;QACvD,IAAM,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QAE3E,IAAI,CAAC,sBAAsB,GAAG,CAAC,eAAe,CAAC;IACjD,CAAC;IAED,oCAAa,GAAb,UAAc,IAAU;QACtB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAED,6BAAM,GAAN,UAAO,aAAsB;QAC3B,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IAClH,CAAC;IAED,uCAAgB,GAAhB,UAAiB,IAAU;QACzB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC;IAED,4CAAqB,GAArB,UAAsB,IAAU;QAC9B,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;IACrD,CAAC;IAED,wCAAiB,GAAjB;QACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC;IAC7C,CAAC;IAED,wCAAiB,GAAjB,UAAkB,OAAe,EAAE,OAAe;QAChD,IAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAE3E,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YACpB,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;QAC3E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;QAE5E,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QACpB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9D,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QACpB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YACzE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;QAChE,CAAC;QAED,IAAM,YAAY,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAE9C,IAAM,mBAAmB,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;QAC/F,IAAM,mBAAmB,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;QAEhG,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAC3C,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAE3C,EAAE,CAAC,CAAC,UAAU,IAAI,CAAC,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,cAAc,EAAE,IAAI,mBAAmB,IAAI,CAAC,CAAC,CAAC,CAAC;YAC1G,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC7B,CAAC;QACD,EAAE,CAAC,CAAC,UAAU,IAAI,CAAC,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,WAAW,EAAE,IAAI,mBAAmB,IAAI,CAAC,CAAC,CAAC,CAAC;YACxG,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC7B,CAAC;IACH,CAAC;IAED,sBAAI,yCAAe;aAAnB;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,KAAK,SAAS,CAAC,CAAC,CAAC;gBACpC,MAAM,CAAC,SAAS,CAAC;YACnB,CAAC;YAED,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QACjE,CAAC;;;OAAA;IAED,sBAAI,8CAAoB;aAAxB;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,KAAK,SAAS,IAAI,IAAI,CAAC,YAAY,CAAC,gBAAgB,KAAK,SAAS,CAAC,CAAC,CAAC;gBACxF,MAAM,CAAC,SAAS,CAAC;YACnB,CAAC;YAED,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;QAC3E,CAAC;;;OAAA;IAED,kCAAW,GAAX;QACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;IACvC,CAAC;IAED,qCAAc,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;IAC1C,CAAC;IAvHD;QADC,kEAAY,CAAC,mBAAmB,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCACvB,aAAa;;uDAuBnC;IAjDU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;;;SAGpB,CAAC;yCAgBkC,oEAAU;YACJ,sFAAgB;YACpB,0EAAY;OAjBrC,YAAY,CAkJxB;IAAD,mBAAC;CAAA;AAlJwB;;;;;;;;;;;;ACZzB,sEAAsE,iBAAiB,gDAAgD,2BAA2B,KAAK,UAAU,kBAAkB,KAAK,+BAA+B,qBAAqB,oCAAoC,KAAK,kBAAkB,yBAAyB,6BAA6B,mBAAmB,wBAAwB,yBAAyB,sBAAsB,mBAAmB,KAAK,kBAAkB,gCAAgC,KAAK,qBAAqB,6BAA6B,kBAAkB,mBAAmB,KAAK,kBAAkB,kBAAkB,0BAA0B,KAAK,C;;;;;;;;;;;ACArrB,mPAAmP,SAAS,2B;;;;;;;;;;;;;;;;;;;;;;;;;ACA1M;AACyB;AAO3E;IAEE,2BAAmB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAAI,CAAC;IAExD,oCAAQ,GAAR,cAAa,CAAC;IAJH,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAGoC,mFAAe;OAFxC,iBAAiB,CAM7B;IAAD,wBAAC;CAAA;AAN6B;;;;;;;;;;;;ACR9B,+BAA+B,kBAAkB,KAAK,uBAAuB,yBAAyB,eAAe,iBAAiB,KAAK,K;;;;;;;;;;;ACA3I,saAAsa,aAAa,iBAAiB,2BAA2B,imBAAimB,6BAA6B,iBAAiB,cAAc,ujCAAujC,cAAc,qBAAqB,6BAA6B,8xFAA8xF,eAAe,uT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAt+J;AACU;AACF;AAEe;AACH;AAEN;AAOxE;IA8BE,iCACY,gBAAkC,EAClC,cAA8B,EAC9B,YAAyB,EAC5B,SAAgD,EACvB,IAAS;QAJ/B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAa;QAC5B,cAAS,GAAT,SAAS,CAAuC;QACvB,SAAI,GAAJ,IAAI,CAAK;QAlC3C,aAAQ,GAAa;YACnB,EAAE,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM;YAC1C,IAAI,EAAE,EAAE;YACR,YAAY,EAAE,8DAAY,CAAC,QAAQ;YACnC,MAAM,EAAE,CAAC;YACT,QAAQ,EAAE,EAAE;YACZ,gBAAgB,EAAE,EAAE;YACpB,WAAW,EAAE,IAAI;YACjB,YAAY,EAAE,CAAC;YACf,mBAAmB,EAAE,IAAI;YACzB,WAAW,EAAE,CAAC;YACd,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,CAAC;YACX,mBAAmB,EAAE,EAAE;YACvB,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;YACd,kBAAkB,EAAE,IAAI;YACxB,YAAY,EAAE,CAAC;YACf,YAAY,EAAE,CAAC;YACf,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;SACrD,CAAC;QACF,mBAAc,GAAmB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAE1E,aAAQ,GAAG,KAAK,CAAC;QAEjB,kBAAa,GAAG,CAAC,CAAC;QAElB,kBAAa,GAAG,8DAAY,CAAC;IAOiB,CAAC;IAG/C,0CAAQ,GAAR;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACxE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAE9E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC;IACH,CAAC;IAED,kDAAgB,GAAhB;QACE,IAAM,UAAU,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;QACvC,IAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAElE,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;QACtC,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC;QACtD,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;QACpD,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC;QACtD,IAAI,CAAC,QAAQ,CAAC,mBAAmB,GAAG,WAAW,CAAC,mBAAmB,CAAC;QACpE,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;QACpD,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,mBAAmB,GAAG,WAAW,CAAC,mBAAmB,CAAC;QACpE,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,WAAW,CAAC,UAAU,CAAC;QAClD,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,WAAW,CAAC,UAAU,CAAC;QAClD,IAAI,CAAC,QAAQ,CAAC,kBAAkB,GAAG,WAAW,CAAC,kBAAkB,CAAC;QAClE,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC;QACtD,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC;QAEtD,GAAG,CAAC,CAA0B,UAA4B,EAA5B,gBAAW,CAAC,gBAAgB,EAA5B,cAA4B,EAA5B,IAA4B;YAArD,IAAM,eAAe;YACxB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC;gBAClC,UAAU,EAAE,eAAe,CAAC,UAAU;gBACtC,IAAI,EAAE,eAAe,CAAC,IAAI;aAC3B,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG;YACrB,QAAQ,EAAE,WAAW,CAAC,MAAM,CAAC,QAAQ;YACrC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,WAAW;YAC3C,IAAI,EAAE,WAAW,CAAC,MAAM,CAAC,IAAI;SAC9B,CAAC;QAEF,IAAI,CAAC,cAAc,GAAG;YACpB,UAAU,EAAE,UAAU;YACtB,QAAQ,EAAE,IAAI;YACd,WAAW,EAAE,CAAC;YACd,WAAW,EAAE,CAAC;YACd,kBAAkB,EAAE,IAAI;SACzB,CAAC;IACJ,CAAC;IAED,2CAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,oDAAkB,GAAlB;QACE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,EAAC,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAC,CAAC;IACnG,CAAC;IAED,uDAAqB,GAArB,UAAsB,eAAgC;QACpD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAC,YAAE,IAAI,SAAE,KAAK,eAAe,EAAtB,CAAsB,CAAC,CAAC;IACvG,CAAC;IAED,sDAAoB,GAApB;QAAA,iBAeC;QAdC,IAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QAEzE,EAAE,CAAC,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,yBAAuB,IAAI,CAAC,QAAQ,CAAC,YAAc,CAAC,CAAC;YACjE,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;QAElD,IAAM,eAAe,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAEjD,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,CAAC,YAAE,IAAI,SAAE,KAAK,KAAI,CAAC,cAAc,EAA1B,CAA0B,CAAC,CAAC,CAAC,CAAC;YAC5D,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC5C,CAAC;IACH,CAAC;IAED,8CAAY,GAAZ;QACE,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAE5B,IAAI,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAE3E,EAAE,CAAC,CAAC,gBAAgB,KAAK,SAAS,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC;QACnC,CAAC;IACH,CAAC;IAED,2CAAS,GAAT,UAAU,KAAa,EAAE,KAAa;QACpC,MAAM,CAAC,CAAC,KAAK,KAAK,CAAC,KAAK,CAAC;IAC3B,CAAC;IArIU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;QAoCG,uEAAM,CAAC,iEAAe,CAAC;yCAJI,sFAAgB;YAClB,gFAAc;YAChB,0DAAW;YACjB,8DAAY;OAlCrB,uBAAuB,CAsInC;IAAD,8BAAC;CAAA;AAtImC;;;;;;;;;;;;ACdpC,uEAAuE,wBAAwB,4BAA4B,iBAAiB,kBAAkB,KAAK,gCAAgC,gBAAgB,KAAK,uCAAuC,8BAA8B,KAAK,8BAA8B,yBAAyB,gBAAgB,kBAAkB,KAAK,qBAAqB,yBAAyB,sBAAsB,6BAA6B,mBAAmB,sBAAsB,oBAAoB,yBAAyB,KAAK,2BAA2B,qBAAqB,6BAA6B,iBAAiB,KAAK,cAAc,kBAAkB,4BAA4B,yBAAyB,qBAAqB,mBAAmB,KAAK,oBAAoB,oBAAoB,KAAK,yBAAyB,qCAAqC,KAAK,+BAA+B,uCAAuC,KAAK,mBAAmB,4BAA4B,uBAAuB,mBAAmB,mCAAmC,gCAAgC,uBAAuB,yBAAyB,kBAAkB,eAAe,oBAAoB,sBAAsB,yBAAyB,yBAAyB,iCAAiC,KAAK,YAAY,yBAAyB,iBAAiB,eAAe,KAAK,YAAY,uBAAuB,mBAAmB,yBAAyB,KAAK,kBAAkB,gCAAgC,KAAK,mBAAmB,yBAAyB,kBAAkB,iBAAiB,wCAAwC,mBAAmB,KAAK,C;;;;;;;;;;;ACA/qD,qQAAqQ,cAAc,oSAAoS,mBAAmB,oDAAoD,4BAA4B,kvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxmB;AAEc;AACc;AACZ;AACA;AAOlE;IAGE,wBAAoB,gBAAkC,EAClC,YAA0B,EAC1B,YAA0B;QAF1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAc;QAJ9C,kBAAa,GAAG,8DAAY,CAAC;IAIqB,CAAC;IAEnD,iCAAQ,GAAR;IACA,CAAC;IAED,wCAAe,GAAf,UAAgB,EAAU,EAAE,MAAc;QACxC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;IACvD,CAAC;IAED,wCAAe,GAAf,UAAgB,YAAoB,EAAE,gBAAyB,EAAE,kBAAkB;QACjF,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;IACnH,CAAC;IAED,qCAAY,GAAZ,UAAa,EAAU,EAAE,MAAc;QACrC,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEvD,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;IAC7C,CAAC;IAtBU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAIsC,sFAAgB;YACpB,0EAAY;YACZ,0EAAY;OALnC,cAAc,CAuB1B;IAAD,qBAAC;CAAA;AAvB0B;;;;;;;;;;;;ACZ3B,+BAA+B,kBAAkB,KAAK,uBAAuB,yBAAyB,eAAe,iBAAiB,KAAK,K;;;;;;;;;;;ACA3I,+ZAA+Z,YAAY,iBAAiB,0BAA0B,4cAA4c,2BAA2B,iBAAiB,aAAa,41CAA41C,6BAA6B,uBAAuB,cAAc,6aAA6a,aAAa,uBAAuB,2BAA2B,kWAAkW,mCAAmC,qBAAqB,iBAAiB,mTAAmT,2CAA2C,8tCAA8tC,aAAa,qBAAqB,2BAA2B,ggBAAggB,cAAc,qT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA71K;AAEb;AACqB;AACX;AACuB;AAC6B;AAChC;AAQ3E;IAmBE,gCAAsB,gBAAkC,EAClC,eAAgC,EAChC,YAAyB,EAC5B,SAAgD,EACvB,IAAS;QAJ/B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAa;QAC5B,cAAS,GAAT,SAAS,CAAuC;QACvB,SAAI,GAAJ,IAAI,CAAK;QAtBrD,YAAO,GAAY;YACjB,EAAE,EAAE,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM;YACxC,WAAW,EAAE,4DAAW,CAAC,QAAQ;YACjC,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,EAAE;YACf,cAAc,EAAE,EAAE;YAClB,aAAa,EAAE,EAAE;YACjB,SAAS,EAAE,KAAK;SACjB,CAAC;QAEF,aAAQ,GAAG,KAAK,CAAC;QAEjB,kBAAa,GAAG,8DAAY,CAAC;QAC7B,iBAAY,GAAG,4DAAW,CAAC;QAC3B,qBAAgB,GAAG,gEAAe,CAAC;IAQsB,CAAC;IAE1D,yCAAQ,GAAR;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACpE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC;IACH,CAAC;IAED,gDAAe,GAAf;QACE,IAAM,SAAS,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QACrC,IAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAE9D,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;QAClD,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;QAClD,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC;QAE/B,GAAG,CAAC,CAAwB,UAAyB,EAAzB,eAAU,CAAC,cAAc,EAAzB,cAAyB,EAAzB,IAAyB;YAAhD,IAAM,aAAa;YACtB,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC;gBAC/B,qBAAqB,EAAE,aAAa,CAAC,qBAAqB;gBAC1D,YAAY,EAAE,aAAa,CAAC,YAAY;gBACxC,UAAU,EAAE,aAAa,CAAC,UAAU;gBACpC,eAAe,EAAE,aAAa,CAAC,eAAe;gBAC9C,aAAa,EAAE,aAAa,CAAC,aAAa;aAC3C,CAAC,CAAC;SACJ;QAED,GAAG,CAAC,CAAuB,UAAwB,EAAxB,eAAU,CAAC,aAAa,EAAxB,cAAwB,EAAxB,IAAwB;YAA9C,IAAM,YAAY;YACrB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC;gBAC9B,UAAU,EAAE,YAAY,CAAC,UAAU;gBACnC,YAAY,EAAE,YAAY,CAAC,YAAY;aACxC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,0CAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,iDAAgB,GAAhB;QACE,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG;YAChE,qBAAqB,EAAE,KAAK;YAC5B,UAAU,EAAE,CAAC;YACb,eAAe,EAAE,gEAAe,CAAC,cAAc;YAC/C,aAAa,EAAE,CAAC;SACjB,CAAC;IACJ,CAAC;IAED,oDAAmB,GAAnB,UAAoB,aAA4B;QAC9C,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,YAAE,IAAI,SAAE,KAAK,aAAa,EAApB,CAAoB,CAAC,CAAC;IAC/F,CAAC;IAED,gDAAe,GAAf;QACE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG;YAC9D,UAAU,EAAE,CAAC;YACb,YAAY,EAAE,CAAC;SAChB,CAAC;IACJ,CAAC;IAED,mDAAkB,GAAlB,UAAmB,YAA0B;QAC3C,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,YAAE,IAAI,SAAE,KAAK,YAAY,EAAnB,CAAmB,CAAC,CAAC;IAC5F,CAAC;IAED,4CAAW,GAAX;QACE,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;QAEnC,GAAG,CAAC,CAAwB,UAA2B,EAA3B,SAAI,CAAC,OAAO,CAAC,cAAc,EAA3B,cAA2B,EAA3B,IAA2B;YAAlD,IAAM,aAAa;YACtB,EAAE,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC7B,aAAa,CAAC,UAAU,GAAG,CAAC,aAAa,CAAC,UAAU,CAAC;YACvD,CAAC;YAED,aAAa,CAAC,aAAa,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC;SAC5D;QAED,GAAG,CAAC,CAAuB,UAA0B,EAA1B,SAAI,CAAC,OAAO,CAAC,aAAa,EAA1B,cAA0B,EAA1B,IAA0B;YAAhD,IAAM,YAAY;YACrB,YAAY,CAAC,UAAU,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC;YACnD,YAAY,CAAC,YAAY,GAAG,CAAC,YAAY,CAAC,YAAY,CAAC;SACxD;QAED,IAAI,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAEvE,EAAE,CAAC,CAAC,eAAe,KAAK,SAAS,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC;QACjC,CAAC;IACH,CAAC;IAED,0CAAS,GAAT,UAAU,KAAa,EAAE,KAAa;QACpC,MAAM,CAAC,CAAC,KAAK,KAAK,CAAC,KAAK,CAAC;IAC3B,CAAC;IAlHU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;QAwBa,uEAAM,CAAC,iEAAe,CAAC;yCAJI,sFAAgB;YACjB,mFAAe;YAClB,0DAAW;YACjB,8DAAY;OAtB/B,sBAAsB,CAmHlC;IAAD,6BAAC;CAAA;AAnHkC;;;;;;;;;;;;ACfnC,6EAA6E,wBAAwB,4BAA4B,iBAAiB,kBAAkB,KAAK,mCAAmC,gBAAgB,KAAK,0CAA0C,8BAA8B,KAAK,iCAAiC,yBAAyB,gBAAgB,kBAAkB,wBAAwB,KAAK,sBAAsB,yBAAyB,sBAAsB,mBAAmB,sBAAsB,oBAAoB,kBAAkB,yBAAyB,KAAK,4BAA4B,iBAAiB,KAAK,mCAAmC,sBAAsB,KAAK,sBAAsB,4BAA4B,uBAAuB,mBAAmB,mCAAmC,gCAAgC,uBAAuB,yBAAyB,kBAAkB,eAAe,oBAAoB,sBAAsB,yBAAyB,yBAAyB,iCAAiC,KAAK,YAAY,6BAA6B,mBAAmB,wBAAwB,yBAAyB,sBAAsB,mBAAmB,yBAAyB,KAAK,uBAAuB,oBAAoB,4BAA4B,0BAA0B,yBAAyB,eAAe,+BAA+B,mBAAmB,KAAK,C;;;;;;;;;;;ACA/6C,8YAA8Y,aAAa,6dAA6d,cAAc,mEAAmE,kDAAkD,8DAA8D,qBAAqB,kIAAkI,yEAAyE,IAAI,2BAA2B,6JAA6J,0BAA0B,kG;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA77C;AAG4B;AACH;AACA;AACT;AAOlE;IAIE,2BAAoB,gBAAkC,EAClC,eAAgC,EAChC,YAA0B;QAF1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAc;QAL9C,iBAAY,GAAG,4DAAW,CAAC;QAC3B,kBAAa,GAAG,KAAK,CAAC;IAI4B,CAAC;IAEnD,oCAAQ,GAAR;IACA,CAAC;IAED,4CAAgB,GAAhB,UAAiB,EAAU;QACzB,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;IACnD,CAAC;IAED,0CAAc,GAAd,UAAe,WAAmB,EAAE,iBAA0B,EAAE,mBAA4B,EAAE,kBAA2B;QACvH,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,kBAAkB,CAAC,CAAC;IACzI,CAAC;IAED,2CAAe,GAAf,UAAgB,EAAU;QACxB,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED,8CAAkB,GAAlB,UAAmB,EAAU;QAC3B,IAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAEpD,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC,YAAY,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtD,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC;QAED,MAAM,CAAC,WAAW,CAAC;IACrB,CAAC;IAED,uCAAW,GAAX,UAAY,EAAU;QACpB,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;IAC1C,CAAC;IArCU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAKsC,sFAAgB;YACjB,mFAAe;YAClB,0EAAY;OANnC,iBAAiB,CAsC7B;IAAD,wBAAC;CAAA;AAtC6B;;;;;;;;;;;;ACb9B,2EAA2E,wBAAwB,4BAA4B,iBAAiB,kBAAkB,KAAK,kCAAkC,gBAAgB,KAAK,yCAAyC,8BAA8B,KAAK,6BAA6B,uBAAuB,KAAK,gCAAgC,yBAAyB,gBAAgB,kBAAkB,KAAK,yBAAyB,kBAAkB,iBAAiB,KAAK,uBAAuB,yBAAyB,sBAAsB,mBAAmB,sBAAsB,oBAAoB,kBAAkB,yBAAyB,KAAK,qBAAqB,yBAAyB,sBAAsB,mBAAmB,sBAAsB,oBAAoB,kBAAkB,yBAAyB,KAAK,2BAA2B,qBAAqB,6BAA6B,iBAAiB,KAAK,gBAAgB,kBAAkB,4BAA4B,yBAAyB,qBAAqB,mBAAmB,KAAK,sBAAsB,oBAAoB,KAAK,2BAA2B,qCAAqC,KAAK,iCAAiC,uCAAuC,KAAK,qBAAqB,4BAA4B,uBAAuB,mBAAmB,mCAAmC,gCAAgC,uBAAuB,yBAAyB,kBAAkB,eAAe,oBAAoB,sBAAsB,yBAAyB,yBAAyB,iCAAiC,KAAK,YAAY,6BAA6B,mBAAmB,wBAAwB,yBAAyB,sBAAsB,mBAAmB,yBAAyB,KAAK,kBAAkB,gCAAgC,KAAK,mBAAmB,yBAAyB,kBAAkB,iBAAiB,wCAAwC,mBAAmB,KAAK,K;;;;;;;;;;;ACA3/D,0OAA0O,iCAAiC,+RAA+R,oBAAoB,YAAY,oBAAoB,sDAAsD,aAAa,0NAA0N,8CAA8C,yEAAyE,0EAA0E,kDAAkD,4BAA4B,ob;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxlC;AAEc;AACc;AAEN;AACN;AAOlE;IAGE,0BAAsB,gBAAkC,EAClC,cAA8B,EAC9B,YAA0B;QAF1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QAJhD,kBAAa,GAAG,8DAAY,CAAC;IAIuB,CAAC;IAErD,mCAAQ,GAAR;IACA,CAAC;IAED,qCAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;IAC1C,CAAC;IAEM,oCAAS,GAAhB,UAAiB,gBAAuC;QACtD,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;IACzD,CAAC;IAED,oCAAS,GAAT,UAAU,EAAU;QAClB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED,4CAAiB,GAAjB,UAAkB,EAAU;QAC1B,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,yBAAyB,CAAC,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,qCAAU,GAAV,UAAW,EAAU;QACnB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IACrC,CAAC;IAED,2CAAgB,GAAhB,UAAiB,KAAU;QACzB,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QAC/F,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QACrD,IAAM,cAAc,GAAG,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAE,IAAI,SAAE,CAAC,UAAU,KAAK,QAAQ,CAAC,EAAE,EAA7B,CAA6B,CAAC,CAAC;QAE1F,IAAM,QAAQ,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;QAE9B,cAAc,CAAC,kBAAkB,GAAG,MAAM,CAAC,WAAW,GAAG,cAAc,CAAC,WAAW,GAAG,QAAQ,IAAI,CAAC,CAAC;IACtG,CAAC;IAED,gDAAqB,GAArB,UAAsB,KAAU;QAC9B,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QAC/F,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QACrD,IAAM,cAAc,GAAG,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAE,IAAI,SAAE,CAAC,UAAU,KAAK,QAAQ,CAAC,EAAE,EAA7B,CAA6B,CAAC,CAAC;QAE1F,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC;QACT,CAAC;QAED,IAAM,QAAQ,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;QAC9B,IAAM,cAAc,GAAG,MAAM,CAAC,WAAW,GAAG,cAAc,CAAC,WAAW,GAAG,QAAQ,CAAC;QAElF,MAAM,CAAC,WAAW,GAAG,cAAc,CAAC;QACpC,cAAc,CAAC,WAAW,GAAG,QAAQ,CAAC;IACxC,CAAC;IAtDU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAIwC,sFAAgB;YAClB,gFAAc;YAChB,0EAAY;OALrC,gBAAgB,CAuD5B;IAAD,uBAAC;CAAA;AAvD4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACboC;AAE9B;AAEqD;AAKxF;IACE,wBAAsB,OAAmB,EACnB,QAAmB,EACnB,kBAAsC;QAFtC,YAAO,GAAP,OAAO,CAAY;QACnB,aAAQ,GAAR,QAAQ,CAAW;QACnB,uBAAkB,GAAlB,kBAAkB,CAAoB;QAC1D,qCAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAS,KAAK;YACtD,IAAM,EAAE,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;YACzD,kBAAkB,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,qCAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,UAAS,KAAK;YACxD,IAAM,EAAE,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;YACzD,kBAAkB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAbU,cAAc;QAH1B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;SACvB,CAAC;yCAE+B,wDAAU;YACT,uDAAS;YACC,8FAAkB;OAHjD,cAAc,CAc1B;IAAD,qBAAC;CAAA;AAd0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTc;AAE8B;AACD;AACb;AACF;AACM;AACN;AACS;AACT;AACU;AACJ;AACJ;AACE;AACJ;AACI;AACA;AACE;AAE7D,IAAM,OAAO,GAAG;IACd,iEAAe;IACf,mEAAiB;IACjB,mFAAoB;IACpB,sEAAc;IACd,oEAAa;IACb,0EAAgB;IAChB,oEAAa;IACb,6EAAiB;IACjB,oEAAa;IACb,8EAAkB;IAClB,2EAAgB;IAChB,uEAAc;IACd,yEAAe;IACf,qEAAa;IACb,yEAAe;IACf,yEAAe;IACf,2EAAgB;CACjB,CAAC;AAMF;IAAA;IAAoC,CAAC;IAAxB,oBAAoB;QAJhC,8DAAQ,CAAC;YACR,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;SACjB,CAAC;OACW,oBAAoB,CAAI;IAAD,2BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;AC3CjC,IAAY,YAKX;AALD,WAAY,YAAY;IACtB,qCAAqB;IACrB,6BAAa;IACb,+BAAe;IACf,+CAA+B;AACjC,CAAC,EALW,YAAY,KAAZ,YAAY,QAKvB;AAaD;IAAA;IA4BA,CAAC;IAAD,eAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;AC9CD,IAAY,WAIX;AAJD,WAAY,WAAW;IACrB,8BAAe;IACf,8BAAe;IACf,oCAAqB;AACvB,CAAC,EAJW,WAAW,KAAX,WAAW,QAItB;AAED,IAAY,gBAEX;AAFD,WAAY,gBAAgB;IAC1B,iCAAa;AACf,CAAC,EAFW,gBAAgB,KAAhB,gBAAgB,QAE3B;AA6BD;IAAA;IAGA,CAAC;IAAD,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;ACtCD,IAAY,WAGX;AAHD,WAAY,WAAW;IACrB,oCAAqB;IACrB,gCAAiB;AACnB,CAAC,EAHW,WAAW,KAAX,WAAW,QAGtB;AAED,IAAY,eAOX;AAPD,WAAY,eAAe;IACzB,oDAAiC;IACjC,iDAA8B;IAC9B,+DAA4C;IAC5C,wCAAqB;IACrB,+CAA4B;IAC5B,6CAA0B;AAC5B,CAAC,EAPW,eAAe,KAAf,eAAe,QAO1B;AAiBD;IAAA;IAWA,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;AC1CoC;AAMrC;IAAA;IAIA,CAAC;IAHG,8BAAS,GAAT,UAAU,IAAY;QAClB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAHQ,UAAU;QAHtB,0DAAI,CAAC;YACF,IAAI,EAAE,aAAa;SACtB,CAAC;OACW,UAAU,CAItB;IAAD,iBAAC;CAAA;AAJsB;;;;;;;;;;;;;;;;;;;;;;;;ACNkB;AACM;AACA;AAa/C;IAAA;IAA0B,CAAC;IAAd,UAAU;QAXtB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;aACb;YACD,YAAY,EAAE;gBACZ,2DAAU;aACX;YACD,OAAO,EAAE;gBACP,2DAAU;aACX;SACF,CAAC;OACW,UAAU,CAAI;IAAD,iBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfoB;AACG;AAEuD;AACH;AAKlG;IAKE,sBAAmB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;QAJ7B,qBAAgB,GAAG,IAAI,CAAC;QACxB,aAAQ,GAAG,IAAI,CAAC;IAGiB,CAAC;IAEzC,yCAAkB,GAAlB,UAAmB,UAAmB;QACpC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6GAAuB,EAAE;YAC1D,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,OAAO;YACf,IAAI,EAAE,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC,UAAU,EAAE,UAAU,EAAC;SAC/D,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAiB,GAAjB,UAAkB,SAAkB;QAClC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0GAAsB,EAAE;YACzD,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,OAAO;YACf,IAAI,EAAE,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC,SAAS,EAAE,SAAS,EAAC;SAC5D,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IA3BU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAM2B,2DAAS;OALzB,YAAY,CA4BxB;IAAD,mBAAC;CAAA;AA5BwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTkB;AAEd;AAEqC;AACN;AACN;AACU;AAKhE;IAiBE,4BAAsB,gBAAkC,EAClC,cAA8B,EAC9B,YAA0B;QAFhD,iBAKC;QALqB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QAbhD,2BAAsB,GAAG,CAAC,CAAC,CAAC;QAE5B,UAAK,GAAG,CAAC,CAAC;QACV,SAAI,GAAG,aAAa,CAAC;QAErB,sBAAiB,GAAG,IAAI,CAAC;QAEzB,2BAAsB,GAAG,GAAG,CAAC;QAE7B,kBAAa,GAAG,8DAAY,CAAC;QAK3B,IAAM,aAAa,GAAG,kDAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACxC,IAAM,gBAAgB,GAAG,aAAa,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,cAAc,CAAC,cAAc,EAAE,EAApC,CAAoC,CAAC,CAAC;IAC9F,CAAC;IAED,4CAAe,GAAf,UAAgB,EAAU;QAA1B,iBA0BC;QAzBC,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACvD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAEnC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC;QACT,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,KAAK,SAAS,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;QACtC,CAAC;QAED,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,mBAAmB,CAAC;QACtD,IAAI,CAAC,YAAY,GAAG,kDAAK,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC1E,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,eAAe,CAAC,EAAE,CAAC,EAAxB,CAAwB,CAAC,CAAC;QAEnF,EAAE,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;YAC1B,IAAI,CAAC,gBAAgB,GAAG,kDAAK,CAAC,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;YAC9D,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,EAA1B,CAA0B,CAAC,CAAC;QAC/F,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;YAC5B,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACnB,CAAC;QAED,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;IACnC,CAAC;IAED,2CAAc,GAAd,UAAe,EAAU;QACvB,EAAE,CAAC,CAAC,IAAI,CAAC,sBAAsB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC;QACT,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;QAC1C,CAAC;QAED,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;QAEpC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,sBAAsB,GAAG,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,8CAAiB,GAAjB,UAAkB,EAAU;QAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,CAAC;IAC/F,CAAC;IAED,qDAAwB,GAAxB,UAAyB,EAAU;QACjC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC;IACjG,CAAC;IAED,4CAAe,GAAf,UAAgB,EAAU;QACxB,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;QAE1C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAEnC,EAAE,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACjB,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QAC1B,CAAC;IACH,CAAC;IAvFU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAkBwC,6EAAgB;YAClB,uEAAc;YAChB,iEAAY;OAnBrC,kBAAkB,CAwF9B;IAAD,yBAAC;CAAA;AAxF8B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZY;AAEuB;AAC8B;AAGhG,IAAM,IAAI,GAAG,mBAAO,CAAC,qDAAM,CAAC,CAAC;AAC7B,IAAM,SAAS,GAAG,mBAAO,CAAC,6EAAqC,CAAC,CAAC;AAKjE;IAeE,oBAAsB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAdjD,aAAQ,GAAc,SAAS,CAAC,QAAQ,CAAC;QACzC,kBAAa,GAAmB,SAAS,CAAC,aAAa,CAAC;QAKxD,aAAQ,GAAW,EAAE,CAAC;QAE7B,qBAAgB,GAAG,CAAC,yDAAW,CAAC,KAAK,CAAC,CAAC;QAEvC,YAAO,GAAG,GAAG,CAAC;QACd,YAAO,GAAG,GAAG,CAAC;QAIZ,IAAM,SAAS,GAAW,EAAE,CAAC;QAC7B,IAAM,SAAS,GAAG,CAAC,yDAAW,CAAC,KAAK,EAAE,yDAAW,CAAC,KAAK,EAAE,yDAAW,CAAC,QAAQ,CAAC,CAAC;QAC/E,IAAI,SAAiB,EAAE,UAAkB,CAAC;QAE1C,IAAM,UAAU,GAAG,IAAI,cAAc,EAAE,CAAC;QACxC,UAAU,CAAC,MAAM,GAAG;YAClB,IAAM,MAAM,GAAG,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,UAAU,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;YACpF,IAAM,SAAS,GAAG,MAAM,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YACrE,IAAM,SAAS,GAAG,MAAM,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YAE1D,SAAS,GAAG,CAAC,SAAS,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;YAC9D,UAAU,GAAG,CAAC,SAAS,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YAEhE,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,mBAAS,IAAI,gBAAS,CAAC,IAAI,CAAC,EAAC,WAAW,EAAE,SAAS,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAC,CAAC,EAAxD,CAAwD,CAAC,CAAC;QAClG,CAAC,CAAC;QAEF,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,iCAAiC,EAAE,KAAK,CAAC,CAAC;QACjE,UAAU,CAAC,IAAI,EAAE,CAAC;QAElB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;IAC9B,CAAC;IAED,mCAAc,GAAd,UAAe,IAAU,EAAE,YAA8B;QACvD,IAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QAEtD,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,KAAK,SAAS;YACnC,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAE,IAAI,SAAE,KAAK,IAAI,CAAC,WAAW,EAAvB,CAAuB,CAAC;YACnE,CAAC,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,GAAG,CAAC,CAAuB,UAA0B,EAA1B,iBAAY,CAAC,aAAa,EAA1B,cAA0B,EAA1B,IAA0B;YAAhD,IAAM,YAAY;YACrB,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;SAC9F;QAED,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEM,sCAAiB,GAAxB,UAAyB,YAA0B;QACjD,GAAG,CAAC,CAAuB,UAA0B,EAA1B,iBAAY,CAAC,aAAa,EAA1B,cAA0B,EAA1B,IAA0B;YAAhD,IAAM,YAAY;YACrB,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC;gBAClG,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;SACF;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,kCAAa,GAAb,UAAc,IAAU;QACtB,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;IACpC,CAAC;IAED,gCAAW,GAAX;QACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,mCAAc,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,4BAAO,GAAP,UAAQ,CAAS,EAAE,CAAS;QAC1B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC9C,CAAC;IAED,2BAAM,GAAN,UAAO,aAAsB,EAAE,QAAgB,EAAE,QAAgB,EAAE,WAAmB,EAAE,YAAoB;QAC1G,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;QAED,IAAM,MAAM,GAAW,EAAE,CAAC;QAE1B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,QAAQ,EAAE,CAAC,GAAG,QAAQ,GAAG,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC;YACxD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,QAAQ,EAAE,CAAC,GAAG,QAAQ,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC;gBACvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAClC,CAAC;QACH,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED,qCAAgB,GAAhB,UAAiB,IAAU;QACzB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC;IACpD,CAAC;IAED,0CAAqB,GAArB,UAAsB,IAAU;QAC9B,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,UAAU,CAAC;IAC9D,CAAC;IAED,4BAAO,GAAP,UAAQ,YAAoB,EAAE,YAAoB;QAChD,MAAM,CAAC,YAAY,IAAI,CAAC,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ;YACjD,YAAY,IAAI,CAAC,IAAI,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC;IAC5D,CAAC;IAED,sCAAiB,GAAjB;QACE,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IAED,sCAAiB,GAAjB,UAAkB,OAAe,EAAE,OAAe;QAChD,IAAM,YAAY,GAAG,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAC5C,IAAM,YAAY,GAAG,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAE5C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;YAC9C,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;QAE3D,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAjIU,UAAU;QAHtB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAgBwC,6EAAgB;OAf7C,UAAU,CAkItB;IAAD,iBAAC;CAAA;AAlIsB;;;;;;;;;;;;;;;;;;;;;;;;;ACZoB;AAK3C;IAWE;QAVA,aAAQ,GAAa,EAAE,CAAC;IAUR,CAAC;IARjB,6BAAG,GAAH,UAAK,OAAe;QAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAED,+BAAK,GAAL;QACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IATU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,eAAe,CAY3B;IAAD,sBAAC;CAAA;AAZ2B;;;;;;;;;;;;;;;;;;;;;;;;;;ACLe;AAGoB;AAG/D,IAAM,aAAa,GAAG,mBAAO,CAAC,6EAAqC,CAAC,CAAC;AAKrE;IAGE,0BAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAF7C,cAAS,GAAe,aAAa,CAAC;IAEW,CAAC;IAElD,sCAAW,GAAlB,UAAmB,EAAU;QAC3B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAQ,IAAI,eAAQ,CAAC,EAAE,KAAK,EAAE,EAAlB,CAAkB,CAAC,CAAC;IAC7D,CAAC;IAEM,0CAAe,GAAtB,UAAuB,EAAU;QAC/B,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEtC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAClD,MAAM,CAAC;QACT,CAAC;QAED,GAAG,CAAC,CAA0B,UAAyB,EAAzB,aAAQ,CAAC,gBAAgB,EAAzB,cAAyB,EAAzB,IAAyB;YAAlD,IAAM,eAAe;YACxB,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SAC3E;QAED,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,YAAY,KAAK,QAAQ,CAAC,YAAY,IAAI,CAAC,CAAC,YAAY,KAAK,QAAQ,CAAC,YAAY,EAApF,CAAoF,CAAC;aAC7G,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,kBAAkB,GAAG,IAAI,EAA3B,CAA2B,CAAC,CAAC;QAEzC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,YAAY,CAAC,CAAC;IAC7D,CAAC;IAEM,qCAAU,GAAjB,UAAkB,EAAU;QAC1B,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEtC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,GAAG,CAAC,CAA0B,UAAyB,EAAzB,aAAQ,CAAC,gBAAgB,EAAzB,cAAyB,EAAzB,IAAyB;YAAlD,IAAM,eAAe;YACxB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC/E,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;SACF;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEM,0CAAe,GAAtB,UAAuB,YAA0B,EAAE,gBAAyB,EAAE,kBAA2B;QACvG,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,kBAAQ,IAAI,eAAQ,CAAC,YAAY,KAAK,YAAY,EAAtC,CAAsC,CAAC,CAAC;QAE1F,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACrB,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,kBAAQ,IAAI,eAAQ,CAAC,MAAM,CAAC,QAAQ,EAAxB,CAAwB,CAAC,CAAC;QACrE,CAAC;QACD,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACvB,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,kBAAQ,IAAI,eAAQ,CAAC,kBAAkB,EAA3B,CAA2B,CAAC,CAAC;QACxE,CAAC;QAED,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAEM,+CAAoB,GAA3B;QACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,kBAAQ,IAAI,eAAQ,CAAC,WAAW,EAApB,CAAoB,CAAC,CAAC;IACjE,CAAC;IAEM,4CAAiB,GAAxB;QACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,kBAAQ,IAAI,eAAQ,CAAC,QAAQ,EAAjB,CAAiB,CAAC,CAAC;IAC9D,CAAC;IAEM,sCAAW,GAAlB;QACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,EAAE,EAAX,CAAW,CAAC,CAAC;IACrD,CAAC;IAEM,0CAAe,GAAtB,UAAuB,EAAU,EAAE,WAAmB;QACpD,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEtC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;YACb,MAAM,CAAI,QAAQ,CAAC,mBAAmB,MAAG,CAAC;QAC5C,CAAC;QAED,MAAM,CAAI,QAAQ,CAAC,mBAAmB,UAAK,QAAQ,CAAC,YAAY,GAAG,QAAQ,CAAC,mBAAmB,GAAG,IAAI,qCAC7E,QAAQ,CAAC,WAAW,GAAG,WAAW,8BAA2B,CAAC;IACzF,CAAC;IAEM,4CAAiB,GAAxB,UAAyB,EAAU,EAAE,MAAc;QACjD,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC;IACxC,CAAC;IAEM,oCAAS,GAAhB,UAAiB,EAAU;QACzB,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC1E,CAAC;IAEO,8BAAG,GAAX,UAAY,OAAe;QACzB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,uBAAqB,OAAS,CAAC,CAAC;IAC3D,CAAC;IAxFU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIqC,0EAAe;OAHzC,gBAAgB,CAyF5B;IAAD,uBAAC;CAAA;AAzF4B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXc;AAGuB;AACH;AAK/D;IAEE,sBAAoB,gBAAkC,EAClC,eAAgC;QADhC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,oBAAe,GAAf,eAAe,CAAiB;IAAI,CAAC;IAElD,mCAAY,GAAnB,UAAoB,EAAU,EAAE,MAAc;QAC5C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC;QACT,CAAC;QAED,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEvD,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAClB,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC3B,CAAC;QAED,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;QAC9D,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,EAAE,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACzE,CAAC;IAEM,sCAAe,GAAtB,UAAuB,EAAU,EAAE,MAAc;QAC/C,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEvD,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAClB,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QAClD,CAAC;QAED,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,CAAC;IAC5D,CAAC;IAEM,sCAAe,GAAtB,UAAuB,YAA0B,EAAE,gBAAyB,EAAE,kBAA2B;QACvG,IAAI,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,kBAAQ,IAAI,eAAQ,CAAC,YAAY,KAAK,YAAY,EAAtC,CAAsC,CAAC,CAAC;QAE3G,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACrB,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,kBAAQ,IAAI,eAAQ,CAAC,QAAQ,EAAjB,CAAiB,CAAC,CAAC;QAC9D,CAAC;QACD,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACvB,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,kBAAQ,IAAI,eAAQ,CAAC,kBAAkB,EAA3B,CAA2B,CAAC,CAAC;QACxE,CAAC;QAED,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAEO,0BAAG,GAAX,UAAY,OAAe;QACzB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,uBAAqB,OAAS,CAAC,CAAC;IAC3D,CAAC;IA7CU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAGsC,6EAAgB;YACjB,0EAAe;OAHzC,YAAY,CA8CxB;IAAD,mBAAC;CAAA;AA9CwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTkB;AAEmC;AAEZ;AACH;AAI/D,IAAM,YAAY,GAAG,mBAAO,CAAC,2EAAoC,CAAC,CAAC;AAKnE;IAGE,yBAAoB,gBAAkC,EAClC,eAAgC;QADhC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,oBAAe,GAAf,eAAe,CAAiB;QAH7C,aAAQ,GAAG,YAAY,CAAC;IAGyB,CAAC;IAElD,oCAAU,GAAjB,UAAkB,EAAU;QAC1B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAO,IAAI,cAAO,CAAC,EAAE,KAAK,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAC1D,CAAC;IAEM,yCAAe,GAAtB,UAAuB,EAAU;QAC/B,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAEpC,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACpD,MAAM,CAAC;QACT,CAAC;QAED,GAAG,CAAC,CAAuB,UAAqB,EAArB,YAAO,CAAC,aAAa,EAArB,cAAqB,EAArB,IAAqB;YAA3C,IAAM,YAAY;YACrB,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;SAC9F;QAED,GAAG,CAAC,CAAwB,UAAsB,EAAtB,YAAO,CAAC,cAAc,EAAtB,cAAsB,EAAtB,IAAsB;YAA7C,IAAM,aAAa;YACtB,IAAI,kBAAkB,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC;YAEvF,EAAE,CAAC,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC,CAAC;gBACxC,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,aAAa,CAAC,YAAY,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;YACvG,CAAC;YAED,GAAG,CAAC,CAA4B,UAAkB,EAAlB,yCAAkB,EAAlB,gCAAkB,EAAlB,IAAkB;gBAA7C,IAAM,iBAAiB;gBAC5B,MAAM,CAAC,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC;oBACpC,KAAK,gEAAe,CAAC,cAAc,EAAE,CAAC;wBACpC,iBAAiB,CAAC,WAAW,GAAG,CAAC,CAAC,aAAa,CAAC,aAAa,CAAC;wBAC9D,KAAK,CAAC;oBACR,CAAC;oBACD,KAAK,gEAAe,CAAC,YAAY,EAAE,CAAC;wBAClC,iBAAiB,CAAC,YAAY,IAAI,aAAa,CAAC,aAAa,CAAC;wBAC9D,KAAK,CAAC;oBACR,CAAC;oBACD,KAAK,gEAAe,CAAC,mBAAmB,EAAE,CAAC;wBACzC,iBAAiB,CAAC,mBAAmB,IAAI,aAAa,CAAC,aAAa,CAAC;wBACrE,KAAK,CAAC;oBACR,CAAC;oBACD,KAAK,gEAAe,CAAC,QAAQ,EAAE,CAAC;wBAC9B,iBAAiB,CAAC,MAAM,CAAC,QAAQ,GAAG,CAAC,CAAC,aAAa,CAAC,aAAa,CAAC;wBAClE,KAAK,CAAC;oBACR,CAAC;oBACD,KAAK,gEAAe,CAAC,WAAW,EAAE,CAAC;wBACjC,iBAAiB,CAAC,WAAW,IAAI,aAAa,CAAC,aAAa,CAAC;wBAC7D,KAAK,CAAC;oBACR,CAAC;oBACD,KAAK,gEAAe,CAAC,UAAU,EAAE,CAAC;wBAChC,iBAAiB,CAAC,MAAM,CAAC,IAAI,IAAI,aAAa,CAAC,aAAa,CAAC;wBAC7D,KAAK,CAAC;oBACR,CAAC;gBACH,CAAC;aACF;SACF;QAED,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;IAC3B,CAAC;IAEM,0CAAgB,GAAvB,UAAwB,EAAU;QAChC,GAAG,CAAC,CAAuB,UAAiC,EAAjC,SAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,aAAa,EAAjC,cAAiC,EAAjC,IAAiC;YAAvD,IAAM,YAAY;YACrB,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC;gBAClG,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;SACF;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEM,wCAAc,GAArB,UAAsB,WAAwB,EAAE,iBAA0B,EAAE,mBAA4B,EAAE,kBAA2B;QAArI,iBAeC;QAdC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,iBAAO,IAAI,cAAO,CAAC,WAAW,KAAK,WAAW,EAAnC,CAAmC,CAAC,CAAC;QAEpF,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACtB,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,iBAAO,IAAI,cAAO,CAAC,SAAS,EAAjB,CAAiB,CAAC,CAAC;QAC3D,CAAC;QACD,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACxB,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,iBAAO,IAAI,QAAC,OAAO,CAAC,SAAS,EAAlB,CAAkB,CAAC,CAAC;QAC5D,CAAC;QACD,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACvB,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,iBAAO,IAAI,cAAO,CAAC,aAAa,CAAC,KAAK,CAC/D,YAAE,IAAI,YAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,kBAAkB,EAAnE,CAAmE,CAAC,EADtC,CACsC,CAAC,CAAC;QAChF,CAAC;QAED,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IAEM,8CAAoB,GAA3B,UAA4B,EAAU;QACpC,MAAM,CAAC,4DAAW,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC;IACtD,CAAC;IAEM,kDAAwB,GAA/B,UAAgC,SAAiB,EAAE,QAAgB;QACjE,MAAM,CAAC,gEAAe,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;IAC9F,CAAC;IAEO,6BAAG,GAAX,UAAY,OAAe;QACzB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,sBAAoB,OAAS,CAAC,CAAC;IAC1D,CAAC;IAlGU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIsC,6EAAgB;YACjB,0EAAe;OAJzC,eAAe,CAmG3B;IAAD,sBAAC;CAAA;AAnG2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACde;AAGuB;AAEH;AAG/D,IAAM,WAAW,GAAG,mBAAO,CAAC,yEAAmC,CAAC,CAAC;AAKjE;IAGE,wBAAsB,gBAAkC,EAClC,eAAgC;QADhC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,oBAAe,GAAf,eAAe,CAAiB;QAH/C,YAAO,GAAa,WAAW,CAAC;IAGmB,CAAC;IAEpD,mCAAU,GAAjB;QACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAEM,kCAAS,GAAhB,UAAiB,gBAAgD;QAC/D,MAAM,CAAC,OAAO,gBAAgB,KAAK,QAAQ,CAAC,CAAC;YAC3C,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAM,IAAI,aAAM,CAAC,YAAY,KAAK,gBAAgB,EAAxC,CAAwC,CAAC,CAAC;IAC1E,CAAC;IAEM,0CAAiB,GAAxB,UAAyB,UAAkB;QACzC,IAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC;QAChF,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QAE5C,EAAE,CAAC,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAED,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAE,IAAI,SAAE,CAAC,UAAU,KAAK,UAAU,EAA5B,CAA4B,CAAC,CAAC;IAC3E,CAAC;IAED,kCAAS,GAAT,UAAU,EAAU;QAClB,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QAElC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IACpE,CAAC;IAED,kDAAyB,GAAzB,UAA0B,UAAkB;QAC1C,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAE/D,MAAM,CAAI,QAAQ,CAAC,UAAU,SAAI,QAAQ,CAAC,WAAW,SAAI,QAAQ,CAAC,UAAU,IAAG,QAAQ,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,kBAAc,CAAC;IACrI,CAAC;IAED,uCAAc,GAAd;QACE,GAAG,CAAC,CAAiB,UAAY,EAAZ,SAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY;YAA5B,IAAM,MAAM;YACf,GAAG,CAAC,CAAyB,UAAwB,EAAxB,WAAM,CAAC,iBAAiB,EAAxB,cAAwB,EAAxB,IAAwB;gBAAhD,IAAM,cAAc;gBACvB,EAAE,CAAC,CAAC,cAAc,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC;oBACrC,QAAQ,CAAC;gBACX,CAAC;gBAED,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,cAAc,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,GAAG,cAAc,CAAC,WAAW,CAAC,CAAC;aAC7H;SACF;IACH,CAAC;IAED,mCAAU,GAAV,UAAW,EAAU;QACnB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC;QACT,CAAC;QAED,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QAElC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAEzD,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC;QACpB,MAAM,CAAC,WAAW,EAAE,CAAC;QACrB,MAAM,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAEO,4BAAG,GAAX,UAAY,OAAe;QACzB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,qBAAmB,OAAS,CAAC,CAAC;IACzD,CAAC;IAnEU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIwC,6EAAgB;YACjB,0EAAe;OAJ3C,cAAc,CAoE1B;IAAD,qBAAC;CAAA;AApE0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACb3B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AACzD;AAE2B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"/* AppComponent's private CSS styles */\\r\\nh1 {\\r\\n  font-size: 1.2em;\\r\\n  color: #999;\\r\\n  margin-bottom: 0;\\r\\n}\\r\\nh2 {\\r\\n  font-size: 2em;\\r\\n  margin-top: 0;\\r\\n  padding-top: 0;\\r\\n}\\r\\nnav a {\\r\\n  padding: 5px 10px;\\r\\n  text-decoration: none;\\r\\n  margin-top: 10px;\\r\\n  display: inline-block;\\r\\n  background-color: #eee;\\r\\n  border-radius: 4px;\\r\\n}\\r\\nnav a:visited, a:link {\\r\\n  color: #607d8b;\\r\\n}\\r\\nnav a:hover {\\r\\n  color: #039be5;\\r\\n  background-color: #cfd8dc;\\r\\n}\\r\\nnav a.active {\\r\\n  color: #039be5;\\r\\n}\\r\\n.debug-pane {\\r\\n  position: absolute;\\r\\n  top: 0px;\\r\\n  right: 5%;\\r\\n}\"","module.exports = \"<h1>Clicker Game</h1>\\n\\n<app-clicker-main></app-clicker-main>\\n\\n<mat-tab-group dynamicHeight>\\n  <mat-tab label=\\\"Explore\\\">\\n    <app-map></app-map>\\n  </mat-tab>\\n  <mat-tab label=\\\"Workers\\\">\\n    <app-workers></app-workers>\\n  </mat-tab>\\n  <mat-tab label=\\\"Store\\\">\\n    <app-store></app-store>\\n  </mat-tab>\\n  <mat-tab label=\\\"Upgrades\\\">\\n    <app-upgrades></app-upgrades>\\n  </mat-tab>\\n</mat-tab-group>\\n\\n<mat-card class=\\\"debug-pane\\\" *ngIf=\\\"debugMode\\\">\\n  <h1>Admin Dashboard</h1>\\n  <app-admin-debug></app-admin-debug>\\n  <app-messages></app-messages>\\n</mat-card>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'clicker-game';\n  debugMode = false;\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ClickerMainComponent } from './components/clicker-main/clicker-main.component';\r\nimport { MessagesComponent } from './components/messages/messages.component';\r\nimport { WorkersComponent } from './components/workers/workers.component';\r\nimport { StoreComponent } from './components/store/store.component';\r\nimport { UpgradesComponent } from './components/upgrades/upgrades.component';\r\nimport { MaterialImportModule } from './material-import/material-import.module';\r\nimport { PipeModule } from 'src/app/pipe/pipe.module';\r\nimport { AdminDebugComponent } from './components/admin-debug/admin-debug.component';\r\nimport { MapComponent } from './components/map/map.component';\r\nimport { ResourceDialogComponent } from './components/resource-dialog/resource-dialog.component';\r\nimport { UpgradeDialogComponent } from './components/upgrade-dialog/upgrade-dialog.component';\nimport { TouchDirective } from './directive/touch/touch.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ClickerMainComponent,\r\n    MessagesComponent,\r\n    WorkersComponent,\r\n    StoreComponent,\r\n    UpgradesComponent,\r\n    AdminDebugComponent,\r\n    MapComponent,\r\n    ResourceDialogComponent,\r\n    UpgradeDialogComponent,\r\n    TouchDirective,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MaterialImportModule,\r\n    PipeModule\r\n  ],\r\n  entryComponents: [\r\n    ResourceDialogComponent,\r\n    UpgradeDialogComponent\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<h2>Debug</h2>\\n\\n<mat-checkbox class=\\\"filterAccessible\\\" checked=\\\"true\\\" [(ngModel)]=\\\"adminService.filterAccessible\\\">Hide Inaccessible Upgrades</mat-checkbox>\\n<br />\\n<mat-checkbox class=\\\"filterAccessible\\\" checked=\\\"false\\\" [(ngModel)]=\\\"adminService.editMode\\\">Edit Mode</mat-checkbox>\\n<!-- <mat-checkbox class=\\\"filterAccessible\\\" checked=\\\"false\\\" [(ngModel)]=\\\"adminService.clampMap\\\">Clamp Map</mat-checkbox> -->\\n\\n<mat-divider></mat-divider>\\n<br />\\n<br />\\n\\n<mat-select [(ngModel)]=\\\"selectedResource\\\">\\n  <mat-option *ngFor=\\\"let resource of resourcesService.resources\\\" [value]=\\\"resource\\\">\\n    {{resource.name | titlecase}}\\n  </mat-option>\\n</mat-select>\\n\\n<mat-divider></mat-divider>\\n<br />\\n<br />\\n\\n<div *ngIf=\\\"selectedResource !== undefined\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput (submit)=\\\"addResourceAmount()\\\" [(ngModel)]=\\\"amount\\\">\\n  </mat-form-field>\\n  <button mat-raised-button (click)=\\\"addResourceAmount()\\\">Add to {{selectedResource.name | titlecase}}</button>\\n  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"stringifyResource(selectedResource)\\\">Export {{selectedResource.name | titlecase}} To JSON</button>\\n</div>\\n\\n<button mat-raised-button color=\\\"primary\\\" (click)=\\\"openResourceDialog()\\\">New Resource</button>\\n<button mat-raised-button color=\\\"primary\\\" (click)=\\\"openUpgradeDialog()\\\">New Upgrade</button>\\n\\n<mat-divider></mat-divider>\\n<br />\\n<br />\\n\\n<button mat-raised-button color=\\\"accent\\\" (click)=\\\"stringifyResources()\\\">Export Resources To JSON</button>\\n<button mat-raised-button color=\\\"accent\\\" (click)=\\\"stringifyWorkers()\\\">Export Workers To JSON</button>\\n<button mat-raised-button color=\\\"accent\\\" (click)=\\\"stringifyUpgrades()\\\">Export Upgrades To JSON</button>\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { AdminService } from '../../services/admin/admin.service';\r\nimport { ResourcesService } from '../../services/resources/resources.service';\r\nimport { Resource } from '../../objects/resource';\r\nimport { Worker } from '../../objects/worker';\r\nimport { WorkersService } from '../../services/workers/workers.service';\r\nimport { UpgradesService } from '../../services/upgrades/upgrades.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-debug',\r\n  templateUrl: './admin-debug.component.html',\r\n  styleUrls: ['./admin-debug.component.css']\r\n})\r\nexport class AdminDebugComponent implements OnInit {\r\n  public filterAccessible = true;\r\n\r\n  protected selectedResource: Resource;\r\n  amount: number;\r\n\r\n  constructor(\r\n    protected resourcesService: ResourcesService,\r\n    protected workersService: WorkersService,\r\n    protected upgradesService: UpgradesService,\r\n    protected adminService: AdminService\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  openResourceDialog() {\r\n    this.adminService.openResourceDialog();\r\n  }\r\n\r\n  openUpgradeDialog() {\r\n    this.adminService.openUpgradeDialog();\r\n  }\r\n\r\n  addResourceAmount() {\r\n    this.resourcesService.addResourceAmount(\r\n      +this.selectedResource.id,\r\n      +this.amount\r\n    );\r\n  }\r\n\r\n  prepareResourceForJson(resource: Resource) {\r\n    resource.id = +resource.id;\r\n\r\n    resource.amount = +resource.amount;\r\n\r\n    for (const resourceConsume of resource.resourceConsumes) {\r\n      resourceConsume.resourceId = +resourceConsume.resourceId;\r\n      resourceConsume.cost = +resourceConsume.cost;\r\n    }\r\n\r\n    resource.harvestYield = +resource.harvestYield;\r\n    resource.harvestMilliseconds = +resource.harvestMilliseconds;\r\n\r\n    resource.workerYield = +resource.workerYield;\r\n    resource.sellsFor = +resource.sellsFor;\r\n\r\n    resource.resourceTier = +resource.resourceTier;\r\n    resource.previousTier = resource.resourceTier === 0 ? 0 : resource.resourceTier - 1;\r\n    resource.resourceAccessible = resource.resourceTier === 0;\r\n\r\n    resource.worker.workerCount = +resource.worker.workerCount;\r\n    resource.worker.cost = +resource.worker.cost;\r\n\r\n    resource.amount = 0;\r\n    resource.resourceAccessible = resource.resourceTier === 0;\r\n  }\r\n\r\n  prepareWorkerForJson(worker: Worker) {\r\n    worker.id = +worker.id;\r\n\r\n    worker.cost = +worker.cost;\r\n\r\n    for (const resourceWorker of worker.workersByResource) {\r\n      resourceWorker.resourceId = +resourceWorker.resourceId;\r\n\r\n      resourceWorker.workerCount = +resourceWorker.workerCount;\r\n      resourceWorker.workerYield = +resourceWorker.workerYield;\r\n    }\r\n\r\n    worker.workerCount = 0;\r\n    worker.freeWorkers = 0;\r\n  }\r\n\r\n  stringifyResource(resource: Resource) {\r\n    this.prepareResourceForJson(resource);\r\n\r\n    alert(JSON.stringify(resource));\r\n  }\r\n\r\n  stringifyResources() {\r\n    for (const resource of this.resourcesService.resources) {\r\n      this.prepareResourceForJson(resource);\r\n    }\r\n\r\n    alert(JSON.stringify(this.resourcesService.resources));\r\n  }\r\n\r\n  stringifyWorkers() {\r\n    for (const worker of this.workersService.workers) {\r\n      this.prepareWorkerForJson(worker);\r\n    }\r\n\r\n    alert(JSON.stringify(this.workersService.workers));\r\n  }\r\n\r\n  stringifyUpgrades() {\r\n    alert(JSON.stringify(this.upgradesService.upgrades));\r\n  }\r\n}\r\n","module.exports = \"/* ClickerMainComponent's private CSS styles */\\r\\n.resources {\\r\\n  margin: 0 0 2em 0;\\r\\n  list-style-type: none;\\r\\n  padding: 0;\\r\\n  width: 25em;\\r\\n}\\r\\n.resources mat-expansion-panel {\\r\\n  margin: 0;\\r\\n}\\r\\n.resources mat-expansion-panel-header {\\r\\n  height: 30px !important;\\r\\n}\\r\\n.resources mat-card-subtitle {\\r\\n  position: absolute;\\r\\n  top: 10px;\\r\\n  right: 10px;\\r\\n  font-weight: bold;\\r\\n}\\r\\n.resources .resource-button {\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n  margin: .5em;\\r\\n  padding: .4em 0;\\r\\n  height: 3.6em;\\r\\n  width: 100%;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.resources .resource-button:hover {\\r\\n  left: .1em;\\r\\n}\\r\\n.resources .resource-button.mat-disabled {\\r\\n  cursor: default;\\r\\n}\\r\\n.resources .badge {\\r\\n  display: inline-block;\\r\\n  font-size: small;\\r\\n  color: white;\\r\\n  padding: 0.8em 0.7em 0 0.7em;\\r\\n  background-color: #607D8B;\\r\\n  line-height: 1em;\\r\\n  position: absolute;\\r\\n  right: -9px;\\r\\n  top: 1px;\\r\\n  height: 1.8em;\\r\\n  min-width: 16px;\\r\\n  text-align: center;\\r\\n  margin-right: .8em;\\r\\n  border-radius: 0 4px 4px 0;\\r\\n}\\r\\n.resource-button {\\r\\n  background-color: #eee;\\r\\n  border: none;\\r\\n  padding: 5px 10px;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n  cursor: hand;\\r\\n  font-family: Arial;\\r\\n}\\r\\n.harvest-progress {\\r\\n  display: flex;\\r\\n  align-content: center;\\r\\n  align-items: center;\\r\\n\\r\\n  height: 100%;\\r\\n  top: 0px;\\r\\n\\r\\n  position: absolute;\\r\\n  opacity: 0.5;\\r\\n}\\r\\n.resource-img {\\r\\n  position: absolute;\\r\\n\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n}\\r\\n\"","module.exports = \"<ul class=\\\"resources noselect\\\">\\n  <mat-accordion multi=\\\"true\\\">\\n    <mat-expansion-panel expanded=\\\"true\\\" *ngFor=\\\"let resourceType of resourceTypes | enumToArray\\\">\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          {{resourceType}}\\n        </mat-panel-title>\\n        <mat-panel-description>\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n\\n      <div *ngFor=\\\"let resource of resourcesOfType(resourceType, adminService.filterAccessible)\\\">\\n        <button appTouch mat-raised-button class=\\\"resource-button\\\" color=\\\"accent\\\" [disabled]=\\\"!resourcesService.canHarvest(resource.id)\\\" [id]=\\\"resource.id\\\"\\n          (mouseleave)='stopHarvesting(resource.id)'\\n          matTooltip=\\\"{{getTooltipMessage(resource.id)}}\\\" matTooltipPosition=\\\"right\\\">\\n          <mat-card-title>{{resource.name | titlecase }}</mat-card-title>\\n          <mat-card-subtitle>{{resource.amount | number:'1.0-0'}}</mat-card-subtitle>\\n          <mat-progress-bar [class.hidden]=\\\"resourceBeingHarvested !== resource.id\\\" class=\\\"harvest-progress\\\" [mode]=\\\"mode\\\" [value]=\\\"value\\\"></mat-progress-bar>\\n          <img class=\\\"resource-img\\\" src=\\\"{{resource.iconPath}}\\\" alt=\\\"{{resource.name}}\\\" *ngIf=\\\"resource.iconPath !== ''\\\">\\n        </button>\\n        <div *ngIf=\\\"adminService.editMode\\\">\\n          <br />\\n          <button (click)=\\\"editResource(resource.id)\\\">Edit {{resource.name | titlecase}}</button>\\n        </div>\\n      </div>\\n    </mat-expansion-panel>\\n  </mat-accordion>\\n</ul>\\n\"","import { Component, OnInit, } from '@angular/core';\r\n\r\nimport { ClickerMainService } from './../../services/clicker-main/clicker-main.service';\r\nimport { ResourcesService } from '../../services/resources/resources.service';\r\nimport { ResourceType, Resource } from '../../objects/resource';\r\nimport { AdminService } from './../../services/admin/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-clicker-main',\r\n  templateUrl: './clicker-main.component.html',\r\n  styleUrls: ['./clicker-main.component.css']\r\n})\r\nexport class ClickerMainComponent implements OnInit {\r\n  resourceTypes = ResourceType;\r\n\r\n  constructor(protected clickerMainService: ClickerMainService,\r\n              protected resourcesService: ResourcesService,\r\n              protected adminService: AdminService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  resourcesOfType(resourceType: string, filterByAccessible: boolean): Resource[] {\r\n    return this.resourcesService.resourcesOfType(this.resourceTypes[resourceType], false, filterByAccessible);\r\n  }\r\n\r\n  public getTooltipMessage(id: number): string {\r\n    const workerCount = this.resourcesService.getResource(id).worker.workerCount;\r\n    return this.resourcesService.resourceTooltip(id, workerCount);\r\n  }\r\n\r\n  startHarvesting(id: number) {\r\n    this.clickerMainService.startHarvesting(id);\r\n  }\r\n\r\n  stopHarvesting(id: number) {\r\n    this.clickerMainService.stopHarvesting(id);\r\n  }\r\n\r\n  updateProgressBar(id: number) {\r\n    this.clickerMainService.updateProgressBar(id);\r\n  }\r\n\r\n  shouldAnimateProgressBar(id: number): boolean {\r\n    return this.clickerMainService.shouldAnimateProgressBar(id);\r\n  }\r\n\r\n  harvestResource(id: number) {\r\n    this.clickerMainService.harvestResource(id);\r\n  }\r\n\r\n  editResource(id: number) {\r\n    this.adminService.openResourceDialog(id);\r\n  }\r\n\r\n  get resourceBeingHarvested() {\r\n    return this.clickerMainService.resourceBeingHarvested;\r\n  }\r\n\r\n  get value() {\r\n    return this.clickerMainService.value;\r\n  }\r\n\r\n  get mode() {\r\n    return this.clickerMainService.mode;\r\n  }\r\n\r\n  get millisecondsTotal() {\r\n    return this.clickerMainService.millisecondsTotal;\r\n  }\r\n\r\n  get harvestStartDate() {\r\n    return this.clickerMainService.harvestStartDate;\r\n  }\r\n\r\n  get progressBarUpdateDelay() {\r\n    return this.clickerMainService.progressBarUpdateDelay;\r\n  }\r\n}\r\n","module.exports = \".building-img {\\r\\n  position: absolute;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n.map-img {\\r\\n  z-index: -2;\\r\\n}\\r\\n\\r\\nmat-card {\\r\\n  position: absolute;\\r\\n  left: 120%;\\r\\n  z-index: 2;\\r\\n\\r\\n  width: intrinsic;\\r\\n  width: -moz-max-content;\\r\\n  width: -webkit-max-content;\\r\\n}\\r\\n\\r\\nmat-grid-tile {\\r\\n  overflow: visible;\\r\\n}\\r\\n\\r\\n.card-tail {\\r\\n  position: absolute;\\r\\n  z-index: 2;\\r\\n  right: -10px;\\r\\n  top: 14px;\\r\\n}\\r\\n\\r\\n.selected-border {\\r\\n  position: absolute;\\r\\n  z-index: 2;\\r\\n  top: -2px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"map noselect\\\" [ngStyle]=\\\"{ 'width.px': (adminService.clampMap ? windowWidth : getColumnCount()) * tilePixels}\\\">\\n  <mat-grid-list [cols]=\\\"(adminService.clampMap ? windowHeight : getRowCount())\\\" gutterSize=\\\"0\\\" rowHeight=\\\"{{tilePixels}}\\\">\\n    <mat-grid-tile *ngFor=\\\"let tile of getMap(adminService.clampMap)\\\">\\n      <mat-card *ngIf=\\\"showSelectedTileDialog && selectedTile === tile\\\">\\n        <mat-card-title>{{selectedBuilding.name}}</mat-card-title>\\n        <mat-card-content>\\n          {{selectedBuilding.description}}\\n          <br />\\n          <div *ngIf=\\\"selectedBuildingTile === undefined\\\">\\n            <h3>Costs</h3>\\n            <div *ngFor=\\\"let resourceCost of selectedBuilding.resourceCosts\\\">\\n              {{resourcesService.getResource(resourceCost.resourceId).name | titlecase }}: {{resourceCost.resourceCost}}\\n            </div>\\n            <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!canAffordBuilding(selectedBuilding.tileType)\\\" (click)=\\\"createBuilding(selectedTile, selectedBuilding.tileType)\\\">\\n              Build\\n            </button>\\n          </div>\\n          <div *ngIf=\\\"selectedBuildingTile !== undefined\\\">\\n            <h3>Placed Building: {{selectedBuildingTile.name | titlecase}}</h3>\\n            <button mat-raised-button color=\\\"warn\\\" (click)=\\\"clearBuilding(selectedTile)\\\">\\n              Remove\\n            </button>\\n          </div>\\n        </mat-card-content>\\n      </mat-card>\\n\\n      <a (click)=\\\"selectTile(tile)\\\">\\n        <img class=\\\"building-img\\\" *ngIf=\\\"tile.buildingTileType !== undefined\\\" src={{getBuildingTileSprite(tile)}} onmousedown=\\\"return false\\\">\\n        <img class=\\\"map-img\\\" src={{getMapTileSprite(tile)}} onmousedown=\\\"return false\\\">\\n\\n        <div *ngIf=\\\"showSelectedTileDialog && selectedTile === tile\\\">\\n          <img class=\\\"card-tail\\\" src=\\\"../../../assets/sprites/card_tail.png\\\" onmousedown=\\\"return false\\\">\\n          <img class=\\\"selected-border\\\" src=\\\"../../../assets/sprites/selected_border.png\\\" onmousedown=\\\"return false\\\">\\n        </div>\\n      </a>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</div>\\n\"","import { Component, OnInit, HostListener, ViewChild, ElementRef } from '@angular/core';\n\nimport { MapTileType, Tile, BuildingTileType, MapTile, BuildingTile } from '../../objects/tile';\nimport { MapService } from '../../services/map/map.service';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { ResourcesService } from '../../services/resources/resources.service';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n  mapTileTypes = MapTileType;\n  buildingTileTypes = BuildingTileType;\n\n  showSelectedTileDialog = false;\n  selectedTile: Tile;\n  selectedBuilding: BuildingTile;\n\n  tilePixels = 48;\n\n  topLeftX = 0;\n  topLeftY = 0;\n  windowWidth = 15;\n  windowHeight = 15;\n\n  constructor(protected mapService: MapService,\n              protected resourcesService: ResourcesService,\n              protected adminService: AdminService) { }\n\n  ngOnInit() {\n    this.setCameraLocation(0, 0);\n\n    this.selectedBuilding = this.mapService.buildingTiles[BuildingTileType.Wall];\n  }\n\n  @HostListener('document:keypress', ['$event'])\n  processMapInput(event: KeyboardEvent) {\n    switch (event.key) {\n      case 'w':\n      case 'W':\n      case 'ArrowUp':\n        this.setCameraLocation(0, -1);\n        break;\n      case 'a':\n      case 'A':\n      case 'ArrowLeft':\n        this.setCameraLocation(-1, 0);\n        break;\n      case 's':\n      case 'S':\n      case 'ArrowDown':\n        this.setCameraLocation(0, 1);\n        break;\n      case 'd':\n      case 'D':\n      case 'ArrowRight':\n        this.setCameraLocation(1, 0);\n        break;\n    }\n  }\n\n  selectTile(tile: Tile) {\n    this.selectedTile = tile;\n    this.showSelectedTileDialog = true;\n  }\n\n  canAffordBuilding(buildingType: BuildingTileType): boolean {\n    return this.mapService.canAffordBuilding(this.mapService.buildingTiles[buildingType]);\n  }\n\n  createBuilding(tile: Tile, buildingType: BuildingTileType) {\n    const buildingCreated = this.mapService.createBuilding(tile, buildingType);\n\n    this.showSelectedTileDialog = !buildingCreated;\n  }\n\n  clearBuilding(tile: Tile) {\n    this.mapService.clearBuilding(tile);\n  }\n\n  getMap(clampToWindow: boolean): Tile[] {\n    return this.mapService.getMap(clampToWindow, this.topLeftX, this.topLeftY, this.windowWidth, this.windowHeight);\n  }\n\n  getMapTileSprite(tile: Tile) {\n    return this.mapService.getMapTileSprite(tile);\n  }\n\n  getBuildingTileSprite(tile: Tile) {\n    return this.mapService.getBuildingTileSprite(tile);\n  }\n\n  getCameraLocation(): number[] {\n    return this.mapService.getCameraLocation();\n  }\n\n  setCameraLocation(xOffset: number, yOffset: number) {\n    const moveSuccessful = this.mapService.setCameraLocation(xOffset, yOffset);\n\n    if (!moveSuccessful) {\n      return;\n    }\n\n    this.topLeftX = Math.floor(this.mapService.cameraX - this.windowWidth / 2);\n    this.topLeftY = Math.floor(this.mapService.cameraY - this.windowHeight / 2);\n\n    if (this.topLeftX < 0) {\n      this.topLeftX = 0;\n    } else if (this.topLeftX + this.windowWidth > this.mapService.mapWidth) {\n      this.topLeftX = this.mapService.mapWidth - this.windowWidth;\n    }\n    if (this.topLeftY < 0) {\n      this.topLeftY = 0;\n    } else if (this.topLeftY + this.windowHeight > this.mapService.mapHeight) {\n      this.topLeftY = this.mapService.mapHeight - this.windowHeight;\n    }\n\n    const cameraCenter = this.getCameraLocation();\n\n    const distanceFromCenterX = Math.abs(cameraCenter[0] - (this.topLeftX + this.windowWidth / 2));\n    const distanceFromCenterY = Math.abs(cameraCenter[1] - (this.topLeftY + this.windowHeight / 2));\n\n    const newCameraX = this.topLeftX + xOffset;\n    const newCameraY = this.topLeftY + yOffset;\n\n    if (newCameraX >= 0 && newCameraX + this.windowWidth <= this.getColumnCount() && distanceFromCenterX >= 1) {\n      this.topLeftX = newCameraX;\n    }\n    if (newCameraY >= 0 && newCameraY + this.windowHeight <= this.getRowCount() && distanceFromCenterY >= 1) {\n      this.topLeftY = newCameraY;\n    }\n  }\n\n  get selectedMapTile(): MapTile {\n    if (this.selectedTile === undefined) {\n      return undefined;\n    }\n\n    return this.mapService.mapTiles[this.selectedTile.mapTileType];\n  }\n\n  get selectedBuildingTile(): BuildingTile {\n    if (this.selectedTile === undefined || this.selectedTile.buildingTileType === undefined) {\n      return undefined;\n    }\n\n    return this.mapService.buildingTiles[this.selectedTile.buildingTileType];\n  }\n\n  getRowCount(): number {\n    return this.mapService.getRowCount();\n  }\n\n  getColumnCount(): number {\n    return this.mapService.getColumnCount();\n  }\n}\n","module.exports = \"/* MessagesComponent's private CSS styles */\\r\\nh2 {\\r\\n  color: red;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-weight: lighter;\\r\\n}\\r\\nbody {\\r\\n  margin: 2em;\\r\\n}\\r\\nbody, input[text], button {\\r\\n  color: crimson;\\r\\n  font-family: Cambria, Georgia;\\r\\n}\\r\\nbutton.clear {\\r\\n  font-family: Arial;\\r\\n  background-color: #eee;\\r\\n  border: none;\\r\\n  padding: 5px 10px;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n  cursor: hand;\\r\\n}\\r\\nbutton:hover {\\r\\n  background-color: #cfd8dc;\\r\\n}\\r\\nbutton:disabled {\\r\\n  background-color: #eee;\\r\\n  color: #aaa;\\r\\n  cursor: auto;\\r\\n}\\r\\nbutton.clear {\\r\\n  color: #888;\\r\\n  margin-bottom: 12px;\\r\\n}\"","module.exports = \"<!-- <div *ngIf=\\\"messagesService.messages.length\\\"> -->\\n\\n\\t<h2>Messages</h2>\\n\\t<button class=\\\"clear\\\"\\n\\t\\t\\t(click)=\\\"messagesService.clear()\\\">clear</button>\\n\\t<div *ngFor='let message of messagesService.messages'> {{message}} </div>\\n\\n<!-- </div> -->\"","import { Component, OnInit } from '@angular/core';\nimport { MessagesService } from '../../services/messages/messages.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messagesService: MessagesService) { }\n\n  ngOnInit() { }\n\n}\n","module.exports = \".full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.inner-delete {\\r\\n  position: absolute;\\r\\n  top: 5px;\\r\\n  right: 5px;\\r\\n}\\r\\n\"","module.exports = \"<mat-vertical-stepper>\\n  <mat-step *ngIf=\\\"!editMode\\\">\\n    <ng-template matStepLabel>Select Resource Template</ng-template>\\n    <mat-form-field class=\\\"full-width\\\">\\n      <mat-select [(ngModel)]=\\\"oldResourceId\\\" [compareWith]=\\\"compareFn\\\" (selectionChange)=\\\"populateResource()\\\">\\n        <mat-option placeholder=\\\"Resource Type\\\" *ngFor=\\\"let resource of resourcesService.resources\\\" value=\\\"{{resource.id}}\\\">\\n          {{resource.name | titlecase}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <div>\\n      <button mat-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step>\\n    <ng-template matStepLabel>Set Resource Details</ng-template>\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"resource.name\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <mat-select [(ngModel)]=\\\"resource.resourceType\\\">\\n        <mat-option placeholder=\\\"Resource Type\\\" *ngFor=\\\"let resourceType of resourceTypes | enumToArray\\\" value=\\\"{{resourceTypes[resourceType]}}\\\">\\n          {{resourceType}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Icon Path\\\" [(ngModel)]=\\\"resource.iconPath\\\">\\n    </mat-form-field>\\n\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step>\\n    <ng-template matStepLabel>Set Resource Consumes</ng-template>\\n\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"newResourceConsume()\\\">Add New Consumed Resource</button>\\n    <div *ngFor=\\\"let resourceConsume of resource.resourceConsumes\\\">\\n      <mat-card>\\n        <button class=\\\"inner-delete\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"removeResourceConsume(resourceConsume)\\\">Remove Consumed Resource</button>\\n        <mat-form-field class=\\\"full-width\\\">\\n          <mat-select [(ngModel)]=\\\"resourceConsume.resourceId\\\" [compareWith]=\\\"compareFn\\\">\\n            <mat-option placeholder=\\\"Resource\\\" *ngFor=\\\"let _resource of resourcesService.resources\\\" value=\\\"{{_resource.id}}\\\">\\n              {{_resource.name | titlecase }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput placeholder=\\\"Cost\\\" [(ngModel)]=\\\"resourceConsume.cost\\\">\\n        </mat-form-field>\\n      </mat-card>\\n    </div>\\n\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step>\\n    <ng-template matStepLabel>Set Resource Values</ng-template>\\n\\n    <mat-checkbox [(ngModel)]=\\\"resource.harvestable\\\">Harvestable</mat-checkbox>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Harvest Yield\\\" [(ngModel)]=\\\"resource.harvestYield\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Harvest Time (Milliseconds)\\\" [(ngModel)]=\\\"resource.harvestMilliseconds\\\">\\n    </mat-form-field>\\n\\n    <mat-divider></mat-divider>\\n    <br />\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Worker Yield\\\" [(ngModel)]=\\\"resource.workerYield\\\">\\n    </mat-form-field>\\n\\n    <mat-divider></mat-divider>\\n    <br />\\n\\n    <mat-checkbox [(ngModel)]=\\\"resource.sellable\\\">Sellable</mat-checkbox>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Sells For\\\" [(ngModel)]=\\\"resource.sellsFor\\\">\\n    </mat-form-field>\\n\\n    <mat-divider></mat-divider>\\n    <br />\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Resource Tier\\\" [(ngModel)]=\\\"resource.resourceTier\\\">\\n    </mat-form-field>\\n\\n    <div *ngIf=\\\"resourceWorker !== null\\\">\\n      <mat-divider></mat-divider>\\n      <br />\\n\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput placeholder=\\\"Worker Yield\\\" [(ngModel)]=\\\"resourceWorker.workerYield\\\">\\n      </mat-form-field>\\n    </div>\\n\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step>\\n    <ng-template matStepLabel>Set Description</ng-template>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Resource Description\\\" [(ngModel)]=\\\"resource.resourceDescription\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Worker Verb\\\" [(ngModel)]=\\\"resource.workerVerb\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Worker Noun\\\" [(ngModel)]=\\\"resource.workerNoun\\\">\\n    </mat-form-field>\\n\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step>\\n    <ng-template matStepLabel>Done</ng-template>\\n    {{resource.name}} configured.\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-raised-button (click)=\\\"saveResource()\\\">Save Resource</button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"stepper.reset()\\\">Reset</button>\\n    </div>\\n  </mat-step>\\n</mat-vertical-stepper>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { ResourceType, ResourceConsume, Resource } from '../../objects/resource';\nimport { ResourcesService } from '../../services/resources/resources.service';\nimport { Worker, ResourceWorker } from '../../objects/worker';\nimport { WorkersService } from '../../services/workers/workers.service';\n\n@Component({\n  selector: 'app-resource-dialog',\n  templateUrl: './resource-dialog.component.html',\n  styleUrls: ['./resource-dialog.component.css']\n})\nexport class ResourceDialogComponent implements OnInit {\n  resource: Resource = {\n    id: this.resourcesService.resources.length,\n    name: '',\n    resourceType: ResourceType.Currency,\n    amount: 0,\n    iconPath: '',\n    resourceConsumes: [],\n    harvestable: true,\n    harvestYield: 1,\n    harvestMilliseconds: 1000,\n    workerYield: 1,\n    sellable: true,\n    sellsFor: 5,\n    resourceDescription: '',\n    workerVerb: '',\n    workerNoun: '',\n    resourceAccessible: true,\n    resourceTier: 0,\n    previousTier: 0,\n    worker: { workable: true, workerCount: 0, cost: 50 }\n  };\n  resourceWorker: ResourceWorker = this.workersService.getResourceWorker(0);\n\n  editMode = false;\n\n  oldResourceId = 0;\n\n  resourceTypes = ResourceType;\n\n  constructor(\n    protected resourcesService: ResourcesService,\n    protected workersService: WorkersService,\n    protected _formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<ResourceDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {}\n\n\n  ngOnInit() {\n    if (this.data.resourceId !== undefined) {\n      this.resource = this.resourcesService.getResource(this.data.resourceId);\n      this.resourceWorker = this.workersService.getResourceWorker(this.resource.id);\n\n      this.editMode = true;\n    }\n  }\n\n  populateResource() {\n    const resourceId = +this.oldResourceId;\n    const oldResource = this.resourcesService.getResource(resourceId);\n\n    this.resource.name = oldResource.name;\n    this.resource.resourceType = oldResource.resourceType;\n    this.resource.iconPath = oldResource.iconPath;\n    this.resource.amount = oldResource.amount;\n    this.resource.harvestable = oldResource.harvestable;\n    this.resource.harvestYield = oldResource.harvestYield;\n    this.resource.harvestMilliseconds = oldResource.harvestMilliseconds;\n    this.resource.workerYield = oldResource.workerYield;\n    this.resource.sellable = oldResource.sellable;\n    this.resource.sellsFor = oldResource.sellsFor;\n    this.resource.resourceDescription = oldResource.resourceDescription;\n    this.resource.workerVerb = oldResource.workerVerb;\n    this.resource.workerNoun = oldResource.workerNoun;\n    this.resource.resourceAccessible = oldResource.resourceAccessible;\n    this.resource.resourceTier = oldResource.resourceTier;\n    this.resource.previousTier = oldResource.previousTier;\n\n    for (const resourceConsume of oldResource.resourceConsumes) {\n      this.resource.resourceConsumes.push({\n        resourceId: resourceConsume.resourceId,\n        cost: resourceConsume.cost\n      });\n    }\n\n    this.resource.worker = {\n      workable: oldResource.worker.workable,\n      workerCount: oldResource.worker.workerCount,\n      cost: oldResource.worker.cost\n    };\n\n    this.resourceWorker = {\n      resourceId: resourceId,\n      workable: true,\n      workerCount: 0,\n      workerYield: 1,\n      sliderSettingValid: true\n    };\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  newResourceConsume() {\n    this.resource.resourceConsumes[this.resource.resourceConsumes.length] = {resourceId: 0, cost: 1};\n  }\n\n  removeResourceConsume(resourceConsume: ResourceConsume) {\n    this.resource.resourceConsumes = this.resource.resourceConsumes.filter(rc => rc !== resourceConsume);\n  }\n\n  updateResourceWorker() {\n    const worker = this.workersService.getWorker(this.resource.resourceType);\n\n    if (worker === undefined) {\n      console.log(`No worker found for ${this.resource.resourceType}`);\n      return;\n    }\n\n    this.resourceWorker.resourceId = this.resource.id;\n\n    const resourceWorkers = worker.workersByResource;\n\n    if (!resourceWorkers.find(rw => rw === this.resourceWorker)) {\n      resourceWorkers.push(this.resourceWorker);\n    }\n  }\n\n  saveResource() {\n    this.updateResourceWorker();\n\n    let existingResource = this.resourcesService.getResource(this.resource.id);\n\n    if (existingResource === undefined) {\n      this.resourcesService.resources.push(this.resource);\n    } else {\n      existingResource = this.resource;\n    }\n  }\n\n  compareFn(item1: number, item2: number) {\n    return +item1 === +item2;\n  }\n}\n","module.exports = \"/* StoreComponent's private CSS styles */\\r\\n.store {\\r\\n  margin: 0 0 2em 0;\\r\\n  list-style-type: none;\\r\\n  padding: 0;\\r\\n  width: 25em;\\r\\n}\\r\\n.store mat-expansion-panel {\\r\\n  margin: 0;\\r\\n}\\r\\n.store mat-expansion-panel-header {\\r\\n  height: 30px !important;\\r\\n}\\r\\n.store mat-card-subtitle {\\r\\n  position: absolute;\\r\\n  top: 10px;\\r\\n  right: 10px;\\r\\n}\\r\\n.store mat-card {\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n  background-color: #EEE;\\r\\n  margin: .5em;\\r\\n  padding: .4em 0;\\r\\n  height: 1.6em;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.store mat-card:hover {\\r\\n  color: #607D8B;\\r\\n  background-color: #DDD;\\r\\n  left: .1em;\\r\\n}\\r\\n.store a {\\r\\n  color: #888;\\r\\n  text-decoration: none;\\r\\n  position: relative;\\r\\n  display: block;\\r\\n  width: 250px;\\r\\n}\\r\\n.store a:hover {\\r\\n  color:#607D8B;\\r\\n}\\r\\n.store .harvestable {\\r\\n  background-color: antiquewhite;\\r\\n}\\r\\n.store .harvestable:hover {\\r\\n  background-color: blanchedalmond;\\r\\n}\\r\\n.store .badge {\\r\\n  display: inline-block;\\r\\n  font-size: small;\\r\\n  color: white;\\r\\n  padding: 0.8em 0.7em 0 0.7em;\\r\\n  background-color: #607D8B;\\r\\n  line-height: 1em;\\r\\n  position: absolute;\\r\\n  right: -9px;\\r\\n  top: 1px;\\r\\n  height: 1.8em;\\r\\n  min-width: 16px;\\r\\n  text-align: center;\\r\\n  margin-right: .8em;\\r\\n  border-radius: 0 4px 4px 0;\\r\\n}\\r\\n.right {\\r\\n  position: absolute;\\r\\n  right: 3px;\\r\\n  top: 3px;\\r\\n}\\r\\nbutton {\\r\\n  min-width: unset;\\r\\n  height: 27px;\\r\\n  line-height: unset;\\r\\n}\\r\\nbutton:hover {\\r\\n  background-color: #cfd8dc;\\r\\n}\\r\\nbutton.delete {\\r\\n  position: relative;\\r\\n  left: 194px;\\r\\n  top: -32px;\\r\\n  background-color: gray !important;\\r\\n  color: white;\\r\\n}\"","module.exports = \"<ul class=\\\"store\\\">\\n  <mat-accordion multi=\\\"true\\\">\\n      <mat-expansion-panel expanded=\\\"true\\\" *ngFor=\\\"let resourceType of resourceTypes | enumToArray\\\">\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            {{resourceType}}\\n          </mat-panel-title>\\n          <mat-panel-description>\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n\\n        <mat-card *ngFor=\\\"let resource of resourcesOfType(resourceType, true, adminService.filterAccessible)\\\"\\n          matTooltip=\\\"Sells for {{resource.sellsFor}} gold.\\\" matTooltipPosition=\\\"right\\\">\\n          {{resource.name | titlecase }}\\n          <span class=\\\"right\\\">\\n              <button mat-flat-button color='accent' [disabled]='!canSellResource(resource.id, 1)' (click)='sellResource(resource.id, 1)'>1x</button>\\n              <button mat-flat-button color='accent' [disabled]='!canSellResource(resource.id, 10)' (click)='sellResource(resource.id, 10)'>10x</button>\\n              <button mat-flat-button color='accent' [disabled]='!canSellResource(resource.id, 100)' (click)='sellResource(resource.id, 100)'>100x</button>\\n              <button mat-flat-button color='accent' [disabled]='!canSellResource(resource.id, -1)' (click)='sellResource(resource.id, -1)'>All</button>\\n            </span>\\n        </mat-card>\\n      </mat-expansion-panel>\\n    </mat-accordion>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Resource, ResourceType } from '../../objects/resource';\nimport { ResourcesService } from '../../services/resources/resources.service';\nimport { StoreService } from '../../services/store/store.service';\nimport { AdminService } from '../../services/admin/admin.service';\n\n@Component({\n  selector: 'app-store',\n  templateUrl: './store.component.html',\n  styleUrls: ['./store.component.css']\n})\nexport class StoreComponent implements OnInit {\n  resourceTypes = ResourceType;\n\n  constructor(private resourcesService: ResourcesService,\n              private storeService: StoreService,\n              private adminService: AdminService) { }\n\n  ngOnInit() {\n  }\n\n  canSellResource(id: number, amount: number) {\n    return this.storeService.canSellResource(id, amount);\n  }\n\n  resourcesOfType(resourceType: string, filterBySellable: boolean, filterByAccessible): Resource[] {\n    return this.storeService.resourcesOfType(this.resourceTypes[resourceType], filterBySellable, filterByAccessible);\n  }\n\n  sellResource(id: number, amount: number) {\n    const resource = this.resourcesService.getResource(id);\n\n    this.storeService.sellResource(id, amount);\n  }\n}\n","module.exports = \".full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.inner-delete {\\r\\n  position: absolute;\\r\\n  top: 5px;\\r\\n  right: 5px;\\r\\n}\\r\\n\"","module.exports = \"<mat-vertical-stepper>\\n  <mat-step *ngIf=\\\"!editMode\\\">\\n    <ng-template matStepLabel>Select Upgrade Template</ng-template>\\n    <mat-form-field class=\\\"full-width\\\">\\n      <mat-select [(ngModel)]=\\\"oldUpgradeId\\\" [compareWith]=\\\"compareFn\\\" (selectionChange)=\\\"populateUpgrade()\\\">\\n        <mat-option placeholder=\\\"Upgrade Type\\\" *ngFor=\\\"let upgrade of upgradesService.upgrades\\\" value=\\\"{{upgrade.id}}\\\">\\n          {{upgrade.name | titlecase}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <div>\\n      <button mat-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step>\\n    <ng-template matStepLabel>Set Upgrade Details</ng-template>\\n    <mat-form-field class=\\\"full-width\\\">\\n      <mat-select [(ngModel)]=\\\"upgrade.upgradeType\\\">\\n        <mat-option placeholder=\\\"Upgrade Type\\\" *ngFor=\\\"let upgradeType of upgradeTypes | enumToArray\\\" value=\\\"{{upgradeTypes[upgradeType]}}\\\">\\n          {{upgradeType}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"upgrade.name\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Description\\\" [(ngModel)]=\\\"upgrade.description\\\">\\n    </mat-form-field>\\n\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step>\\n    <ng-template matStepLabel>Set Upgrade Effects</ng-template>\\n\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"newUpgradeEffect()\\\">Add New Upgrade Effect</button>\\n    <div *ngFor=\\\"let upgradeEffect of upgrade.upgradeEffects\\\">\\n      <mat-card>\\n        <button class=\\\"inner-delete\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"removeUpgradeEffect(upgradeEffect)\\\">Remove Upgrade Effect</button>\\n        <mat-checkbox [(ngModel)]=\\\"upgradeEffect.upgradeIsForWholeType\\\">Upgrade Is For Whole Type</mat-checkbox>\\n\\n        <div *ngIf=\\\"upgradeEffect.upgradeIsForWholeType\\\">\\n          <mat-form-field class=\\\"full-width\\\">\\n            <mat-select [(ngModel)]=\\\"upgradeEffect.resourceType\\\">\\n              <mat-option placeholder=\\\"Resource Type\\\" *ngFor=\\\"let resourceType of resourceTypes | enumToArray\\\" value=\\\"{{resourceTypes[resourceType]}}\\\">\\n                {{resourceType}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n        <div *ngIf=\\\"!upgradeEffect.upgradeIsForWholeType\\\">\\n          <mat-form-field class=\\\"full-width\\\">\\n            <mat-select [(ngModel)]=\\\"upgradeEffect.resourceId\\\" [compareWith]=\\\"compareFn\\\">\\n              <mat-option placeholder=\\\"Resource Type\\\" *ngFor=\\\"let resource of resourcesService.resources\\\" value=\\\"{{resource.id}}\\\">\\n                {{resource.name | titlecase}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n\\n        <mat-form-field class=\\\"full-width\\\">\\n          <mat-select [(ngModel)]=\\\"upgradeEffect.upgradeVariable\\\">\\n            <mat-option placeholder=\\\"Upgrade Variable\\\" *ngFor=\\\"let upgradeVariable of upgradeVariables | enumToArray\\\" value=\\\"{{upgradeVariables[upgradeVariable]}}\\\">\\n              {{upgradeVariable}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <div *ngIf=\\\"upgradeEffect.upgradeVariable === upgradeVariables.Harvestability || upgradeEffect.upgradeVariable === upgradeVariables.Workable\\\">\\n          <mat-checkbox [(ngModel)]=\\\"upgradeEffect.upgradeFactor\\\">{{upgradeEffect.upgradeVariable | titlecase}}</mat-checkbox>\\n        </div>\\n        <div *ngIf=\\\"upgradeEffect.upgradeVariable !== upgradeVariables.Harvestability && upgradeEffect.upgradeVariable !== upgradeVariables.Workable\\\">\\n          <mat-form-field class=\\\"full-width\\\">\\n            <input matInput placeholder=\\\"Upgrade Factor\\\" [(ngModel)]=\\\"upgradeEffect.upgradeFactor\\\">\\n          </mat-form-field>\\n        </div>\\n      </mat-card>\\n    </div>\\n\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step>\\n    <ng-template matStepLabel>Set Resource Costs</ng-template>\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"newResourceCost()\\\">Add New Resouce Cost</button>\\n    <div *ngFor=\\\"let resourceCost of upgrade.resourceCosts\\\">\\n      <mat-card>\\n        <button class=\\\"inner-delete\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"removeResourceCost(resourceCost)\\\">Remove Resource Cost</button>\\n        <mat-form-field class=\\\"full-width\\\">\\n          <mat-select [(ngModel)]=\\\"resourceCost.resourceId\\\" [compareWith]=\\\"compareFn\\\">\\n            <mat-option placeholder=\\\"Resource Type\\\" *ngFor=\\\"let resource of resourcesService.resources\\\" value=\\\"{{resource.id}}\\\">\\n              {{resource.name | titlecase}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput placeholder=\\\"Resource Cost\\\" [(ngModel)]=\\\"resourceCost.resourceCost\\\">\\n        </mat-form-field>\\n      </mat-card>\\n    </div>\\n\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step>\\n    <ng-template matStepLabel>Done</ng-template>\\n    {{upgrade.name}} configured.\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-raised-button (click)=\\\"saveUpgrade()\\\">Save Upgrade</button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"stepper.reset()\\\">Reset</button>\\n    </div>\\n  </mat-step>\\n</mat-vertical-stepper>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\n\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { ResourceType, } from '../../objects/resource';\nimport { ResourcesService } from '../../services/resources/resources.service';\nimport { Upgrade, UpgradeType, UpgradeVariable, UpgradeEffect, ResourceCost } from '../../objects/upgrade';\nimport { UpgradesService } from '../../services/upgrades/upgrades.service';\nimport { ResourceDialogComponent } from '../resource-dialog/resource-dialog.component';\n\n@Component({\n  selector: 'app-upgrade-dialog',\n  templateUrl: './upgrade-dialog.component.html',\n  styleUrls: ['./upgrade-dialog.component.css']\n})\nexport class UpgradeDialogComponent implements OnInit {\n  upgrade: Upgrade = {\n    id: this.upgradesService.upgrades.length,\n    upgradeType: UpgradeType.Resource,\n    name: '',\n    description: '',\n    upgradeEffects: [],\n    resourceCosts: [],\n    purchased: false\n  };\n\n  editMode = false;\n\n  resourceTypes = ResourceType;\n  upgradeTypes = UpgradeType;\n  upgradeVariables = UpgradeVariable;\n\n  oldUpgradeId: 0;\n\n  constructor(protected resourcesService: ResourcesService,\n              protected upgradesService: UpgradesService,\n              protected _formBuilder: FormBuilder,\n              public dialogRef: MatDialogRef<ResourceDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n    if (this.data.upgradeId !== undefined) {\n      this.upgrade = this.upgradesService.getUpgrade(this.data.upgradeId);\n      this.editMode = true;\n    }\n  }\n\n  populateUpgrade() {\n    const upgradeId = +this.oldUpgradeId;\n    const oldUpgrade = this.upgradesService.getUpgrade(upgradeId);\n\n    this.upgrade.name = oldUpgrade.name;\n    this.upgrade.upgradeType = oldUpgrade.upgradeType;\n    this.upgrade.description = oldUpgrade.description;\n    this.upgrade.purchased = false;\n\n    for (const upgradeEffect of oldUpgrade.upgradeEffects) {\n      this.upgrade.upgradeEffects.push({\n        upgradeIsForWholeType: upgradeEffect.upgradeIsForWholeType,\n        resourceType: upgradeEffect.resourceType,\n        resourceId: upgradeEffect.resourceId,\n        upgradeVariable: upgradeEffect.upgradeVariable,\n        upgradeFactor: upgradeEffect.upgradeFactor,\n      });\n    }\n\n    for (const resourceCost of oldUpgrade.resourceCosts) {\n      this.upgrade.resourceCosts.push({\n        resourceId: resourceCost.resourceId,\n        resourceCost: resourceCost.resourceCost\n      });\n    }\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  newUpgradeEffect() {\n    this.upgrade.upgradeEffects[this.upgrade.upgradeEffects.length] = {\n      upgradeIsForWholeType: false,\n      resourceId: 0,\n      upgradeVariable: UpgradeVariable.Harvestability,\n      upgradeFactor: 1\n    };\n  }\n\n  removeUpgradeEffect(upgradeEffect: UpgradeEffect) {\n    this.upgrade.upgradeEffects = this.upgrade.upgradeEffects.filter(ue => ue !== upgradeEffect);\n  }\n\n  newResourceCost() {\n    this.upgrade.resourceCosts[this.upgrade.resourceCosts.length] = {\n      resourceId: 0,\n      resourceCost: 0\n    };\n  }\n\n  removeResourceCost(resourceCost: ResourceCost) {\n    this.upgrade.resourceCosts = this.upgrade.resourceCosts.filter(rc => rc !== resourceCost);\n  }\n\n  saveUpgrade() {\n    this.upgrade.id = +this.upgrade.id;\n\n    for (const upgradeEffect of this.upgrade.upgradeEffects) {\n      if (upgradeEffect.resourceId) {\n        upgradeEffect.resourceId = +upgradeEffect.resourceId;\n      }\n\n      upgradeEffect.upgradeFactor = +upgradeEffect.upgradeFactor;\n    }\n\n    for (const resourceCost of this.upgrade.resourceCosts) {\n      resourceCost.resourceId = +resourceCost.resourceId;\n      resourceCost.resourceCost = +resourceCost.resourceCost;\n    }\n\n    let existingUpgrade = this.upgradesService.getUpgrade(this.upgrade.id);\n\n    if (existingUpgrade === undefined) {\n      this.upgradesService.upgrades.push(this.upgrade);\n    } else {\n      existingUpgrade = this.upgrade;\n    }\n  }\n\n  compareFn(item1: number, item2: number) {\n    return +item1 === +item2;\n  }\n}\n","module.exports = \"/* UpgradesComponent's private CSS styles */\\r\\n.upgrades {\\r\\n  margin: 0 0 2em 0;\\r\\n  list-style-type: none;\\r\\n  padding: 0;\\r\\n  width: 25em;\\r\\n}\\r\\n.upgrades mat-expansion-panel {\\r\\n  margin: 0;\\r\\n}\\r\\n.upgrades mat-expansion-panel-header {\\r\\n  height: 30px !important;\\r\\n}\\r\\n.upgrades mat-card-subtitle {\\r\\n  position: absolute;\\r\\n  top: 10px;\\r\\n  right: 10px;\\r\\n  font-weight: bold;\\r\\n}\\r\\n.upgrades button {\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n  margin: .5em;\\r\\n  padding: .4em 0;\\r\\n  height: 3.6em;\\r\\n  width: 100%;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.upgrades button:hover {\\r\\n  left: .1em;\\r\\n}\\r\\n.upgrades button.mat-disabled {\\r\\n  cursor: default;\\r\\n}\\r\\n.upgrades .badge {\\r\\n  display: inline-block;\\r\\n  font-size: small;\\r\\n  color: white;\\r\\n  padding: 0.8em 0.7em 0 0.7em;\\r\\n  background-color: #607D8B;\\r\\n  line-height: 1em;\\r\\n  position: absolute;\\r\\n  right: -9px;\\r\\n  top: 1px;\\r\\n  height: 1.8em;\\r\\n  min-width: 16px;\\r\\n  text-align: center;\\r\\n  margin-right: .8em;\\r\\n  border-radius: 0 4px 4px 0;\\r\\n}\\r\\nbutton {\\r\\n  background-color: #eee;\\r\\n  border: none;\\r\\n  padding: 5px 10px;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n  cursor: hand;\\r\\n  font-family: Arial;\\r\\n}\\r\\n.harvest-progress {\\r\\n  display: flex;\\r\\n  align-content: center;\\r\\n  align-items: center;\\r\\n  \\r\\n  height: 100%;\\r\\n  top: 0px;\\r\\n  \\r\\n  position: absolute;\\r\\n  opacity: 0.5;\\r\\n}\"","module.exports = \"<mat-checkbox class=\\\"hidePurchased\\\" checked=\\\"true\\\" [(ngModel)]=\\\"hidePurchased\\\">Hide Purchased Upgrades</mat-checkbox>\\n<br />\\n<br />\\n\\n<div class=\\\"upgrades\\\">\\n  <mat-accordion multi=\\\"true\\\">\\n    <mat-expansion-panel expanded=\\\"true\\\" *ngFor=\\\"let upgradeType of upgradeTypes | enumToArray\\\">\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          {{upgradeType}}\\n        </mat-panel-title>\\n        <mat-panel-description>\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n\\n      <div *ngFor=\\\"let upgrade of upgradesOfType(upgradeType, false, hidePurchased, adminService.filterAccessible)\\\">\\n        <mat-divider></mat-divider>\\n        <button mat-raised-button color=\\\"accent\\\"\\n          [disabled]='!canAffordUpgrade(upgrade.id)'\\n          (click)='purchaseUpgrade(upgrade.id)'>\\n          <mat-card-title>{{upgrade.name}}</mat-card-title>\\n        </button>\\n        <mat-card-subtitle>{{upgradesService.getUpgradeTypeString(upgrade.id)}}</mat-card-subtitle>\\n        <mat-card-content>\\n          {{upgrade.description}}\\n          <br />\\n          <h3>Costs</h3>\\n          <div *ngFor=\\\"let resourceCost of upgrade.resourceCosts\\\">\\n            {{resourcesService.getResource(resourceCost.resourceId).name | titlecase }}: {{resourceCost.resourceCost}}\\n          </div>\\n        </mat-card-content>\\n        <div *ngIf=\\\"adminService.editMode\\\">\\n          <button (click)=\\\"editUpgrade(upgrade.id)\\\">Edit {{upgrade.name | titlecase}}</button>\\n        </div>\\n      </div>\\n    </mat-expansion-panel>\\n  </mat-accordion>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Resource } from '../../objects/resource';\nimport { ResourcesService } from '../../services/resources/resources.service';\nimport { Upgrade, ResourceCost, UpgradeType } from '../../objects/upgrade';\nimport { UpgradesService } from '../../services/upgrades/upgrades.service';\nimport { AdminService } from '../../services/admin/admin.service';\n\n@Component({\n  selector: 'app-upgrades',\n  templateUrl: './upgrades.component.html',\n  styleUrls: ['./upgrades.component.css']\n})\nexport class UpgradesComponent implements OnInit {\n  upgradeTypes = UpgradeType;\n  hidePurchased = false;\n\n  constructor(private resourcesService: ResourcesService,\n              private upgradesService: UpgradesService,\n              private adminService: AdminService) { }\n\n  ngOnInit() {\n  }\n\n  canAffordUpgrade(id: number) {\n    return this.upgradesService.canAffordUpgrade(id);\n  }\n\n  upgradesOfType(upgradeType: string, filterByPurchased: boolean, filterByUnpurchased: boolean, filterByAccessible: boolean): Upgrade[] {\n    return this.upgradesService.upgradesOfType(this.upgradeTypes[upgradeType], filterByPurchased, filterByUnpurchased, filterByAccessible);\n  }\n\n  purchaseUpgrade(id: number) {\n    this.upgradesService.purchaseUpgrade(id);\n  }\n\n  getBackgroundColor(id: number): string {\n    const upgrade = this.upgradesService.getUpgrade(id);\n\n    if (upgrade.purchased) {\n      return 'lightgreen';\n    } else if (!this.upgradesService.canAffordUpgrade(id)) {\n      return 'gray';\n    }\n\n    return 'lightblue';\n  }\n\n  editUpgrade(id: number) {\n    this.adminService.openUpgradeDialog(id);\n  }\n}\n","module.exports = \"/* WorkersComponent's private CSS styles */\\r\\n.workers {\\r\\n  margin: 0 0 2em 0;\\r\\n  list-style-type: none;\\r\\n  padding: 0;\\r\\n  width: 25em;\\r\\n}\\r\\n.workers mat-expansion-panel {\\r\\n  margin: 0;\\r\\n}\\r\\n.workers mat-expansion-panel-header {\\r\\n  height: 30px !important;\\r\\n}\\r\\n.workers mat-card-title {\\r\\n  text-align: left;\\r\\n}\\r\\n.workers mat-card-subtitle {\\r\\n  position: absolute;\\r\\n  top: 10px;\\r\\n  right: 10px;\\r\\n}\\r\\n.workers mat-slider {\\r\\n  width: 100%;\\r\\n  top: -22px;\\r\\n}\\r\\n.workers mat-card {\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n  margin: .5em;\\r\\n  padding: .4em 0;\\r\\n  height: 3.6em;\\r\\n  width: 100%;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.workers button {\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n  margin: .5em;\\r\\n  padding: .4em 0;\\r\\n  height: 3.6em;\\r\\n  width: 100%;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.workers button:hover {\\r\\n  color: #607D8B;\\r\\n  background-color: #DDD;\\r\\n  left: .1em;\\r\\n}\\r\\n.workers a {\\r\\n  color: #888;\\r\\n  text-decoration: none;\\r\\n  position: relative;\\r\\n  display: block;\\r\\n  width: 250px;\\r\\n}\\r\\n.workers a:hover {\\r\\n  color:#607D8B;\\r\\n}\\r\\n.workers .harvestable {\\r\\n  background-color: antiquewhite;\\r\\n}\\r\\n.workers .harvestable:hover {\\r\\n  background-color: blanchedalmond;\\r\\n}\\r\\n.workers .badge {\\r\\n  display: inline-block;\\r\\n  font-size: small;\\r\\n  color: white;\\r\\n  padding: 0.8em 0.7em 0 0.7em;\\r\\n  background-color: #607D8B;\\r\\n  line-height: 1em;\\r\\n  position: absolute;\\r\\n  right: -9px;\\r\\n  top: 1px;\\r\\n  height: 1.8em;\\r\\n  min-width: 16px;\\r\\n  text-align: center;\\r\\n  margin-right: .8em;\\r\\n  border-radius: 0 4px 4px 0;\\r\\n}\\r\\nbutton {\\r\\n  background-color: #eee;\\r\\n  border: none;\\r\\n  padding: 5px 10px;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n  cursor: hand;\\r\\n  font-family: Arial;\\r\\n}\\r\\nbutton:hover {\\r\\n  background-color: #cfd8dc;\\r\\n}\\r\\nbutton.delete {\\r\\n  position: relative;\\r\\n  left: 194px;\\r\\n  top: -32px;\\r\\n  background-color: gray !important;\\r\\n  color: white;\\r\\n}\\r\\n\"","module.exports = \"<ul class=\\\"workers\\\">\\n  <mat-accordion multi=\\\"true\\\">\\n    <mat-expansion-panel expanded=\\\"true\\\" *ngFor=\\\"let worker of getWorkers()\\\">\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          {{worker.resourceType | titlecase}}\\n        </mat-panel-title>\\n        <mat-panel-description>\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n\\n      <button mat-raised-button [color]=\\\"canAfford(worker.id) ? 'accent' : 'disabled'\\\" (click)=\\\"hireWorker(worker.id)\\\">\\n        <mat-card-title>{{worker.workerCount}} Workers ({{worker.freeWorkers}} Idle)</mat-card-title>\\n        <mat-card-subtitle>{{worker.cost}} Gold</mat-card-subtitle>\\n      </button>\\n\\n      <div *ngFor=\\\"let resourceWorker of worker.workersByResource\\\">\\n        <mat-card *ngIf=\\\"resourceWorker.workable || !adminService.filterAccessible\\\" matTooltip=\\\"{{getTooltipMessage(resourceWorker.resourceId)}}\\\"\\n          matTooltipPosition=\\\"right\\\">\\n          <mat-card-title>{{resourcesService.getResource(resourceWorker.resourceId).name | titlecase}}</mat-card-title>\\n          <mat-card-subtitle>{{resourceWorker.workerCount}} Workers</mat-card-subtitle>\\n          <mat-slider [color]=\\\"resourceWorker.sliderSettingValid ? 'accent' : 'warn'\\\" [id]=\\\"resourceWorker.resourceId\\\" [max]=\\\"worker.workerCount\\\"\\n            [tickInterval]=\\\"1\\\" [thumbLabel]=\\\"true\\\" (input)=\\\"checkSliderValue($event)\\\" (change)=\\\"updateResourceWorkers($event)\\\">\\n          </mat-slider>\\n        </mat-card>\\n      </div>\\n    </mat-expansion-panel>\\n  </mat-accordion>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Resource, ResourceType } from '../../objects/resource';\nimport { ResourcesService } from '../../services/resources/resources.service';\nimport { Worker } from '../../objects/worker';\nimport { WorkersService } from '../../services/workers/workers.service';\nimport { AdminService } from '../../services/admin/admin.service';\n\n@Component({\n  selector: 'app-workers',\n  templateUrl: './workers.component.html',\n  styleUrls: ['./workers.component.css']\n})\nexport class WorkersComponent implements OnInit {\n  resourceTypes = ResourceType;\n\n  constructor(protected resourcesService: ResourcesService,\n              protected workersService: WorkersService,\n              protected adminService: AdminService) { }\n\n  ngOnInit() {\n  }\n\n  getWorkers(): Worker[] {\n    return this.workersService.getWorkers();\n  }\n\n  public getWorker(idOrResourceType: number | ResourceType) {\n    return this.workersService.getWorker(idOrResourceType);\n  }\n\n  canAfford(id: number): boolean {\n    return this.workersService.canAfford(id);\n  }\n\n  getTooltipMessage(id: number): string {\n    return this.workersService.getResourceTooltipMessage(id);\n  }\n\n  hireWorker(id: number) {\n    this.workersService.hireWorker(id);\n  }\n\n  checkSliderValue(event: any) {\n    const resource = this.resourcesService.getResource(+event.source._elementRef.nativeElement.id);\n    const worker = this.getWorker(resource.resourceType);\n    const resourceWorker = worker.workersByResource.find(ws => ws.resourceId === resource.id);\n\n    const newValue = +event.value;\n\n    resourceWorker.sliderSettingValid = worker.freeWorkers + resourceWorker.workerCount - newValue >= 0;\n  }\n\n  updateResourceWorkers(event: any) {\n    const resource = this.resourcesService.getResource(+event.source._elementRef.nativeElement.id);\n    const worker = this.getWorker(resource.resourceType);\n    const resourceWorker = worker.workersByResource.find(ws => ws.resourceId === resource.id);\n\n    if (!resourceWorker.sliderSettingValid) {\n      return;\n    }\n\n    const newValue = +event.value;\n    const newFreeWorkers = worker.freeWorkers + resourceWorker.workerCount - newValue;\n\n    worker.freeWorkers = newFreeWorkers;\n    resourceWorker.workerCount = newValue;\n  }\n}\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\n\nimport * as Hammer from 'hammerjs';\n\nimport { ClickerMainService } from './../../services/clicker-main/clicker-main.service';\n\n@Directive({\n  selector: '[appTouch]'\n})\nexport class TouchDirective {\n  constructor(protected element: ElementRef,\n              protected renderer: Renderer2,\n              protected clickerMainService: ClickerMainService) {\n    Hammer(element.nativeElement).on('press', function(event) {\n      const id = +element.nativeElement.attributes['id'].value;\n      clickerMainService.startHarvesting(id);\n    });\n\n    Hammer(element.nativeElement).on('pressup', function(event) {\n      const id = +element.nativeElement.attributes['id'].value;\n      clickerMainService.stopHarvesting(id);\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MatButtonModule, MatCheckboxModule } from '@angular/material';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatStepperModule } from '@angular/material/stepper';\n\nconst modules = [\n  MatButtonModule,\n  MatCheckboxModule,\n  MatProgressBarModule,\n  MatChipsModule,\n  MatIconModule,\n  MatTooltipModule,\n  MatCardModule,\n  MatGridListModule,\n  MatTabsModule,\n  MatExpansionModule,\n  MatDividerModule,\n  MatInputModule,\n  MatSelectModule,\n  MatListModule,\n  MatSliderModule,\n  MatDialogModule,\n  MatStepperModule\n];\n\n@NgModule({\n  imports: modules,\n  exports: modules\n})\nexport class MaterialImportModule { }\n","export enum ResourceType {\r\n  Currency = 'CURRENCY',\r\n  Wood = 'WOOD',\r\n  Metal = 'METAL',\r\n  Miscellaneous = 'MISCELLANEOUS'\r\n}\r\n\r\nexport interface ResourceConsume {\r\n  resourceId: number;\r\n  cost: number;\r\n}\r\n\r\nexport interface Worker {\r\n  workable: boolean;\r\n  workerCount: number;\r\n  cost: number;\r\n}\r\n\r\nexport class Resource {\r\n  id: number;\r\n  name: string;\r\n  resourceType: ResourceType;\r\n  iconPath: string;\r\n\r\n  amount: number;\r\n\r\n  resourceConsumes: ResourceConsume[];\r\n\r\n  harvestable: boolean;\r\n  harvestYield?: number;\r\n  harvestMilliseconds?: number;\r\n\r\n  workerYield?: number;\r\n\r\n  sellable: boolean;\r\n  sellsFor?: number;\r\n\r\n  resourceDescription: string;\r\n  workerVerb: string;\r\n  workerNoun: string;\r\n\r\n  resourceAccessible: boolean;\r\n  resourceTier: number;\r\n  previousTier: number;\r\n\r\n  worker: Worker;\r\n}\r\n","export enum MapTileType {\r\n  Grass = 'GRASS',\r\n  Water = 'WATER',\r\n  Mountain = 'MOUNTAIN'\r\n}\r\n\r\nexport enum BuildingTileType {\r\n  Wall = 'WALL'\r\n}\r\n\r\nexport interface ResourceCost {\r\n  resourceId: number;\r\n  resourceCost: number;\r\n}\r\n\r\nexport interface MapTile {\r\n  tileType: MapTileType;\r\n\r\n  name: string;\r\n\r\n  spritePath: string;\r\n\r\n  walkable: boolean;\r\n}\r\n\r\nexport interface BuildingTile {\r\n  tileType: BuildingTileType;\r\n\r\n  spritePath: string;\r\n\r\n  name: string;\r\n  description: string;\r\n\r\n  resourceCosts: ResourceCost[];\r\n  buildableSurfaces: MapTileType[];\r\n}\r\n\r\nexport class Tile {\r\n  mapTileType: MapTileType;\r\n  buildingTileType?: BuildingTileType;\r\n}\r\n","import { ResourceType } from './resource';\r\n\r\nexport enum UpgradeType {\r\n  Resource = 'RESOURCE',\r\n  Worker = 'WORKER'\r\n}\r\n\r\nexport enum UpgradeVariable {\r\n  Harvestability = 'HARVESTABILITY',\r\n  HarvestYield = 'HARVEST_YIELD',\r\n  HarvestMilliseconds = 'HARVEST_MILLISECONDS',\r\n  Workable = 'WORKABLE',\r\n  WorkerYield = 'WORKER_YIELD',\r\n  WorkerCost = 'WORKER_COST'\r\n}\r\n\r\nexport interface UpgradeEffect {\r\n  upgradeIsForWholeType: boolean;\r\n\r\n  resourceType?: ResourceType;\r\n  resourceId?: number;\r\n\r\n  upgradeVariable: UpgradeVariable;\r\n  upgradeFactor: number;\r\n}\r\n\r\nexport interface ResourceCost {\r\n  resourceId: number;\r\n  resourceCost: number;\r\n}\r\n\r\nexport class Upgrade {\r\n  id: number;\r\n  upgradeType: UpgradeType;\r\n\r\n  name: string;\r\n  description: string;\r\n\r\n  upgradeEffects: UpgradeEffect[];\r\n\r\n  resourceCosts: ResourceCost[];\r\n  purchased: boolean;\r\n}\r\n","import { Pipe } from '@angular/core';\r\nimport { PipeTransform } from '@angular/core/src/change_detection/pipe_transform';\r\n\r\n@Pipe({\r\n    name: 'enumToArray'\r\n})\r\nexport class EnumToPipe implements PipeTransform {\r\n    transform(data: object) {\r\n        return Object.keys(data);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EnumToPipe } from './enumtoarraypipe';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    EnumToPipe\n  ],\n  exports: [\n    EnumToPipe\n  ]\n})\nexport class PipeModule { }\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material';\n\nimport { ResourceDialogComponent } from '../../components/resource-dialog/resource-dialog.component';\nimport { UpgradeDialogComponent } from '../../components/upgrade-dialog/upgrade-dialog.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  public filterAccessible = true;\n  public clampMap = true;\n  public editMode: false;\n\n  constructor(public dialog: MatDialog) { }\n\n  openResourceDialog(resourceId?: number) {\n    const dialogRef = this.dialog.open(ResourceDialogComponent, {\n      width: '750px',\n      height: '600px',\n      data: resourceId === undefined ? {} : {resourceId: resourceId}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  openUpgradeDialog(upgradeId?: number) {\n    const dialogRef = this.dialog.open(UpgradeDialogComponent, {\n      width: '750px',\n      height: '525px',\n      data: upgradeId === undefined ? {} : {upgradeId: upgradeId}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { timer } from 'rxjs';\n\nimport { ResourcesService } from '../resources/resources.service';\nimport { WorkersService } from '../workers/workers.service';\nimport { AdminService } from '../admin/admin.service';\nimport { Resource, ResourceType } from '../../objects/resource';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClickerMainService {\n  harvestTimer;\n  harvestSubscribe;\n  progressBarTimer;\n  progressBarSubscribe;\n\n  resourceBeingHarvested = -1;\n\n  value = 0;\n  mode = 'determinate';\n\n  millisecondsTotal = 1000;\n  harvestStartDate: number;\n  progressBarUpdateDelay = 200;\n\n  resourceTypes = ResourceType;\n\n  constructor(protected resourcesService: ResourcesService,\n              protected workersService: WorkersService,\n              protected adminService: AdminService) {\n    const processSource = timer(1000, 1000);\n    const processSubscribe = processSource.subscribe(_ => this.workersService.processWorkers());\n  }\n\n  startHarvesting(id: number) {\n    const resource = this.resourcesService.getResource(id);\n    this.harvestStartDate = Date.now();\n\n    if (!this.resourcesService.canHarvest(id)) {\n      return;\n    }\n\n    if (this.harvestSubscribe !== undefined) {\n      this.harvestSubscribe.unsubscribe();\n    }\n\n    this.millisecondsTotal = resource.harvestMilliseconds;\n    this.harvestTimer = timer(this.millisecondsTotal, this.millisecondsTotal);\n    this.harvestSubscribe = this.harvestTimer.subscribe(_ => this.harvestResource(id));\n\n    if (this.shouldAnimateProgressBar(id)) {\n      this.mode = 'determinate';\n      this.progressBarTimer = timer(0, this.progressBarUpdateDelay);\n      this.progressBarSubscribe = this.progressBarTimer.subscribe(_ => this.updateProgressBar(id));\n    } else {\n      this.mode = 'indeterminate';\n      this.value = 100;\n    }\n\n    this.resourceBeingHarvested = id;\n  }\n\n  stopHarvesting(id: number) {\n    if (this.resourceBeingHarvested === -1) {\n      return;\n    }\n\n    if (this.shouldAnimateProgressBar(id)) {\n      this.progressBarSubscribe.unsubscribe();\n    }\n\n    this.harvestSubscribe.unsubscribe();\n\n    this.value = 0;\n    this.resourceBeingHarvested = -1;\n  }\n\n  updateProgressBar(id: number) {\n    this.value = Math.floor((Date.now() - this.harvestStartDate) / this.millisecondsTotal * 100);\n  }\n\n  shouldAnimateProgressBar(id: number): boolean {\n    return this.resourcesService.getResource(id).harvestMilliseconds > this.progressBarUpdateDelay;\n  }\n\n  harvestResource(id: number) {\n    this.resourcesService.harvestResource(id);\n\n    this.harvestStartDate = Date.now();\n\n    if (this.shouldAnimateProgressBar(id)) {\n      this.value = 0;\n    }\n\n    if (!this.resourcesService.canHarvest(id)) {\n      this.stopHarvesting(id);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { ResourcesService } from '../resources/resources.service';\r\nimport { Tile, MapTileType, BuildingTileType, MapTile, BuildingTile } from '../../objects/tile';\r\n\r\ndeclare var require: any;\r\nconst Jimp = require('jimp');\r\nconst baseTiles = require('../../../assets/json/tileTypes.json');\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MapService {\r\n  public mapTiles: MapTile[] = baseTiles.mapTiles;\r\n  public buildingTiles: BuildingTile[] = baseTiles.buildingTiles;\r\n\r\n  mapWidth: number;\r\n  mapHeight: number;\r\n\r\n  public tiledMap: Tile[] = [];\r\n\r\n  walkableMapTiles = [MapTileType.Grass];\r\n\r\n  cameraY = 100;\r\n  cameraX = 100;\r\n  cameraTile: Tile;\r\n\r\n  constructor(protected resourcesService: ResourcesService) {\r\n    const _tiledMap: Tile[] = [];\r\n    const tileTypes = [MapTileType.Grass, MapTileType.Water, MapTileType.Mountain];\r\n    let _mapWidth: number, _mapHeight: number;\r\n\r\n    const xmlRequest = new XMLHttpRequest();\r\n    xmlRequest.onload = function() {\r\n      const xmlDoc = new DOMParser().parseFromString(xmlRequest.responseText, 'text/xml');\r\n      const mapValues = xmlDoc.getElementsByTagName('data')[0].textContent;\r\n      const layerData = xmlDoc.getElementsByTagName('layer')[0];\r\n\r\n      _mapWidth = +layerData.attributes.getNamedItem('width').value;\r\n      _mapHeight = +layerData.attributes.getNamedItem('height').value;\r\n\r\n      mapValues.split(',').map(tileIndex => _tiledMap.push({mapTileType: tileTypes[+tileIndex - 1]}));\r\n    };\r\n\r\n    xmlRequest.open('GET', '../../../assets/tilemap/map.tmx', false);\r\n    xmlRequest.send();\r\n\r\n    this.tiledMap = _tiledMap;\r\n    this.mapWidth = _mapWidth;\r\n    this.mapHeight = _mapHeight;\r\n  }\r\n\r\n  createBuilding(tile: Tile, buildingType: BuildingTileType): boolean {\r\n    const buildingTile = this.buildingTiles[buildingType];\r\n\r\n    if (tile.buildingTileType !== undefined ||\r\n        !buildingTile.buildableSurfaces.some(bs => bs === tile.mapTileType) ||\r\n        !this.canAffordBuilding(buildingTile)) {\r\n      return false;\r\n    }\r\n\r\n    for (const resourceCost of buildingTile.resourceCosts) {\r\n      this.resourcesService.addResourceAmount(resourceCost.resourceId, -resourceCost.resourceCost);\r\n    }\r\n\r\n    tile.buildingTileType = buildingType;\r\n    return true;\r\n  }\r\n\r\n  public canAffordBuilding(buildingTile: BuildingTile): boolean {\r\n    for (const resourceCost of buildingTile.resourceCosts) {\r\n      if (this.resourcesService.getResource(resourceCost.resourceId).amount < resourceCost.resourceCost) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  clearBuilding(tile: Tile) {\r\n    tile.buildingTileType = undefined;\r\n  }\r\n\r\n  getRowCount(): number {\r\n    return this.mapHeight;\r\n  }\r\n\r\n  getColumnCount(): number {\r\n    return this.mapWidth;\r\n  }\r\n\r\n  getTile(x: number, y: number) {\r\n    return this.tiledMap[x + y * this.mapWidth];\r\n  }\r\n\r\n  getMap(clampToWindow: boolean, topLeftX: number, topLeftY: number, windowWidth: number, windowHeight: number): Tile[] {\r\n    if (!clampToWindow) {\r\n      return this.tiledMap;\r\n    }\r\n\r\n    const submap: Tile[] = [];\r\n\r\n    for (let i = topLeftY; i < topLeftY + windowHeight; i++) {\r\n      for (let j = topLeftX; j < topLeftX + windowWidth; j++) {\r\n        submap.push(this.getTile(j, i));\r\n      }\r\n    }\r\n\r\n    return submap;\r\n  }\r\n\r\n  getMapTileSprite(tile: Tile) {\r\n    return this.mapTiles[tile.mapTileType].spritePath;\r\n  }\r\n\r\n  getBuildingTileSprite(tile: Tile) {\r\n    return this.buildingTiles[tile.buildingTileType].spritePath;\r\n  }\r\n\r\n  canMove(newLocationX: number, newLocationY: number): boolean {\r\n    return newLocationX >= 0 && newLocationX < this.mapWidth &&\r\n           newLocationY >= 0 && newLocationY < this.mapHeight;\r\n  }\r\n\r\n  getCameraLocation(): number[] {\r\n    return [this.cameraX, this.cameraY];\r\n  }\r\n\r\n  setCameraLocation(xOffset: number, yOffset: number): boolean {\r\n    const newLocationX = this.cameraX + xOffset;\r\n    const newLocationY = this.cameraY + yOffset;\r\n\r\n    if (!this.canMove(newLocationX, newLocationY)) {\r\n      return false;\r\n    }\r\n\r\n    this.cameraX = newLocationX;\r\n    this.cameraY = newLocationY;\r\n    this.cameraTile = this.getTile(newLocationX, newLocationY);\r\n\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessagesService {\n  messages: string[] = [];\n\n  add (message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Resource, ResourceType } from '../../objects/resource';\r\nimport { MessagesService } from '../messages/messages.service';\r\n\r\ndeclare var require: any;\r\nconst baseResources = require('../../../assets/json/resources.json');\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResourcesService {\r\n  public resources: Resource[] = baseResources;\r\n\r\n  constructor(private messagesService: MessagesService) { }\r\n\r\n  public getResource(id: number): Resource {\r\n    return this.resources.find(resource => resource.id === id);\r\n  }\r\n\r\n  public harvestResource(id: number) {\r\n    const resource = this.getResource(id);\r\n\r\n    if (!resource.harvestable || !this.canHarvest(id)) {\r\n      return;\r\n    }\r\n\r\n    for (const resourceConsume of resource.resourceConsumes) {\r\n      this.addResourceAmount(resourceConsume.resourceId, -resourceConsume.cost);\r\n    }\r\n\r\n    this.resources.filter(r => r.previousTier === resource.resourceTier && r.resourceType === resource.resourceType)\r\n      .map(r => r.resourceAccessible = true);\r\n\r\n    this.addResourceAmount(resource.id, resource.harvestYield);\r\n  }\r\n\r\n  public canHarvest(id: number): boolean {\r\n    const resource = this.getResource(id);\r\n\r\n    if (!resource.harvestable) {\r\n      return false;\r\n    }\r\n\r\n    for (const resourceConsume of resource.resourceConsumes) {\r\n      if (this.getResource(resourceConsume.resourceId).amount < resourceConsume.cost) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public resourcesOfType(resourceType: ResourceType, filterByWorkable: boolean, filterByAccessible: boolean): Resource[] {\r\n    let resources = this.resources.filter(resource => resource.resourceType === resourceType);\r\n\r\n    if (filterByWorkable) {\r\n      resources = resources.filter(resource => resource.worker.workable);\r\n    }\r\n    if (filterByAccessible) {\r\n      resources = resources.filter(resource => resource.resourceAccessible);\r\n    }\r\n\r\n    return resources;\r\n  }\r\n\r\n  public harvestableResources(): Resource[] {\r\n    return this.resources.filter(resource => resource.harvestable);\r\n  }\r\n\r\n  public sellableResources(): Resource[] {\r\n    return this.resources.filter(resource => resource.sellable);\r\n  }\r\n\r\n  public resourceIds(): number[] {\r\n    return this.resources.map(resource => resource.id);\r\n  }\r\n\r\n  public resourceTooltip(id: number, workerCount: number): string {\r\n    const resource = this.getResource(id);\r\n\r\n    if (id === 0) {\r\n      return `${resource.resourceDescription}.`;\r\n    }\r\n\r\n    return `${resource.resourceDescription}. ${resource.harvestYield / resource.harvestMilliseconds * 1000}\r\n     harvested per second; ${resource.workerYield * workerCount} per second from workers.`;\r\n  }\r\n\r\n  public addResourceAmount(id: number, amount: number) {\r\n    this.getResource(id).amount += amount;\r\n  }\r\n\r\n  public canAfford(id: number): boolean {\r\n    return (this.getResource(0).amount >= this.getResource(id).worker.cost);\r\n  }\r\n\r\n  private log(message: string) {\r\n    this.messagesService.add(`ResourcesService: ${message}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\nimport { Resource, ResourceType } from '../../objects/resource';\nimport { ResourcesService } from '../resources/resources.service';\nimport { MessagesService } from '../messages/messages.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreService {\n\n  constructor(private resourcesService: ResourcesService,\n              private messagesService: MessagesService) { }\n\n  public sellResource(id: number, amount: number) {\n    if (!this.canSellResource(id, amount)) {\n      return;\n    }\n\n    const resource = this.resourcesService.getResource(id);\n\n    if (amount === -1) {\n      amount = resource.amount;\n    }\n\n    this.resourcesService.addResourceAmount(resource.id, -amount);\n    this.resourcesService.addResourceAmount(0, amount * resource.sellsFor);\n  }\n\n  public canSellResource(id: number, amount: number): boolean {\n    const resource = this.resourcesService.getResource(id);\n\n    if (amount === -1) {\n      return resource.sellable && resource.amount > 0;\n    }\n\n    return resource.sellable && resource.amount - amount >= 0;\n  }\n\n  public resourcesOfType(resourceType: ResourceType, filterBySellable: boolean, filterByAccessible: boolean) {\n    let resources = this.resourcesService.resources.filter(resource => resource.resourceType === resourceType);\n\n    if (filterBySellable) {\n      resources = resources.filter(resource => resource.sellable);\n    }\n    if (filterByAccessible) {\n      resources = resources.filter(resource => resource.resourceAccessible);\n    }\n\n    return resources;\n  }\n\n  private log(message: string) {\n    this.messagesService.add(`ResourcesService: ${message}`);\n  }\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Upgrade, UpgradeType, UpgradeVariable } from '../../objects/upgrade';\r\nimport { Resource } from '../../objects/resource';\r\nimport { ResourcesService } from '../resources/resources.service';\r\nimport { MessagesService } from '../messages/messages.service';\r\nimport { Tooltip } from '../../objects/tooltip';\r\n\r\ndeclare var require: any;\r\nconst baseUpgrades = require('../../../assets/json/upgrades.json');\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UpgradesService {\r\n  public upgrades = baseUpgrades;\r\n\r\n  constructor(private resourcesService: ResourcesService,\r\n              private messagesService: MessagesService) { }\r\n\r\n  public getUpgrade(id: number): Upgrade {\r\n    return this.upgrades.find(upgrade => upgrade.id === id);\r\n  }\r\n\r\n  public purchaseUpgrade(id: number) {\r\n    const upgrade = this.getUpgrade(id);\r\n\r\n    if (upgrade.purchased || !this.canAffordUpgrade(id)) {\r\n      return;\r\n    }\r\n\r\n    for (const resourceCost of upgrade.resourceCosts) {\r\n      this.resourcesService.addResourceAmount(resourceCost.resourceId, -resourceCost.resourceCost);\r\n    }\r\n\r\n    for (const upgradeEffect of upgrade.upgradeEffects) {\r\n      let resourcesToUpgrade = [this.resourcesService.getResource(upgradeEffect.resourceId)];\r\n\r\n      if (upgradeEffect.upgradeIsForWholeType) {\r\n        resourcesToUpgrade = this.resourcesService.resourcesOfType(upgradeEffect.resourceType, false, false);\r\n      }\r\n\r\n      for (const resourceToUpgrade of resourcesToUpgrade) {\r\n      switch (upgradeEffect.upgradeVariable) {\r\n          case UpgradeVariable.Harvestability: {\r\n            resourceToUpgrade.harvestable = !!upgradeEffect.upgradeFactor;\r\n            break;\r\n          }\r\n          case UpgradeVariable.HarvestYield: {\r\n            resourceToUpgrade.harvestYield *= upgradeEffect.upgradeFactor;\r\n            break;\r\n          }\r\n          case UpgradeVariable.HarvestMilliseconds: {\r\n            resourceToUpgrade.harvestMilliseconds *= upgradeEffect.upgradeFactor;\r\n            break;\r\n          }\r\n          case UpgradeVariable.Workable: {\r\n            resourceToUpgrade.worker.workable = !!upgradeEffect.upgradeFactor;\r\n            break;\r\n          }\r\n          case UpgradeVariable.WorkerYield: {\r\n            resourceToUpgrade.workerYield *= upgradeEffect.upgradeFactor;\r\n            break;\r\n          }\r\n          case UpgradeVariable.WorkerCost: {\r\n            resourceToUpgrade.worker.cost *= upgradeEffect.upgradeFactor;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    upgrade.purchased = true;\r\n  }\r\n\r\n  public canAffordUpgrade(id: number): boolean {\r\n    for (const resourceCost of this.getUpgrade(id).resourceCosts) {\r\n      if (this.resourcesService.getResource(resourceCost.resourceId).amount < resourceCost.resourceCost) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public upgradesOfType(upgradeType: UpgradeType, filterByPurchased: boolean, filterByUnpurchased: boolean, filterByAccessible: boolean) {\r\n    let upgrades = this.upgrades.filter(upgrade => upgrade.upgradeType === upgradeType);\r\n\r\n    if (filterByPurchased) {\r\n      upgrades = upgrades.filter(upgrade => upgrade.purchased);\r\n    }\r\n    if (filterByUnpurchased) {\r\n      upgrades = upgrades.filter(upgrade => !upgrade.purchased);\r\n    }\r\n    if (filterByAccessible) {\r\n      upgrades = upgrades.filter(upgrade => upgrade.resourceCosts.every(\r\n        rc => this.resourcesService.getResource(rc.resourceId).resourceAccessible));\r\n    }\r\n\r\n    return upgrades;\r\n  }\r\n\r\n  public getUpgradeTypeString(id: number): string {\r\n    return UpgradeType[this.getUpgrade(id).upgradeType];\r\n  }\r\n\r\n  public getUpgradeVariableString(upgradeId: number, effectId: number): string {\r\n    return UpgradeVariable[this.getUpgrade(upgradeId).upgradeEffects[effectId].upgradeVariable];\r\n  }\r\n\r\n  private log(message: string) {\r\n    this.messagesService.add(`UpgradesService: ${message}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\nimport { ResourceType } from '../../objects/resource';\nimport { ResourcesService } from '../resources/resources.service';\nimport { Worker, ResourceWorker } from '../../objects/worker';\nimport { MessagesService } from '../messages/messages.service';\n\ndeclare var require: any;\nconst baseWorkers = require('../../../assets/json/workers.json');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkersService {\n  public workers: Worker[] = baseWorkers;\n\n  constructor(protected resourcesService: ResourcesService,\n              protected messagesService: MessagesService) { }\n\n  public getWorkers() {\n    return this.workers;\n  }\n\n  public getWorker(idOrResourceType: number | string | ResourceType) {\n    return typeof idOrResourceType === 'number' ?\n      this.workers[idOrResourceType] :\n      this.workers.find(worker => worker.resourceType === idOrResourceType);\n  }\n\n  public getResourceWorker(resourceId: number): ResourceWorker {\n    const resourceType = this.resourcesService.getResource(resourceId).resourceType;\n    const worker = this.getWorker(resourceType);\n\n    if (worker === undefined) {\n      return null;\n    }\n\n    return worker.workersByResource.find(rw => rw.resourceId === resourceId);\n  }\n\n  canAfford(id: number): boolean {\n    const worker = this.getWorker(id);\n\n    return worker.cost <= this.resourcesService.getResource(0).amount;\n  }\n\n  getResourceTooltipMessage(resourceId: number): string {\n    const resource = this.resourcesService.getResource(resourceId);\n\n    return `${resource.workerVerb} ${resource.workerYield} ${resource.workerNoun}${resource.workerYield === 1 ? '' : 's'} per second.`;\n  }\n\n  processWorkers() {\n    for (const worker of this.workers) {\n      for (const resourceWorker of worker.workersByResource) {\n        if (resourceWorker.workerCount === 0) {\n          continue;\n        }\n\n        this.resourcesService.addResourceAmount(resourceWorker.resourceId, resourceWorker.workerYield * resourceWorker.workerCount);\n      }\n    }\n  }\n\n  hireWorker(id: number) {\n    if (!this.canAfford(id)) {\n      return;\n    }\n\n    const worker = this.getWorker(id);\n\n    this.resourcesService.addResourceAmount(0, -worker.cost);\n\n    worker.cost *= 1.01;\n    worker.workerCount++;\n    worker.freeWorkers++;\n  }\n\n  private log(message: string) {\n    this.messagesService.add(`WorkersService: ${message}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}