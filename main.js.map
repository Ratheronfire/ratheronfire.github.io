{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/admin-debug/admin-debug.component.css","webpack:///./src/app/components/admin-debug/admin-debug.component.html","webpack:///./src/app/components/admin-debug/admin-debug.component.ts","webpack:///./src/app/components/clicker-main/clicker-main.component.css","webpack:///./src/app/components/clicker-main/clicker-main.component.html","webpack:///./src/app/components/clicker-main/clicker-main.component.ts","webpack:///./src/app/components/map/map.component.css","webpack:///./src/app/components/map/map.component.html","webpack:///./src/app/components/map/map.component.ts","webpack:///./src/app/components/messages/messages.component.css","webpack:///./src/app/components/messages/messages.component.html","webpack:///./src/app/components/messages/messages.component.ts","webpack:///./src/app/components/resource-dialog/resource-dialog.component.css","webpack:///./src/app/components/resource-dialog/resource-dialog.component.html","webpack:///./src/app/components/resource-dialog/resource-dialog.component.ts","webpack:///./src/app/components/save-dialog/save-dialog.component.css","webpack:///./src/app/components/save-dialog/save-dialog.component.html","webpack:///./src/app/components/save-dialog/save-dialog.component.ts","webpack:///./src/app/components/settings/settings.component.css","webpack:///./src/app/components/settings/settings.component.html","webpack:///./src/app/components/settings/settings.component.ts","webpack:///./src/app/components/store/store.component.css","webpack:///./src/app/components/store/store.component.html","webpack:///./src/app/components/store/store.component.ts","webpack:///./src/app/components/upgrade-dialog/upgrade-dialog.component.css","webpack:///./src/app/components/upgrade-dialog/upgrade-dialog.component.html","webpack:///./src/app/components/upgrade-dialog/upgrade-dialog.component.ts","webpack:///./src/app/components/upgrades/upgrades.component.css","webpack:///./src/app/components/upgrades/upgrades.component.html","webpack:///./src/app/components/upgrades/upgrades.component.ts","webpack:///./src/app/components/workers/workers.component.css","webpack:///./src/app/components/workers/workers.component.html","webpack:///./src/app/components/workers/workers.component.ts","webpack:///./src/app/directives/crop/crop.directive.ts","webpack:///./src/app/directives/map/map.directive.ts","webpack:///./src/app/directives/no-scroll/no-scroll.directive.ts","webpack:///./src/app/directives/touch/touch.directive.ts","webpack:///./src/app/material-import/material-import.module.ts","webpack:///./src/app/objects/resource.ts","webpack:///./src/app/objects/tile.ts","webpack:///./src/app/objects/upgrade.ts","webpack:///./src/app/pipe/enumtoarraypipe.ts","webpack:///./src/app/pipe/pipe.module.ts","webpack:///./src/app/services/admin/admin.service.ts","webpack:///./src/app/services/clicker-main/clicker-main.service.ts","webpack:///./src/app/services/map/map.service.ts","webpack:///./src/app/services/messages/messages.service.ts","webpack:///./src/app/services/resources/resources.service.ts","webpack:///./src/app/services/settings/settings.service.ts","webpack:///./src/app/services/store/store.service.ts","webpack:///./src/app/services/tooltip/tooltip.service.ts","webpack:///./src/app/services/upgrades/upgrades.service.ts","webpack:///./src/app/services/workers/workers.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,iEAAiE,uBAAuB,kBAAkB,uBAAuB,KAAK,QAAQ,qBAAqB,oBAAoB,qBAAqB,KAAK,WAAW,wBAAwB,4BAA4B,uBAAuB,4BAA4B,6BAA6B,yBAAyB,KAAK,2BAA2B,qBAAqB,KAAK,iBAAiB,qBAAqB,gCAAgC,KAAK,kBAAkB,qBAAqB,KAAK,gBAAgB,kBAAkB,KAAK,gBAAgB,wBAAwB,KAAK,iBAAiB,mBAAmB,KAAK,K;;;;;;;;;;;ACAvqB,g2B;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AAE6B;AAOvE;IAIE,sBAAsB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAHtD,UAAK,GAAG,cAAc,CAAC;QACvB,cAAS,GAAG,IAAI,CAAC;IAGjB,CAAC;IAED,sBAAI,gDAAsB;aAA1B;YAAA,iBAKC;YAJC,IAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACrE,IAAM,kBAAkB,GAAG,QAAQ,CAAC,MAAM,CAAC,iBAAO,IAAI,YAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAAE,CAAC,EAAjD,CAAiD,CAAC,CAAC;YAEzG,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC;QACnC,CAAC;;;OAAA;IAZU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAKuC,mFAAe;OAJ3C,YAAY,CAaxB;IAAD,mBAAC;CAAA;AAbwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTgB;AACiB;AACQ;AACa;AACX;AAEY;AAC1B;AAEP;AACyC;AACX;AACH;AACN;AACS;AACf;AACe;AACQ;AACY;AACH;AACT;AACjB;AACH;AACH;AACiB;AAsC/E;IAAA;IAAyB,CAAC;IAAb,SAAS;QApCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,iFAAuB;gBACvB,oGAAoB;gBACpB,yFAAiB;gBACjB,uFAAgB;gBAChB,iFAAc;gBACd,0FAAiB;gBACjB,0FAAiB;gBACjB,kGAAmB;gBACnB,2EAAY;gBACZ,8GAAuB;gBACvB,2GAAsB;gBACtB,iFAAc;gBACd,8EAAa;gBACb,kGAAmB;gBACnB,2EAAY;gBACZ,4FAAiB;aAClB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,kEAAmB;gBACnB,4FAAuB;gBACvB,4FAAoB;gBACpB,mEAAU;aACX;YACD,eAAe,EAAE;gBACf,8GAAuB;gBACvB,2GAAsB;gBACtB,kGAAmB;aACpB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC9DtB,mB;;;;;;;;;;;ACAA,2fAA2f,2BAA2B,8ZAA8Z,mCAAmC,iHAAiH,mCAAmC,4lB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzjC;AAEgB;AACY;AAGN;AACG;AAO3E;IAME,6BACY,gBAAkC,EAClC,cAA8B,EAC9B,eAAgC,EAChC,YAA0B;QAH1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAc;QAT/B,qBAAgB,GAAG,IAAI,CAAC;IAU5B,CAAC;IAEJ,sCAAQ,GAAR,cAAY,CAAC;IAEb,gDAAkB,GAAlB;QACE,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC;IACzC,CAAC;IAED,+CAAiB,GAAjB;QACE,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC;IACxC,CAAC;IAED,+CAAiB,GAAjB,UAAkB,gBAA0B;QAC1C,EAAE,CAAC,CAAC,gBAAgB,KAAK,SAAS,CAAC,CAAC,CAAC;YACnC,GAAG,CAAC,CAAmB,UAA+B,EAA/B,SAAI,CAAC,gBAAgB,CAAC,SAAS,EAA/B,cAA+B,EAA/B,IAA+B;gBAAjD,IAAM,QAAQ;gBACjB,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACpE;YAED,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CACrC,CAAC,gBAAgB,CAAC,EAAE,EACpB,CAAC,IAAI,CAAC,MAAM,CACb,CAAC;IACJ,CAAC;IAED,oDAAsB,GAAtB,UAAuB,QAAkB;QACvC,QAAQ,CAAC,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC;QAE3B,QAAQ,CAAC,MAAM,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC;QAEnC,GAAG,CAAC,CAA0B,UAAyB,EAAzB,aAAQ,CAAC,gBAAgB,EAAzB,cAAyB,EAAzB,IAAyB;YAAlD,IAAM,eAAe;YACxB,eAAe,CAAC,UAAU,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC;YACzD,eAAe,CAAC,IAAI,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC;SAC9C;QAED,QAAQ,CAAC,YAAY,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC;QAC/C,QAAQ,CAAC,mBAAmB,GAAG,CAAC,QAAQ,CAAC,mBAAmB,CAAC;QAE7D,QAAQ,CAAC,WAAW,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC;QAC7C,QAAQ,CAAC,QAAQ,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC;QAEvC,QAAQ,CAAC,YAAY,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC;QAC/C,QAAQ,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,YAAY,GAAG,CAAC,CAAC;QACpF,QAAQ,CAAC,kBAAkB,GAAG,QAAQ,CAAC,YAAY,KAAK,CAAC,CAAC;QAE1D,QAAQ,CAAC,MAAM,CAAC,WAAW,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC;QAC3D,QAAQ,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC;QAE7C,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QACpB,QAAQ,CAAC,kBAAkB,GAAG,QAAQ,CAAC,YAAY,KAAK,CAAC,CAAC;IAC5D,CAAC;IAED,kDAAoB,GAApB,UAAqB,MAAc;QACjC,MAAM,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;QAEvB,MAAM,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;QAE3B,GAAG,CAAC,CAAyB,UAAwB,EAAxB,WAAM,CAAC,iBAAiB,EAAxB,cAAwB,EAAxB,IAAwB;YAAhD,IAAM,cAAc;YACvB,cAAc,CAAC,UAAU,GAAG,CAAC,cAAc,CAAC,UAAU,CAAC;YAEvD,cAAc,CAAC,WAAW,GAAG,CAAC,cAAc,CAAC,WAAW,CAAC;YACzD,cAAc,CAAC,WAAW,GAAG,CAAC,cAAc,CAAC,WAAW,CAAC;SAC1D;QAED,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC;QACvB,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC;IACzB,CAAC;IAED,+CAAiB,GAAjB,UAAkB,QAAkB;QAClC,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;QAEtC,IAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAC9C,KAAK,CAAC,YAAY,CAAC,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAC5B,CAAC;IAED,gDAAkB,GAAlB;QACE,GAAG,CAAC,CAAmB,UAA+B,EAA/B,SAAI,CAAC,gBAAgB,CAAC,SAAS,EAA/B,cAA+B,EAA/B,IAA+B;YAAjD,IAAM,QAAQ;YACjB,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;SACvC;QAED,IAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;QACtE,KAAK,CAAC,aAAa,CAAC,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC7B,CAAC;IAED,8CAAgB,GAAhB;QACE,GAAG,CAAC,CAAiB,UAA2B,EAA3B,SAAI,CAAC,cAAc,CAAC,OAAO,EAA3B,cAA2B,EAA3B,IAA2B;YAA3C,IAAM,MAAM;YACf,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;SACnC;QAED,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAChE,KAAK,CAAC,WAAW,CAAC,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC3B,CAAC;IAED,+CAAiB,GAAjB;QACE,IAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;QACnE,KAAK,CAAC,YAAY,CAAC,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAC5B,CAAC;IAjHU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAQ8B,sFAAgB;YAClB,gFAAc;YACb,mFAAe;YAClB,0EAAY;OAV3B,mBAAmB,CAkH/B;IAAD,0BAAC;CAAA;AAlH+B;;;;;;;;;;;;ACdhC,iFAAiF,wBAAwB,4BAA4B,iBAAiB,kBAAkB,KAAK,oCAAoC,gBAAgB,KAAK,2CAA2C,8BAA8B,KAAK,kCAAkC,yBAAyB,gBAAgB,kBAAkB,wBAAwB,KAAK,iCAAiC,yBAAyB,sBAAsB,mBAAmB,sBAAsB,oBAAoB,kBAAkB,yBAAyB,KAAK,uCAAuC,iBAAiB,KAAK,8CAA8C,sBAAsB,KAAK,uBAAuB,4BAA4B,uBAAuB,mBAAmB,mCAAmC,gCAAgC,uBAAuB,yBAAyB,kBAAkB,eAAe,oBAAoB,sBAAsB,yBAAyB,yBAAyB,iCAAiC,KAAK,uBAAuB,yBAAyB,KAAK,uBAAuB,yBAAyB,gBAAgB,iBAAiB,KAAK,sBAAsB,6BAA6B,mBAAmB,wBAAwB,yBAAyB,sBAAsB,mBAAmB,yBAAyB,KAAK,uBAAuB,oBAAoB,4BAA4B,0BAA0B,uBAAuB,eAAe,6BAA6B,mBAAmB,KAAK,mBAAmB,yBAAyB,iBAAiB,cAAc,KAAK,K;;;;;;;;;;;ACAzrD,0QAA0Q,cAAc,idAAid,gCAAgC,8DAA8D,4BAA4B,kDAAkD,kCAAkC,yPAAyP,mBAAmB,WAAW,eAAe,0HAA0H,2BAA2B,wKAAwK,2BAA2B,iG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlgD;AAEqC;AACV;AACd;AACQ;AACE;AACZ;AACM;AAOpE;IAGE,8BAAsB,kBAAsC,EACtC,gBAAkC,EAClC,cAA8B,EAC9B,cAA8B,EAC9B,UAAsB,EACtB,YAA0B;QAL1B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,eAAU,GAAV,UAAU,CAAY;QACtB,iBAAY,GAAZ,YAAY,CAAc;QAPhD,kBAAa,GAAG,8DAAY,CAAC;IAOuB,CAAC;IAErD,uCAAQ,GAAR;IACA,CAAC;IAED,8CAAe,GAAf,UAAgB,YAAoB,EAAE,kBAA2B;QAC/D,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,kBAAkB,CAAC,CAAC;IAC5G,CAAC;IAEM,gDAAiB,GAAxB,UAAyB,EAAU;QACjC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;IACpD,CAAC;IAED,yCAAU,GAAV,UAAW,EAAU;QACnB,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;IACxF,CAAC;IAED,8CAAe,GAAf,UAAgB,EAAU;QACxB,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED,6CAAc,GAAd,UAAe,EAAU;QACvB,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;IAC7C,CAAC;IAED,uDAAwB,GAAxB,UAAyB,EAAU;QACjC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED,8CAAe,GAAf,UAAgB,EAAU;QACxB,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED,2CAAY,GAAZ,UAAa,EAAU;QACrB,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;IAC3C,CAAC;IA3CU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAI0C,8FAAkB;YACpB,sFAAgB;YAClB,gFAAc;YACd,gFAAc;YAClB,oEAAU;YACR,0EAAY;OARrC,oBAAoB,CA4ChC;IAAD,2BAAC;CAAA;AA5CgC;;;;;;;;;;;;ACfjC,kCAAkC,oBAAoB,wBAAwB,yBAAyB,oBAAoB,KAAK,wBAAwB,yBAAyB,KAAK,4BAA4B,4BAA4B,KAAK,4BAA4B,kBAAkB,mBAAmB,KAAK,gBAAgB,oBAAoB,KAAK,K;;;;;;;;;;;ACAlW,geAAge,mBAAmB,gDAAgD,0BAA0B,iVAAiV,2BAA2B,GAAG,uDAAuD,6DAA6D,+CAA+C,WAAW,2CAA2C,MAAM,2BAA2B,+G;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhkC;AAEN;AACpC;AACM;AACY;AAU9E;IAIE,sBAAsB,UAAsB,EACtB,gBAAkC,EAClC,YAA0B;QAF1B,eAAU,GAAV,UAAU,CAAY;QACtB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;QALhD,iBAAY,GAAG,yDAAW,CAAC;QAC3B,sBAAiB,GAAG,8DAAgB,CAAC;IAIe,CAAC;IAErD,+BAAQ,GAAR;IACA,CAAC;IAED,sCAAe,GAAf;IACA,CAAC;IAED,qCAAc,GAAd,UAAe,YAA0B;QACvC,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,KAAK,YAAY,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;QACpC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC;QACvC,CAAC;IACH,CAAC;IAED,wCAAiB,GAAjB,UAAkB,YAA8B;QAC9C,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,qCAAc,GAAd,UAAe,IAAU,EAAE,YAA8B;QACvD,IAAM,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7E,CAAC;IAED,oCAAa,GAAb,UAAc,IAAU;QACtB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAED,sBAAI,uCAAa;aAAjB;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QACvC,CAAC;;;OAAA;IAED,2CAAoB,GAApB,UAAqB,iBAA0B;QAC7C,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC;QAE9C,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACtB,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,CAAC,SAAS,EAAd,CAAc,CAAC,CAAC;QAC/C,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,kCAAW,GAAX,UAAY,UAAkB;QAC5B,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC;IAED,sBAAI,oCAAU;aAAd;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;QACpC,CAAC;aAED,UAAe,KAAK;YAClB,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,KAAK,CAAC;QACrC,CAAC;;;OAJA;IAMD,sBAAI,0CAAgB;aAApB;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC;QAC1C,CAAC;aAED,UAAqB,KAAK;YACxB,IAAI,CAAC,UAAU,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC3C,CAAC;;;OAJA;IAMD,sBAAI,kCAAQ;aAAZ;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QACvC,CAAC;;;OAAA;IAED,sBAAI,qCAAW;aAAf;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;QAC1C,CAAC;;;OAAA;IA1EU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;;;SAGpB,CAAC;yCAKkC,oEAAU;YACJ,sFAAgB;YACpB,0EAAY;OANrC,YAAY,CA2ExB;IAAD,mBAAC;CAAA;AA3EwB;;;;;;;;;;;;ACfzB,sEAAsE,iBAAiB,gDAAgD,2BAA2B,KAAK,UAAU,kBAAkB,KAAK,+BAA+B,qBAAqB,oCAAoC,KAAK,kBAAkB,yBAAyB,6BAA6B,mBAAmB,wBAAwB,yBAAyB,sBAAsB,mBAAmB,KAAK,kBAAkB,gCAAgC,KAAK,qBAAqB,6BAA6B,kBAAkB,mBAAmB,KAAK,kBAAkB,kBAAkB,0BAA0B,KAAK,C;;;;;;;;;;;ACArrB,mPAAmP,SAAS,2B;;;;;;;;;;;;;;;;;;;;;;;;;ACA1M;AACyB;AAO3E;IAEE,2BAAmB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAAI,CAAC;IAExD,oCAAQ,GAAR,cAAa,CAAC;IAJH,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAGoC,mFAAe;OAFxC,iBAAiB,CAM7B;IAAD,wBAAC;CAAA;AAN6B;;;;;;;;;;;;ACR9B,+BAA+B,kBAAkB,KAAK,uBAAuB,yBAAyB,eAAe,iBAAiB,KAAK,K;;;;;;;;;;;ACA3I,saAAsa,aAAa,iBAAiB,2BAA2B,imBAAimB,6BAA6B,iBAAiB,cAAc,ujCAAujC,cAAc,qBAAqB,6BAA6B,8xFAA8xF,eAAe,uT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAt+J;AACU;AACF;AAEe;AACH;AAEN;AAOxE;IAkCE,iCACY,gBAAkC,EAClC,cAA8B,EAC9B,YAAyB,EAC5B,SAAgD,EACvB,IAAS;QAJ/B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAa;QAC5B,cAAS,GAAT,SAAS,CAAuC;QACvB,SAAI,GAAJ,IAAI,CAAK;QAtC3C,aAAQ,GAAa;YACnB,EAAE,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM;YAC1C,IAAI,EAAE,EAAE;YACR,YAAY,EAAE,8DAAY,CAAC,QAAQ;YACnC,MAAM,EAAE,CAAC;YACT,gBAAgB,EAAE,CAAC;YACnB,QAAQ,EAAE,EAAE;YACZ,gBAAgB,EAAE,EAAE;YACpB,gBAAgB,EAAE,CAAC;YACnB,WAAW,EAAE,IAAI;YACjB,UAAU,EAAE,KAAK;YACjB,gBAAgB,EAAE,IAAI,CAAC,GAAG,EAAE;YAC5B,YAAY,EAAE,CAAC;YACf,mBAAmB,EAAE,IAAI;YACzB,WAAW,EAAE,CAAC;YACd,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,CAAC;YACX,mBAAmB,EAAE,EAAE;YACvB,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;YACd,kBAAkB,EAAE,IAAI;YACxB,YAAY,EAAE,CAAC;YACf,YAAY,EAAE,CAAC;YACf,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;SACrD,CAAC;QACF,mBAAc,GAAmB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAE1E,aAAQ,GAAG,KAAK,CAAC;QAEjB,kBAAa,GAAG,CAAC,CAAC;QAElB,kBAAa,GAAG,8DAAY,CAAC;IAOiB,CAAC;IAG/C,0CAAQ,GAAR;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACxE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAE9E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC;IACH,CAAC;IAED,kDAAgB,GAAhB;QACE,IAAM,UAAU,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;QACvC,IAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAElE,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;QACtC,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC;QACtD,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;QACpD,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC;QACtD,IAAI,CAAC,QAAQ,CAAC,mBAAmB,GAAG,WAAW,CAAC,mBAAmB,CAAC;QACpE,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;QACpD,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,mBAAmB,GAAG,WAAW,CAAC,mBAAmB,CAAC;QACpE,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,WAAW,CAAC,UAAU,CAAC;QAClD,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,WAAW,CAAC,UAAU,CAAC;QAClD,IAAI,CAAC,QAAQ,CAAC,kBAAkB,GAAG,WAAW,CAAC,kBAAkB,CAAC;QAClE,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC;QACtD,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC;QAEtD,GAAG,CAAC,CAA0B,UAA4B,EAA5B,gBAAW,CAAC,gBAAgB,EAA5B,cAA4B,EAA5B,IAA4B;YAArD,IAAM,eAAe;YACxB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC;gBAClC,UAAU,EAAE,eAAe,CAAC,UAAU;gBACtC,IAAI,EAAE,eAAe,CAAC,IAAI;aAC3B,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG;YACrB,QAAQ,EAAE,WAAW,CAAC,MAAM,CAAC,QAAQ;YACrC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,WAAW;YAC3C,IAAI,EAAE,WAAW,CAAC,MAAM,CAAC,IAAI;SAC9B,CAAC;QAEF,IAAI,CAAC,cAAc,GAAG;YACpB,UAAU,EAAE,UAAU;YACtB,QAAQ,EAAE,IAAI;YACd,WAAW,EAAE,CAAC;YACd,WAAW,EAAE,CAAC;YACd,aAAa,EAAE,CAAC;YAChB,kBAAkB,EAAE,IAAI;SACzB,CAAC;IACJ,CAAC;IAED,2CAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,oDAAkB,GAAlB;QACE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,EAAC,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAC,CAAC;IACnG,CAAC;IAED,uDAAqB,GAArB,UAAsB,eAAgC;QACpD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAC,YAAE,IAAI,SAAE,KAAK,eAAe,EAAtB,CAAsB,CAAC,CAAC;IACvG,CAAC;IAED,sDAAoB,GAApB;QAAA,iBAeC;QAdC,IAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QAEzE,EAAE,CAAC,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,yBAAuB,IAAI,CAAC,QAAQ,CAAC,YAAc,CAAC,CAAC;YACjE,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;QAElD,IAAM,eAAe,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAEjD,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,CAAC,YAAE,IAAI,SAAE,KAAK,KAAI,CAAC,cAAc,EAA1B,CAA0B,CAAC,CAAC,CAAC,CAAC;YAC5D,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC5C,CAAC;IACH,CAAC;IAED,8CAAY,GAAZ;QACE,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAE5B,IAAI,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAE3E,EAAE,CAAC,CAAC,gBAAgB,KAAK,SAAS,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC;QACnC,CAAC;IACH,CAAC;IAED,2CAAS,GAAT,UAAU,KAAa,EAAE,KAAa;QACpC,MAAM,CAAC,CAAC,KAAK,KAAK,CAAC,KAAK,CAAC;IAC3B,CAAC;IA1IU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;QAwCG,uEAAM,CAAC,iEAAe,CAAC;yCAJI,sFAAgB;YAClB,gFAAc;YAChB,0DAAW;YACjB,8DAAY;OAtCrB,uBAAuB,CA2InC;IAAD,8BAAC;CAAA;AA3ImC;;;;;;;;;;;;ACdpC,+BAA+B,kBAAkB,KAAK,K;;;;;;;;;;;ACAtD,mhBAAmhB,UAAU,mR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAne;AACQ;AAEzB;AAOzC;IAKE,6BAAmB,SAA4C,EACnB,IAAS;QADlC,cAAS,GAAT,SAAS,CAAmC;QACnB,SAAI,GAAJ,IAAI,CAAK;QAJrD,eAAU,GAAG,KAAK,CAAC;IAIsC,CAAC;IAE1D,sCAAQ,GAAR;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YACnC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAI,CAAC,SAAS,GAAG,IAAI,sCAAW,CAAC,cAAc,CAAC,CAAC;QACnD,CAAC;IACH,CAAC;IAED,wCAAU,GAAV;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,uCAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAvBU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;QAOa,uEAAM,CAAC,iEAAe,CAAC;yCADN,8DAAY;OAL/B,mBAAmB,CAwB/B;IAAD,0BAAC;CAAA;AAxB+B;;;;;;;;;;;;ACVhC,mB;;;;;;;;;;;ACAA,ymC;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAEyB;AAO3E;IACE,2BAAsB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAAI,CAAC;IAE3D,oCAAQ,GAAR;IACA,CAAC;IAED,uCAAW,GAAX;QACE,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;IACrC,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IAClC,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IAClC,CAAC;IAED,sCAAU,GAAV;QACE,EAAE,CAAC,CAAC,OAAO,CAAC,4CAA4C,CAAC,CAAC,CAAC,CAAC;YAC1D,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC;QACpC,CAAC;IACH,CAAC;IAED,sCAAU,GAAV;QACE,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC,CAAC;IACzE,CAAC;IAED,sCAAU,GAAV;QACE,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;QACtC,8DAA8D;IAChE,CAAC;IAED,sBAAI,+CAAgB;aAApB;YACE,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC;QAC/C,CAAC;aAED,UAAqB,KAAa;YAChC,IAAI,CAAC,eAAe,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChD,CAAC;;;OAJA;IAnCU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAEuC,mFAAe;OAD3C,iBAAiB,CAwC7B;IAAD,wBAAC;CAAA;AAxC6B;;;;;;;;;;;;ACT9B,uEAAuE,wBAAwB,4BAA4B,iBAAiB,kBAAkB,KAAK,gCAAgC,gBAAgB,KAAK,uCAAuC,8BAA8B,KAAK,8BAA8B,yBAAyB,gBAAgB,kBAAkB,KAAK,qBAAqB,yBAAyB,sBAAsB,6BAA6B,mBAAmB,sBAAsB,oBAAoB,yBAAyB,KAAK,2BAA2B,qBAAqB,6BAA6B,iBAAiB,KAAK,cAAc,kBAAkB,4BAA4B,yBAAyB,qBAAqB,mBAAmB,KAAK,oBAAoB,oBAAoB,KAAK,yBAAyB,qCAAqC,KAAK,+BAA+B,uCAAuC,KAAK,mBAAmB,4BAA4B,uBAAuB,mBAAmB,mCAAmC,gCAAgC,uBAAuB,yBAAyB,kBAAkB,eAAe,oBAAoB,sBAAsB,yBAAyB,yBAAyB,iCAAiC,KAAK,YAAY,yBAAyB,iBAAiB,eAAe,KAAK,YAAY,uBAAuB,mBAAmB,yBAAyB,KAAK,kBAAkB,gCAAgC,KAAK,mBAAmB,yBAAyB,kBAAkB,iBAAiB,wCAAwC,mBAAmB,KAAK,C;;;;;;;;;;;ACA/qD,qQAAqQ,cAAc,oSAAoS,mBAAmB,oDAAoD,4BAA4B,kvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxmB;AAEc;AACc;AACZ;AACA;AAOlE;IAGE,wBAAoB,gBAAkC,EAClC,YAA0B,EAC1B,YAA0B;QAF1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAc;QAJ9C,kBAAa,GAAG,8DAAY,CAAC;IAIqB,CAAC;IAEnD,iCAAQ,GAAR;IACA,CAAC;IAED,wCAAe,GAAf,UAAgB,EAAU,EAAE,MAAc;QACxC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;IACvD,CAAC;IAED,wCAAe,GAAf,UAAgB,YAAoB,EAAE,gBAAyB,EAAE,kBAAkB;QACjF,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;IACnH,CAAC;IAED,qCAAY,GAAZ,UAAa,EAAU,EAAE,MAAc;QACrC,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEvD,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;IAC7C,CAAC;IAtBU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAIsC,sFAAgB;YACpB,0EAAY;YACZ,0EAAY;OALnC,cAAc,CAuB1B;IAAD,qBAAC;CAAA;AAvB0B;;;;;;;;;;;;ACZ3B,+BAA+B,kBAAkB,KAAK,uBAAuB,yBAAyB,eAAe,iBAAiB,KAAK,K;;;;;;;;;;;ACA3I,+ZAA+Z,YAAY,iBAAiB,0BAA0B,4cAA4c,2BAA2B,iBAAiB,aAAa,41CAA41C,6BAA6B,uBAAuB,cAAc,0lBAA0lB,aAAa,uBAAuB,2BAA2B,kWAAkW,mCAAmC,qBAAqB,iBAAiB,mTAAmT,2CAA2C,8tCAA8tC,aAAa,qBAAqB,2BAA2B,ggBAAggB,cAAc,qT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1gL;AAEb;AACqB;AACX;AACuB;AAC6B;AAChC;AAQ3E;IAmBE,gCAAsB,gBAAkC,EAClC,eAAgC,EAChC,YAAyB,EAC5B,SAAgD,EACvB,IAAS;QAJ/B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAa;QAC5B,cAAS,GAAT,SAAS,CAAuC;QACvB,SAAI,GAAJ,IAAI,CAAK;QAtBrD,YAAO,GAAY;YACjB,EAAE,EAAE,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM;YACxC,WAAW,EAAE,4DAAW,CAAC,QAAQ;YACjC,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,EAAE;YACf,cAAc,EAAE,EAAE;YAClB,aAAa,EAAE,EAAE;YACjB,SAAS,EAAE,KAAK;SACjB,CAAC;QAEF,aAAQ,GAAG,KAAK,CAAC;QAEjB,kBAAa,GAAG,8DAAY,CAAC;QAC7B,iBAAY,GAAG,4DAAW,CAAC;QAC3B,qBAAgB,GAAG,gEAAe,CAAC;IAQsB,CAAC;IAE1D,yCAAQ,GAAR;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAExC,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC;YAEpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC;IACH,CAAC;IAED,gDAAe,GAAf;QACE,IAAM,SAAS,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QACrC,IAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAE9D,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;QAClD,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;QAClD,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC;QAE/B,GAAG,CAAC,CAAwB,UAAyB,EAAzB,eAAU,CAAC,cAAc,EAAzB,cAAyB,EAAzB,IAAyB;YAAhD,IAAM,aAAa;YACtB,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC;gBAC/B,qBAAqB,EAAE,aAAa,CAAC,qBAAqB;gBAC1D,YAAY,EAAE,aAAa,CAAC,YAAY;gBACxC,UAAU,EAAE,aAAa,CAAC,UAAU;gBACpC,eAAe,EAAE,aAAa,CAAC,eAAe;gBAC9C,aAAa,EAAE,aAAa,CAAC,aAAa;aAC3C,CAAC,CAAC;SACJ;QAED,GAAG,CAAC,CAAuB,UAAwB,EAAxB,eAAU,CAAC,aAAa,EAAxB,cAAwB,EAAxB,IAAwB;YAA9C,IAAM,YAAY;YACrB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC;gBAC9B,UAAU,EAAE,YAAY,CAAC,UAAU;gBACnC,YAAY,EAAE,YAAY,CAAC,YAAY;aACxC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,0CAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,iDAAgB,GAAhB;QACE,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG;YAChE,qBAAqB,EAAE,KAAK;YAC5B,UAAU,EAAE,CAAC;YACb,eAAe,EAAE,gEAAe,CAAC,cAAc;YAC/C,aAAa,EAAE,CAAC;SACjB,CAAC;IACJ,CAAC;IAED,oDAAmB,GAAnB,UAAoB,aAA4B;QAC9C,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,YAAE,IAAI,SAAE,KAAK,aAAa,EAApB,CAAoB,CAAC,CAAC;IAC/F,CAAC;IAED,gDAAe,GAAf;QACE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG;YAC9D,UAAU,EAAE,CAAC;YACb,YAAY,EAAE,CAAC;SAChB,CAAC;IACJ,CAAC;IAED,mDAAkB,GAAlB,UAAmB,YAA0B;QAC3C,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,YAAE,IAAI,SAAE,KAAK,YAAY,EAAnB,CAAmB,CAAC,CAAC;IAC5F,CAAC;IAED,4CAAW,GAAX;QACE,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;QAEnC,GAAG,CAAC,CAAwB,UAA2B,EAA3B,SAAI,CAAC,OAAO,CAAC,cAAc,EAA3B,cAA2B,EAA3B,IAA2B;YAAlD,IAAM,aAAa;YACtB,EAAE,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC7B,aAAa,CAAC,UAAU,GAAG,CAAC,aAAa,CAAC,UAAU,CAAC;YACvD,CAAC;YACD,EAAE,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC1B,aAAa,CAAC,OAAO,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC;YACjD,CAAC;YAED,aAAa,CAAC,aAAa,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC;SAC5D;QAED,GAAG,CAAC,CAAuB,UAA0B,EAA1B,SAAI,CAAC,OAAO,CAAC,aAAa,EAA1B,cAA0B,EAA1B,IAA0B;YAAhD,IAAM,YAAY;YACrB,YAAY,CAAC,UAAU,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC;YACnD,YAAY,CAAC,YAAY,GAAG,CAAC,YAAY,CAAC,YAAY,CAAC;SACxD;QAED,IAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAEzE,EAAE,CAAC,CAAC,eAAe,KAAK,SAAS,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YACxE,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;QACzD,CAAC;IACH,CAAC;IAED,0CAAS,GAAT,UAAU,KAAa,EAAE,KAAa;QACpC,MAAM,CAAC,CAAC,KAAK,KAAK,CAAC,KAAK,CAAC;IAC3B,CAAC;IA1HU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;QAwBa,uEAAM,CAAC,iEAAe,CAAC;yCAJI,sFAAgB;YACjB,mFAAe;YAClB,0DAAW;YACjB,8DAAY;OAtB/B,sBAAsB,CA2HlC;IAAD,6BAAC;CAAA;AA3HkC;;;;;;;;;;;;ACfnC,6EAA6E,wBAAwB,4BAA4B,iBAAiB,qBAAqB,QAAQ,mCAAmC,gBAAgB,KAAK,0CAA0C,8BAA8B,KAAK,iCAAiC,yBAAyB,gBAAgB,kBAAkB,wBAAwB,KAAK,sBAAsB,yBAAyB,sBAAsB,mBAAmB,sBAAsB,oBAAoB,kBAAkB,yBAAyB,KAAK,4BAA4B,iBAAiB,KAAK,mCAAmC,sBAAsB,KAAK,sBAAsB,4BAA4B,uBAAuB,mBAAmB,mCAAmC,gCAAgC,uBAAuB,yBAAyB,kBAAkB,eAAe,oBAAoB,sBAAsB,yBAAyB,yBAAyB,iCAAiC,KAAK,YAAY,6BAA6B,mBAAmB,wBAAwB,yBAAyB,sBAAsB,mBAAmB,yBAAyB,KAAK,eAAe,yBAAyB,KAAK,cAAc,4BAA4B,uBAAuB,KAAK,oBAAoB,yBAAyB,KAAK,wBAAwB,4BAA4B,KAAK,wBAAwB,kBAAkB,mBAAmB,KAAK,K;;;;;;;;;;;ACArhD,8lBAA8lB,cAAc,mEAAmE,kDAAkD,sDAAsD,qBAAqB,wHAAwH,2BAA2B,GAAG,uDAAuD,oEAAoE,+CAA+C,WAAW,2CAA2C,MAAM,2BAA2B,6JAA6J,0BAA0B,+C;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAx0C;AAG4B;AACH;AACA;AACT;AAOlE;IAIE,2BAAoB,gBAAkC,EAClC,eAAgC,EAChC,YAA0B;QAF1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAc;QAL9C,iBAAY,GAAG,4DAAW,CAAC;QAC3B,kBAAa,GAAG,IAAI,CAAC;IAI6B,CAAC;IAEnD,oCAAQ,GAAR;IACA,CAAC;IAED,4CAAgB,GAAhB,UAAiB,EAAU;QACzB,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;IACnD,CAAC;IAED,uCAAW,GAAX,UAAY,iBAA0B,EAAE,mBAA4B,EAAE,kBAA2B;QAC/F,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,iBAAiB,EAAE,mBAAmB,EAAE,kBAAkB,CAAC,CAAC;IACtG,CAAC;IAED,0CAAc,GAAd,UAAe,WAAmB,EAAE,iBAA0B,EAAE,mBAA4B,EAAE,kBAA2B;QACvH,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,kBAAkB,CAAC,CAAC;IACzI,CAAC;IAED,2CAAe,GAAf,UAAgB,EAAU;QACxB,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED,8CAAkB,GAAlB,UAAmB,EAAU;QAC3B,IAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAEpD,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC,YAAY,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtD,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC;QAED,MAAM,CAAC,WAAW,CAAC;IACrB,CAAC;IAED,uCAAW,GAAX,UAAY,EAAU;QACpB,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED,uCAAW,GAAX,UAAY,UAAkB;QAC5B,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC;IA7CU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAKsC,sFAAgB;YACjB,mFAAe;YAClB,0EAAY;OANnC,iBAAiB,CA8C7B;IAAD,wBAAC;CAAA;AA9C6B;;;;;;;;;;;;ACb9B,2EAA2E,wBAAwB,4BAA4B,iBAAiB,kBAAkB,KAAK,kCAAkC,gBAAgB,KAAK,yCAAyC,8BAA8B,KAAK,6BAA6B,uBAAuB,KAAK,gCAAgC,yBAAyB,gBAAgB,kBAAkB,KAAK,yBAAyB,kBAAkB,iBAAiB,KAAK,uBAAuB,yBAAyB,sBAAsB,mBAAmB,sBAAsB,oBAAoB,kBAAkB,yBAAyB,KAAK,qBAAqB,yBAAyB,sBAAsB,mBAAmB,sBAAsB,oBAAoB,kBAAkB,yBAAyB,KAAK,2BAA2B,qBAAqB,6BAA6B,iBAAiB,KAAK,gBAAgB,kBAAkB,4BAA4B,yBAAyB,qBAAqB,mBAAmB,KAAK,sBAAsB,oBAAoB,KAAK,2BAA2B,qCAAqC,KAAK,iCAAiC,uCAAuC,KAAK,qBAAqB,4BAA4B,uBAAuB,mBAAmB,mCAAmC,gCAAgC,uBAAuB,yBAAyB,kBAAkB,eAAe,oBAAoB,sBAAsB,yBAAyB,yBAAyB,iCAAiC,KAAK,YAAY,6BAA6B,mBAAmB,wBAAwB,yBAAyB,sBAAsB,mBAAmB,yBAAyB,KAAK,kBAAkB,gCAAgC,KAAK,mBAAmB,yBAAyB,kBAAkB,iBAAiB,wCAAwC,mBAAmB,KAAK,K;;;;;;;;;;;ACA3/D,0PAA0P,iCAAiC,+RAA+R,oBAAoB,YAAY,oBAAoB,sDAAsD,sBAAsB,sOAAsO,8CAA8C,yEAAyE,0EAA0E,kDAAkD,4BAA4B,YAAY,8BAA8B,0d;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvqC;AAEc;AACc;AAEN;AACE;AACR;AAOlE;IAGE,0BAAsB,gBAAkC,EAClC,cAA8B,EAC9B,cAA8B,EAC9B,YAA0B;QAH1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QALhD,kBAAa,GAAG,8DAAY,CAAC;IAKuB,CAAC;IAErD,mCAAQ,GAAR;IACA,CAAC;IAED,qCAAU,GAAV,UAAW,kBAA2B,EAAE,gBAAyB,EAAE,mBAA4B;QAC7F,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,kBAAkB,EAAE,gBAAgB,EAAE,mBAAmB,CAAC,CAAC;IACnG,CAAC;IAEM,oCAAS,GAAhB,UAAiB,gBAAuC;QACtD,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;IACzD,CAAC;IAED,uDAA4B,GAA5B,UAA6B,MAAc;QAA3C,iBAEC;QADC,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,YAAE,IAAI,YAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,kBAAkB,EAAnE,CAAmE,CAAC,CAAC;IACpH,CAAC;IAED,oCAAS,GAAT,UAAU,EAAU;QAClB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED,4CAAiB,GAAjB,UAAkB,EAAU;QAC1B,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,qCAAU,GAAV,UAAW,EAAU;QACnB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IACrC,CAAC;IAED,2CAAgB,GAAhB,UAAiB,KAAU;QACzB,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QAC/F,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QACrD,IAAM,cAAc,GAAG,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAE,IAAI,SAAE,CAAC,UAAU,KAAK,QAAQ,CAAC,EAAE,EAA7B,CAA6B,CAAC,CAAC;QAE1F,IAAM,QAAQ,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;QAE9B,cAAc,CAAC,kBAAkB,GAAG,MAAM,CAAC,WAAW,GAAG,cAAc,CAAC,WAAW,GAAG,QAAQ,IAAI,CAAC,CAAC;IACtG,CAAC;IAED,+CAAoB,GAApB,UAAqB,KAAU;QAC7B,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACrG,CAAC;IA/CU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAIwC,sFAAgB;YAClB,gFAAc;YACd,gFAAc;YAChB,0EAAY;OANrC,gBAAgB,CAgD5B;IAAD,uBAAC;CAAA;AAhD4B;;;;;;;;;;;;;;;;;;;;;;;;;;ACdoC;AAEH;AAK9D;IAEE,uBAAsB,OAAmB,EACnB,QAAmB,EACnB,UAAsB;QAC5C,kDAAkD;QAClD,iGAAiG;QAJ3E,YAAO,GAAP,OAAO,CAAY;QACnB,aAAQ,GAAR,QAAQ,CAAW;QACnB,eAAU,GAAV,UAAU,CAAY;QAI5C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,EAAE,MAAM,EAAE,oBAAoB,CAAC,CAAC;IAC5E,CAAC;IATU,aAAa;QAHzB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;SACtB,CAAC;yCAG+B,wDAAU;YACT,uDAAS;YACP,oEAAU;OAJjC,aAAa,CAUzB;IAAD,oBAAC;CAAA;AAVyB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPsD;AAKA;AAClB;AAO9D;IAYE,sBAAsB,OAAmB,EACnB,QAAmB,EACnB,gBAAkC,EAClC,UAAsB;QAHtB,YAAO,GAAP,OAAO,CAAY;QACnB,aAAQ,GAAR,QAAQ,CAAW;QACnB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,eAAU,GAAV,UAAU,CAAY;QAZ5C,cAAS,GAAG,EAAE,CAAC,YAAY,CAAC;QAE5B,sBAAiB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAC/B,uBAAkB,GAAG,KAAK,CAAC;QAI3B,WAAM,GAAG,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;IAKhB,CAAC;IAEjD,sCAAe,GAAf;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAClC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAEnD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAE7C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE;aACrB,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;aACvB,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;aACvC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAEpC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAE9C,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IACrD,CAAC;IAED,6BAAM,GAAN,UAAO,IAAkB;QACvB,MAAM,CAAC,UAAS,CAAC;YACf,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;YACpC,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC;IACJ,CAAC;IAED,gCAAS,GAAT,UAAU,IAAkB;QAC1B,MAAM,CAAC,UAAS,CAAC;YACf,IAAM,WAAW,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACnC,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;YACzE,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;YAEzE,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAElG,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC/B,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YACtC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YAClF,CAAC;YAED,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC;IACJ,CAAC;IAED,+CAAwB,GAAxB,UAAyB,IAAkB;QACzC,MAAM,CAAC,UAAS,CAAC;YACf,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC;YAEtD,GAAG,CAAC,CAA4B,UAAkC,EAAlC,SAAI,CAAC,UAAU,CAAC,kBAAkB,EAAlC,cAAkC,EAAlC,IAAkC;gBAA7D,IAAM,iBAAiB;gBAC1B,IAAM,WAAW,GAAG,iBAAiB,CAAC,YAAY,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;gBAC/E,IAAM,eAAe,GAAG,iBAAiB,CAAC,YAAY,CAAC,iBAAiB,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;gBAEvF,IAAM,QAAQ,GAAG,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;gBAChD,IAAM,MAAM,GAAG,CAAC,eAAe,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC;gBAEtD,iBAAiB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC;gBACvF,iBAAiB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC;gBAEvF,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC;oBAClD,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACvD,iBAAiB,CAAC,QAAQ,EAAE,CAAC;oBAE7B,EAAE,CAAC,CAAC,iBAAiB,CAAC,QAAQ,KAAK,iBAAiB,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC7E,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;wBAC5E,iBAAiB,CAAC,IAAI,GAAG,IAAI,CAAC;oBAChC,CAAC;gBACH,CAAC;aACF;YAED,IAAI,CAAC,UAAU,CAAC,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,MAAM,CAAC,mBAAS,IAAI,QAAC,SAAS,CAAC,IAAI,EAAf,CAAe,CAAC,CAAC;YAE7G,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAEpC,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC;IACJ,CAAC;IAED,oCAAa,GAAb;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACtD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;IAED,iCAAU,GAAV;QACE,GAAG,CAAC,CAAe,UAAwB,EAAxB,SAAI,CAAC,UAAU,CAAC,QAAQ,EAAxB,cAAwB,EAAxB,IAAwB;YAAtC,IAAM,IAAI;YACb,IAAM,YAAY,GAAsB,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC;YAChG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YAE7D,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBAC1B,IAAM,iBAAiB,GAAsB,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAC;gBAC1G,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YACpE,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBAC1B,IAAM,iBAAiB,GAAsB,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAC;gBAC1G,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YACpE,CAAC;SACF;QAED,GAAG,CAAC,CAA4B,UAAkC,EAAlC,SAAI,CAAC,UAAU,CAAC,kBAAkB,EAAlC,cAAkC,EAAlC,IAAkC;YAA7D,IAAM,iBAAiB;YAC1B,IAAM,iBAAiB,GAAsB,QAAQ,CAAC,cAAc,CAChE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YAC1G,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC3F;IACH,CAAC;IA1HU,YAAY;QAHxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;SACrB,CAAC;yCAa+B,wDAAU;YACT,uDAAS;YACD,sFAAgB;YACtB,oEAAU;OAfjC,YAAY,CA2HxB;IAAD,mBAAC;CAAA;AA3HwB;;;;;;;;;;;;;;;;;;;;;;;;;ACbwC;AAKjE;IACE,2BAAsB,OAAmB,EACnB,QAAmB;QADnB,YAAO,GAAP,OAAO,CAAY;QACnB,aAAQ,GAAR,QAAQ,CAAW;QACvC,OAAO,CAAC,aAAa,CAAC,gBAAgB,CAAC,YAAY,EAAE,UAAS,CAAC;YAC7D,CAAC,CAAC,cAAc,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IANU,iBAAiB;QAH7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;SAC1B,CAAC;yCAE+B,wDAAU;YACT,uDAAS;OAF9B,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLmC;AAE9B;AAEqD;AAKxF;IACE,wBAAsB,OAAmB,EACnB,QAAmB,EACnB,kBAAsC;QAFtC,YAAO,GAAP,OAAO,CAAY;QACnB,aAAQ,GAAR,QAAQ,CAAW;QACnB,uBAAkB,GAAlB,kBAAkB,CAAoB;QAC1D,IAAM,aAAa,GAAG,qCAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAEpD,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,EAAC,IAAI,EAAE,CAAC,EAAC,CAAC,CAAC;QAE1C,aAAa,CAAC,EAAE,CAAC,OAAO,EAAE,UAAS,KAAK;YACtC,IAAM,EAAE,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;YACzD,kBAAkB,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,aAAa,CAAC,EAAE,CAAC,SAAS,EAAE,UAAS,KAAK;YACxC,IAAM,EAAE,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;YACzD,kBAAkB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAjBU,cAAc;QAH1B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;SACvB,CAAC;yCAE+B,wDAAU;YACT,uDAAS;YACC,8FAAkB;OAHjD,cAAc,CAkB1B;IAAD,qBAAC;CAAA;AAlB0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTc;AAE8B;AACD;AACb;AACF;AACM;AACN;AACS;AACT;AACU;AACJ;AACJ;AACE;AACJ;AACI;AACA;AACE;AACG;AACP;AAEzD,IAAM,OAAO,GAAG;IACd,iEAAe;IACf,mEAAiB;IACjB,mFAAoB;IACpB,sEAAc;IACd,oEAAa;IACb,0EAAgB;IAChB,oEAAa;IACb,6EAAiB;IACjB,oEAAa;IACb,8EAAkB;IAClB,2EAAgB;IAChB,uEAAc;IACd,yEAAe;IACf,qEAAa;IACb,yEAAe;IACf,yEAAe;IACf,2EAAgB;IAChB,8EAAiB;IACjB,uEAAc;CACf,CAAC;AAMF;IAAA;IAAoC,CAAC;IAAxB,oBAAoB;QAJhC,8DAAQ,CAAC;YACR,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;SACjB,CAAC;OACW,oBAAoB,CAAI;IAAD,2BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;AC/CjC,IAAY,YAKX;AALD,WAAY,YAAY;IACtB,qCAAqB;IACrB,6BAAa;IACb,mCAAmB;IACnB,+BAAe;AACjB,CAAC,EALW,YAAY,KAAZ,YAAY,QAKvB;AAaD;IAAA;QAOE,qBAAgB,GAAG,CAAC,CAAC;QAQrB,qBAAgB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAC9B,eAAU,GAAG,KAAK,CAAC;QACnB,qBAAgB,GAAG,CAAC,CAAC;IAgBvB,CAAC;IAAD,eAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;ACnDD,IAAY,WAIX;AAJD,WAAY,WAAW;IACrB,8BAAe;IACf,8BAAe;IACf,oCAAqB;AACvB,CAAC,EAJW,WAAW,KAAX,WAAW,QAItB;AAED,IAAY,gBA6BX;AA7BD,WAAY,gBAAgB;IAC1B,uCAAmB;IACnB,yCAAqB;IACrB,2CAAuB;IACvB,qDAAiC;IACjC,6CAAyB;IACzB,yCAAqB;IACrB,uCAAmB;IACnB,2CAAuB;IACvB,iDAA6B;IAC7B,mDAA+B;IAC/B,6CAAyB;IACzB,6CAAyB;IACzB,iDAA6B;IAC7B,+CAA2B;IAC3B,6CAAyB;IACzB,uCAAmB;IACnB,yCAAqB;IACrB,yCAAqB;IACrB,+CAA2B;IAC3B,uDAAmC;IACnC,iDAA6B;IAC7B,iDAA6B;IAC7B,iDAA6B;IAC7B,6CAAyB;IACzB,2CAAuB;IACvB,2CAAuB;IACvB,iDAA6B;IAC7B,6DAAyC;AAC3C,CAAC,EA7BW,gBAAgB,KAAhB,gBAAgB,QA6B3B;AAED,IAAY,gBAWX;AAXD,WAAY,gBAAgB;IAC1B,iCAAa;IACb,iCAAa;IACb,iCAAa;IACb,qCAAiB;IACjB,iDAA6B;IAC7B,6CAAyB;IACzB,2CAAuB;IACvB,2CAAuB;IACvB,iDAA6B;IAC7B,6DAAyC;AAC3C,CAAC,EAXW,gBAAgB,KAAhB,gBAAgB,QAW3B;AAyDD;IAAA;IAcA,CAAC;IAAD,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;ACrHD,IAAY,WAGX;AAHD,WAAY,WAAW;IACrB,oCAAqB;IACrB,gCAAiB;AACnB,CAAC,EAHW,WAAW,KAAX,WAAW,QAGtB;AAED,IAAY,eAOX;AAPD,WAAY,eAAe;IACzB,oDAAiC;IACjC,iDAA8B;IAC9B,+DAA4C;IAC5C,wCAAqB;IACrB,+CAA4B;IAC5B,6CAA0B;AAC5B,CAAC,EAPW,eAAe,KAAf,eAAe,QAO1B;AAkBD;IAAA;IAWA,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;AC3CoC;AAMrC;IAAA;IAIA,CAAC;IAHG,8BAAS,GAAT,UAAU,IAAY;QAClB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAHQ,UAAU;QAHtB,0DAAI,CAAC;YACF,IAAI,EAAE,aAAa;SACtB,CAAC;OACW,UAAU,CAItB;IAAD,iBAAC;CAAA;AAJsB;;;;;;;;;;;;;;;;;;;;;;;;ACNkB;AACM;AACA;AAa/C;IAAA;IAA0B,CAAC;IAAd,UAAU;QAXtB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;aACb;YACD,YAAY,EAAE;gBACZ,2DAAU;aACX;YACD,OAAO,EAAE;gBACP,2DAAU;aACX;SACF,CAAC;OACW,UAAU,CAAI;IAAD,iBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfoB;AACG;AAEuD;AACH;AAKlG;IAKE,sBAAmB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;QAJ7B,qBAAgB,GAAG,IAAI,CAAC;QACxB,aAAQ,GAAG,IAAI,CAAC;QAChB,aAAQ,GAAG,KAAK,CAAC;IAEgB,CAAC;IAEzC,yCAAkB,GAAlB,UAAmB,UAAmB;QACpC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6GAAuB,EAAE;YAC1D,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,OAAO;YACf,IAAI,EAAE,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC,UAAU,EAAE,UAAU,EAAC;SAC/D,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAiB,GAAjB,UAAkB,SAAkB;QAClC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0GAAsB,EAAE;YACzD,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,OAAO;YACf,IAAI,EAAE,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC,SAAS,EAAE,SAAS,EAAC;SAC5D,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IA3BU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAM2B,2DAAS;OALzB,YAAY,CA4BxB;IAAD,mBAAC;CAAA;AA5BwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTkB;AAEd;AAEqC;AACN;AACZ;AACM;AACU;AAKhE;IASE,4BAAsB,gBAAkC,EAClC,cAA8B,EAC9B,UAAsB,EACtB,YAA0B;QAHhD,iBASC;QATqB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,eAAU,GAAV,UAAU,CAAY;QACtB,iBAAY,GAAZ,YAAY,CAAc;QAXhD,oBAAe,GAAG,aAAa,CAAC;QAEhC,sBAAiB,GAAG,IAAI,CAAC;QAEzB,2BAAsB,GAAG,GAAG,CAAC;QAE7B,kBAAa,GAAG,8DAAY,CAAC;QAM3B,IAAM,aAAa,GAAG,kDAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACxC,IAAM,gBAAgB,GAAG,aAAa,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,cAAc,CAAC,cAAc,EAAE,EAApC,CAAoC,CAAC,CAAC;QAE5F,IAAM,gBAAgB,GAAG,kDAAK,CAAC,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAC/D,gBAAgB,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,kBAAkB,EAAE,EAAzB,CAAyB,CAAC,CAAC;IAC7D,CAAC;IAED,4CAAe,GAAf,UAAgB,EAAU;QAA1B,iBAYC;QAXC,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACvD,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAEvC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC;QACT,CAAC;QAED,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC;QAE3B,IAAM,YAAY,GAAG,kDAAK,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;QACzD,YAAY,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,eAAe,CAAC,EAAE,CAAC,EAAxB,CAAwB,CAAC,CAAC;IACxD,CAAC;IAED,2CAAc,GAAd,UAAe,EAAU;QACvB,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACvD,QAAQ,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC9B,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC;IAC9B,CAAC;IAED,+CAAkB,GAAlB;QACE,GAAG,CAAC,CAAmB,UAAyE,EAAzE,SAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,mBAAS,IAAI,gBAAS,CAAC,UAAU,EAApB,CAAoB,CAAC,EAAzE,cAAyE,EAAzE,IAAyE;YAA3F,IAAM,QAAQ;YACjB,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC,gBAAgB,CAAC,GAAG,QAAQ,CAAC,mBAAmB,GAAG,GAAG,CAAC,CAAC;SACvH;IACH,CAAC;IAED,qDAAwB,GAAxB,UAAyB,EAAU;QACjC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC;IACjG,CAAC;IAED,4CAAe,GAAf,UAAgB,EAAU;QACxB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,gBAAgB,EAAE,CAAC;QAEzD,EAAE,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC7D,CAAC;QAED,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC,CAAC;QAE3C,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;IAC1B,CAAC;IA7DU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAUwC,6EAAgB;YAClB,uEAAc;YAClB,2DAAU;YACR,iEAAY;OAZrC,kBAAkB,CA8D9B;IAAD,yBAAC;CAAA;AA9D8B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbY;AAEuB;AAC8E;AAIhJ,IAAM,IAAI,GAAG,mBAAO,CAAC,qDAAM,CAAC,CAAC;AAC7B,IAAM,SAAS,GAAG,mBAAO,CAAC,6EAAqC,CAAC,CAAC;AAKjE;IAeE,oBAAsB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAdjD,cAAS,GAAG,SAAS,CAAC,SAAS,CAAC;QAChC,aAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;QAC9B,kBAAa,GAAG,SAAS,CAAC,aAAa,CAAC;QACxC,kBAAa,GAAG,SAAS,CAAC,aAAa,CAAC;QAKxC,aAAQ,GAAW,EAAE,CAAC;QAC7B,uBAAkB,GAAwB,EAAE,CAAC;QAE7C,eAAU,GAAG,KAAK,CAAC;QAIjB,IAAM,SAAS,GAAW,EAAE,CAAC;QAC7B,IAAI,UAAoB,EAAE,eAAyB,EAAE,eAAyB,CAAC;QAC/E,IAAI,SAAiB,EAAE,UAAkB,CAAC;QAE1C,0FAA0F;QAC1F,mIAAmI;QACnI,kIAAkI;QAClI,4GAA4G;QAC5G,0GAA0G;QAC1G,iIAAiI;QACjI,+GAA+G;QAC/G,2GAA2G;QAC3G,uGAAuG;QACvG,mGAAmG;QACnG,2DAA2D;QAC3D,KAAK;QACL,oHAAoH;QACpH,yHAAyH;QACzH,2HAA2H;QAE3H,IAAM,UAAU,GAAG,IAAI,cAAc,EAAE,CAAC;QACxC,UAAU,CAAC,MAAM,GAAG;YAClB,IAAM,MAAM,GAAG,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,UAAU,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;YACpF,IAAM,MAAM,GAAG,MAAM,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;YACpD,IAAI,QAAiB,EAAE,aAAsB,EAAE,aAAsB,CAAC;YAEtE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACvC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC3C,KAAK,WAAW;wBACd,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;wBACrB,KAAK,CAAC;oBACR,KAAK,gBAAgB;wBACnB,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;wBAC1B,KAAK,CAAC;oBACR,KAAK,gBAAgB;wBACnB,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;wBAC1B,KAAK,CAAC;gBACV,CAAC;YACH,CAAC;YAED,SAAS,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;YAC7D,UAAU,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YAE/D,UAAU,GAAG,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,gBAAM,IAAI,QAAC,MAAM,EAAP,CAAO,CAAC,CAAC;YACpE,eAAe,GAAG,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,gBAAM,IAAI,QAAC,MAAM,EAAP,CAAO,CAAC,CAAC;YAC9E,eAAe,GAAG,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,gBAAM,IAAI,QAAC,MAAM,EAAP,CAAO,CAAC,CAAC;QAChF,CAAC,CAAC;QAEF,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,iCAAiC,EAAE,KAAK,CAAC,CAAC;QACjE,UAAU,CAAC,IAAI,EAAE,CAAC;QAElB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC3C,IAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YAChC,IAAM,cAAc,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;YAC1C,IAAM,cAAc,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;YAE1C,IAAM,IAAI,GAAS;gBACjB,EAAE,EAAE,SAAS,CAAC,MAAM;gBACpB,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;gBACtC,CAAC,EAAE,EAAE,GAAG,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC;gBACtC,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC;gBAChD,cAAc,EAAE,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAC;gBACnD,iBAAiB,EAAE,KAAK;aACzB,CAAC;YAEF,EAAE,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;YACzD,CAAC;YAED,EAAE,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;YACzD,CAAC;YAED,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC;QAED,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;QAE5B,IAAI,CAAC,4BAA4B,EAAE,CAAC;IACtC,CAAC;IAED,mCAAc,GAAd,UAAe,IAAU,EAAE,YAA8B;QACvD,IAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QAEtD,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,KAAK,SAAS;YACnC,IAAI,CAAC,gBAAgB,KAAK,SAAS;YACnC,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAE,IAAI,SAAE,KAAK,IAAI,CAAC,WAAW,EAAvB,CAAuB,CAAC;YACnE,CAAC,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,GAAG,CAAC,CAAuB,UAA0B,EAA1B,iBAAY,CAAC,aAAa,EAA1B,cAA0B,EAA1B,IAA0B;YAAhD,IAAM,YAAY;YACrB,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;SAC9F;QAED,EAAE,CAAC,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,gBAAgB,CAAC;QACxD,CAAC;QAED,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC;QACrC,IAAI,CAAC,4BAA4B,EAAE,CAAC;QAEpC,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEM,sCAAiB,GAAxB,UAAyB,YAA0B;QACjD,GAAG,CAAC,CAAuB,UAA0B,EAA1B,iBAAY,CAAC,aAAa,EAA1B,cAA0B,EAA1B,IAA0B;YAAhD,IAAM,YAAY;YACrB,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC;gBAClG,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;SACF;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,kCAAa,GAAb,UAAc,IAAU;QACtB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC;QACT,CAAC;QAED,IAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAE/D,EAAE,CAAC,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;QACpC,CAAC;QAED,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;QAClC,IAAI,CAAC,4BAA4B,EAAE,CAAC;IACtC,CAAC;IAED,iDAA4B,GAA5B;QACE,IAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAE9C,GAAG,CAAC,CAAuB,UAAa,EAAb,+BAAa,EAAb,2BAAa,EAAb,IAAa;YAAnC,IAAM,YAAY;YACrB,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC;YAE/B,IAAM,YAAY,GAAW,EAAE,CAAC;YAChC,IAAI,SAAS,GAAW,EAAE,CAAC;YAC3B,IAAM,OAAO,GAAG,IAAI,GAAG,EAAc,CAAC;YACtC,IAAI,WAAW,SAAM,CAAC;YAEtB,GAAG,CAAC,CAAmB,UAAmC,EAAnC,SAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,EAAnC,cAAmC,EAAnC,IAAmC;gBAArD,IAAM,QAAQ;gBACjB,EAAE,CAAC,CAAC,QAAQ,CAAC,gBAAgB,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBAChG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC3B,CAAC;aACF;YAED,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAE7B,OAAO,SAAS,CAAC,MAAM,EAAE,CAAC;gBACxB,WAAW,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC;gBAE9B,EAAE,CAAC,CAAC,WAAW,CAAC,gBAAgB,KAAK,8DAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC3D,IAAM,YAAY,GAAW,EAAE,CAAC;oBAChC,IAAI,aAAa,GAAG,WAAW,CAAC;oBAEhC,OAAO,aAAa,KAAK,YAAY,EAAE,CAAC;wBACtC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;wBACjC,aAAa,GAAG,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;oBAC7C,CAAC;oBAED,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;oBAEjC,YAAY,CAAC,YAAY,GAAG,YAAY,CAAC,OAAO,EAAE,CAAC;oBACnD,SAAS,GAAG,EAAE,CAAC;gBACjB,CAAC;gBAED,GAAG,CAAC,CAAmB,UAAkC,EAAlC,SAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAlC,cAAkC,EAAlC,IAAkC;oBAApD,IAAM,QAAQ;oBACjB,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,gBAAgB;wBAC/D,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;wBACjE,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;wBACnC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC3B,CAAC;iBACF;gBAED,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACjC,CAAC;SACF;IACH,CAAC;IAED,2CAAsB,GAAtB,UAAuB,UAAkB;QACvC,IAAM,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAA5B,CAA4B,CAAC,CAAC;QAExG,IAAM,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;QAE7E,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;YAC3B,UAAU,EAAE,UAAU;YACtB,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;YACb,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;YACb,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,cAAI,IAAI,WAAI,EAAJ,CAAI,CAAC;YACjD,QAAQ,EAAE,CAAC;YACX,IAAI,EAAE,KAAK;SACZ,CAAC,CAAC;IACL,CAAC;IAED,qCAAgB,GAAhB,UAAiB,IAAU;QACzB,IAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAEtD,IAAM,iBAAiB,GAAG;YACxB,EAAC,CAAC,EAAE,eAAe,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC,EAAC;YAChD,EAAC,CAAC,EAAE,eAAe,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC,EAAC;YAChD,EAAC,CAAC,EAAE,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC,GAAG,CAAC,EAAC;YAChD,EAAC,CAAC,EAAE,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC,GAAG,CAAC,EAAC;SACjD,CAAC;QAEF,IAAM,KAAK,GAAW,EAAE,CAAC;QACzB,GAAG,CAAC,CAAmB,UAAiB,EAAjB,uCAAiB,EAAjB,+BAAiB,EAAjB,IAAiB;YAAnC,IAAM,QAAQ;YACjB,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ;gBAC7C,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACnD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YACnD,CAAC;SACF;QAED,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,gCAAW,GAAX;QACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,mCAAc,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,uCAAkB,GAAlB,UAAmB,IAAU;QAC3B,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAE9C,MAAM,CAAC;YACL,CAAC,EAAE,SAAS,GAAG,IAAI,CAAC,QAAQ;YAC5B,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;SACzC,CAAC;IACJ,CAAC;IAED,4BAAO,GAAP,UAAQ,CAAS,EAAE,CAAS;QAC1B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC9C,CAAC;IAED,qCAAgB,GAAhB,UAAiB,UAAmB;QAClC,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,CAAC,gBAAgB,KAAK,SAAS,EAAnC,CAAmC,CAAC,CAAC;QAC9E,IAAM,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,EAArC,CAAqC,CAAC,CAAC,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,QAAQ,EAAb,CAAa,CAAC,CAAC;QAE9H,EAAE,CAAC,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC;YAC7B,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,cAAI,IAAI,oBAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAA7C,CAA6C,CAAC,CAAC;QAC9E,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,uCAAkB,GAAlB,UAAmB,UAAkB;QACnC,IAAM,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;QAE3D,MAAM,CAAC,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,aAAa,CAAC,IAAI,CAAC,cAAI,IAAI,WAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAA5B,CAA4B,CAAC,CAAC,CAAC;IAChG,CAAC;IAED,gCAAW,GAAX,UAAY,MAAc;QACxyDAAW,CAAC,KAAK,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,yDAAW,CAAC,KAAK,CAAC;QAC3B,CAAC;QAED,MAAM,CAAC,yDAAW,CAAC,QAAQ,CAAC;IAC9B,CAAC;IAED,sCAAiB,GAAjB,UAAkB,MAAc;QAC9B,MAAM,CAAC,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAC,CAAC;IAC7C,CAAC;IAED,sBAAI,oCAAY;aAAhB;YACE,IAAM,KAAK,GAAc,EAAE,CAAC;YAE5B,GAAG,CAAC,CAAC,IAAM,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAChC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;YACjC,CAAC;YAED,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;;;OAAA;IAED,wCAAmB,GAAnB,UAAoB,UAAkB;QACpC,IAAM,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,EAArC,CAAqC,CAAC,CAAC,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,QAAQ,EAAb,CAAa,CAAC,CAAC;QAE9H,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,cAAI,IAAI,oBAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAA7C,CAA6C,CAAC,CAAC;IACrF,CAAC;IAED,sBAAI,yCAAiB;aAArB;YACE,IAAM,KAAK,GAAmB,EAAE,CAAC;YAEjC,GAAG,CAAC,CAAC,IAAM,GAAG,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gBACrC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;YACtC,CAAC;YAED,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;;;OAAA;IAED,sBAAI,yCAAiB;aAArB;YACE,IAAM,KAAK,GAAmB,EAAE,CAAC;YAEjC,GAAG,CAAC,CAAC,IAAM,GAAG,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gBACrC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;YACtC,CAAC;YAED,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;;;OAAA;IAlUU,UAAU;QAHtB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAgBwC,6EAAgB;OAf7C,UAAU,CAmUtB;IAAD,iBAAC;CAAA;AAnUsB;;;;;;;;;;;;;;;;;;;;;;;;;ACboB;AAK3C;IAWE;QAVA,aAAQ,GAAa,EAAE,CAAC;IAUR,CAAC;IARjB,6BAAG,GAAH,UAAK,OAAe;QAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAED,+BAAK,GAAL;QACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IATU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,eAAe,CAY3B;IAAD,sBAAC;CAAA;AAZ2B;;;;;;;;;;;;;;;;;;;;;;;;;;ACLe;AAGoB;AAG/D,IAAM,aAAa,GAAG,mBAAO,CAAC,6EAAqC,CAAC,CAAC;AAKrE;IAGE,0BAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAF7C,cAAS,GAAe,aAAa,CAAC;IAEW,CAAC;IAElD,sCAAW,GAAlB,UAAmB,EAAU;QAC3B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAQ,IAAI,eAAQ,CAAC,EAAE,KAAK,EAAE,EAAlB,CAAkB,CAAC,CAAC;IAC7D,CAAC;IAEM,kDAAuB,GAA9B,UAA+B,EAAU;QACvC,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEtC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;QAE5B,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IACpC,CAAC;IAEM,0CAAe,GAAtB,UAAuB,EAAU,EAAE,UAAc,EAAE,YAAoB;QAApC,2CAAc;QAAE,mDAAoB;QACrE,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEtC,EAAE,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC,CAAC,QAAQ,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YACjF,MAAM,CAAC;QACT,CAAC;QAED,GAAG,CAAC,CAA0B,UAAyB,EAAzB,aAAQ,CAAC,gBAAgB,EAAzB,cAAyB,EAAzB,IAAyB;YAAlD,IAAM,eAAe;YACxB,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC,eAAe,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC;SACxF;QAED,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,YAAY,KAAK,QAAQ,CAAC,YAAY,IAAI,CAAC,CAAC,YAAY,KAAK,QAAQ,CAAC,YAAY,EAApF,CAAoF,CAAC;aAC7G,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,kBAAkB,GAAG,IAAI,EAA3B,CAA2B,CAAC,CAAC;QAEzC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,YAAY,GAAG,UAAU,CAAC,CAAC;IAC1E,CAAC;IAEM,qCAAU,GAAjB,UAAkB,EAAU,EAAE,UAAc;QAAd,2CAAc;QAC1C,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEtC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,IAAI,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;YACjD,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,GAAG,CAAC,CAA0B,UAAyB,EAAzB,aAAQ,CAAC,gBAAgB,EAAzB,cAAyB,EAAzB,IAAyB;YAAlD,IAAM,eAAe;YACxB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,eAAe,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC;gBAC5F,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;SACF;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEM,0CAAe,GAAtB,UAAuB,YAA0B,EAAE,gBAAyB,EAAE,kBAA2B;QACvG,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,kBAAQ,IAAI,eAAQ,CAAC,YAAY,KAAK,YAAY,EAAtC,CAAsC,CAAC,CAAC;QAE1F,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACrB,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,kBAAQ,IAAI,eAAQ,CAAC,MAAM,CAAC,QAAQ,EAAxB,CAAwB,CAAC,CAAC;QACrE,CAAC;QACD,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACvB,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,kBAAQ,IAAI,eAAQ,CAAC,kBAAkB,EAA3B,CAA2B,CAAC,CAAC;QACxE,CAAC;QAED,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAEM,+CAAoB,GAA3B;QACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,kBAAQ,IAAI,eAAQ,CAAC,WAAW,EAApB,CAAoB,CAAC,CAAC;IACjE,CAAC;IAEM,4CAAiB,GAAxB;QACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,kBAAQ,IAAI,eAAQ,CAAC,QAAQ,EAAjB,CAAiB,CAAC,CAAC;IAC9D,CAAC;IAEM,sCAAW,GAAlB;QACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,EAAE,EAAX,CAAW,CAAC,CAAC;IACrD,CAAC;IAEM,0CAAe,GAAtB,UAAuB,EAAU,EAAE,WAAmB;QACpD,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEtC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;YACb,MAAM,CAAI,QAAQ,CAAC,mBAAmB,MAAG,CAAC;QAC5C,CAAC;QAED,MAAM,CAAI,QAAQ,CAAC,mBAAmB,UAAK,QAAQ,CAAC,YAAY,GAAG,QAAQ,CAAC,mBAAmB,GAAG,IAAI,qCAC7E,QAAQ,CAAC,WAAW,GAAG,WAAW,8BAA2B,CAAC;IACzF,CAAC;IAEM,4CAAiB,GAAxB,UAAyB,EAAU,EAAE,MAAc;QACjD,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC;IACxC,CAAC;IAEM,oCAAS,GAAhB,UAAiB,EAAU;QACzB,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC1E,CAAC;IAEO,8BAAG,GAAX,UAAY,OAAe;QACzB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,uBAAqB,OAAS,CAAC,CAAC;IAC3D,CAAC;IAhGU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIqC,0EAAe;OAHzC,gBAAgB,CAiG5B;IAAD,uBAAC;CAAA;AAjG4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXc;AACgB;AAEJ;AAEa;AACH;AACH;AACZ;AAEuC;AAKzF;IAME,yBAAsB,gBAAkC,EAClC,eAAgC,EAChC,cAA8B,EAC9B,UAAsB,EACtB,QAAqB,EACxB,MAAiB;QALd,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,eAAU,GAAV,UAAU,CAAY;QACtB,aAAQ,GAAR,QAAQ,CAAa;QACxB,WAAM,GAAN,MAAM,CAAW;QAVpC,qBAAgB,GAAG,MAAM,CAAC;QAWxB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,wCAAc,GAAd,UAAe,QAAiB;QAAhC,iBAcC;QAbC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iGAAmB,EAAE;YACtD,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,OAAO;YACf,IAAI,EAAE,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC,QAAQ,EAAE,QAAQ,EAAC;SACzD,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,EAAE,CAAC,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;gBACzB,EAAE,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBAC5B,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,2BAA2B,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;gBACxE,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAW,GAAX;QAAA,iBAWC;QAVC,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,KAAK,SAAS,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;QACvC,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,cAAc,GAAG,kDAAK,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC1E,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,QAAQ,EAAE,EAAf,CAAe,CAAC,CAAC;IAC/E,CAAC;IAED,kCAAQ,GAAR;QACE,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAEnC,YAAY,CAAC,OAAO,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;QAEtD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,0BAA0B,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;IACvE,CAAC;IAED,kCAAQ,GAAR;QACE,IAAM,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;QAE7D,EAAE,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC;QACT,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,2BAA2B,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QACxE,CAAC;IACH,CAAC;IAED,oCAAU,GAAV;QACE,YAAY,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC;QAE/C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;IACjE,CAAC;IAED,oCAAU,GAAV;QACE,IAAM,QAAQ,GAAa;YACzB,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,OAAO,EAAE,EAAE;YACX,KAAK,EAAE,EAAE;YACT,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;SACxC,CAAC;QAEF,GAAG,CAAC,CAAmB,UAA+B,EAA/B,SAAI,CAAC,gBAAgB,CAAC,SAAS,EAA/B,cAA+B,EAA/B,IAA+B;YAAjD,IAAM,QAAQ;YACjB,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC;gBACtB,EAAE,EAAE,QAAQ,CAAC,EAAE;gBACf,MAAM,EAAE,QAAQ,CAAC,MAAM;gBACvB,WAAW,EAAE,QAAQ,CAAC,WAAW;gBACjC,YAAY,EAAE,QAAQ,CAAC,YAAY;gBACnC,QAAQ,EAAE,QAAQ,CAAC,QAAQ;gBAC3B,QAAQ,EAAE,QAAQ,CAAC,QAAQ;gBAC3B,kBAAkB,EAAE,QAAQ,CAAC,kBAAkB;aAChD,CAAC,CAAC;SACJ;QAED,GAAG,CAAC,CAAkB,UAA6B,EAA7B,SAAI,CAAC,eAAe,CAAC,QAAQ,EAA7B,cAA6B,EAA7B,IAA6B;YAA9C,IAAM,OAAO;YAChB,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC;gBACrB,EAAE,EAAE,OAAO,CAAC,EAAE;gBACd,SAAS,EAAE,OAAO,CAAC,SAAS;aAC7B,CAAC,CAAC;SACJ;QAED,GAAG,CAAC,CAAiB,UAA2B,EAA3B,SAAI,CAAC,cAAc,CAAC,OAAO,EAA3B,cAA2B,EAA3B,IAA2B;YAA3C,IAAM,MAAM;YACf,IAAM,UAAU,GAAe;gBAC7B,EAAE,EAAE,MAAM,CAAC,EAAE;gBACb,IAAI,EAAE,MAAM,CAAC,IAAI;gBACjB,WAAW,EAAE,MAAM,CAAC,WAAW;gBAC/B,iBAAiB,EAAE,EAAE;aACtB,CAAC;YAEF,GAAG,CAAC,CAAyB,UAAwB,EAAxB,WAAM,CAAC,iBAAiB,EAAxB,cAAwB,EAAxB,IAAwB;gBAAhD,IAAM,cAAc;gBACvB,UAAU,CAAC,iBAAiB,CAAC,IAAI,CAAC;oBAChC,UAAU,EAAE,cAAc,CAAC,UAAU;oBACrC,QAAQ,EAAE,cAAc,CAAC,QAAQ;oBACjC,WAAW,EAAE,cAAc,CAAC,WAAW;oBACvC,WAAW,EAAE,cAAc,CAAC,WAAW;iBACxC,CAAC,CAAC;aACJ;YAED,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACnC;QAED,GAAG,CAAC,CAAe,UAAwB,EAAxB,SAAI,CAAC,UAAU,CAAC,QAAQ,EAAxB,cAAwB,EAAxB,IAAwB;YAAtC,IAAM,IAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,KAAK,SAAS,CAAC,CAAC,CAAC;gBACxC,QAAQ,CAAC;YACX,CAAC;YAED,IAAM,QAAQ,GAAa;gBACzB,EAAE,EAAE,IAAI,CAAC,EAAE;gBACX,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;gBACzC,cAAc,EAAE,IAAI,CAAC,cAAc;aACpC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,KAAK,SAAS,CAAC,CAAC,CAAC;gBACxC,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACpD,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,KAAK,SAAS,CAAC,CAAC,CAAC;gBACxC,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACpD,CAAC;YAED,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC/B;QAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,oCAAU,GAAV,UAAW,cAAsB;QAC/B,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAErC,IAAI,CAAC;YACH,IAAM,QAAQ,GAAa,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YAE5D,EAAE,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvB,GAAG,CAAC,CAAuB,UAAkB,EAAlB,aAAQ,CAAC,SAAS,EAAlB,cAAkB,EAAlB,IAAkB;oBAAxC,IAAM,YAAY;oBACrB,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;oBAEpE,EAAE,CAAC,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC;wBAC3B,QAAQ,CAAC;oBACX,CAAC;oBAED,QAAQ,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC;oBACtC,QAAQ,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;oBAChD,QAAQ,CAAC,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC;oBAClD,QAAQ,CAAC,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC;oBAC1C,QAAQ,CAAC,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC;oBAC1C,QAAQ,CAAC,kBAAkB,GAAG,YAAY,CAAC,kBAAkB,CAAC;iBAC/D;YACH,CAAC;YAED,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACtB,GAAG,CAAC,CAAsB,UAAiB,EAAjB,aAAQ,CAAC,QAAQ,EAAjB,cAAiB,EAAjB,IAAiB;oBAAtC,IAAM,WAAW;oBACpB,IAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;oBAEhE,EAAE,CAAC,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC;wBAC1B,QAAQ,CAAC;oBACX,CAAC;oBAED,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;oBAC3C,OAAO,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC;iBAC3C;YACH,CAAC;YAED,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;gBACrB,GAAG,CAAC,CAAqB,UAAgB,EAAhB,aAAQ,CAAC,OAAO,EAAhB,cAAgB,EAAhB,IAAgB;oBAApC,IAAM,UAAU;oBACnB,IAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;oBAE5D,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;oBAC9B,MAAM,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;oBAC5C,MAAM,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;oBAE5C,GAAG,CAAC,CAA6B,UAA4B,EAA5B,eAAU,CAAC,iBAAiB,EAA5B,cAA4B,EAA5B,IAA4B;wBAAxD,IAAM,kBAAkB;wBAC3B,IAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;wBAE5F,cAAc,CAAC,QAAQ,GAAG,kBAAkB,CAAC,QAAQ,CAAC;wBACtD,cAAc,CAAC,WAAW,GAAG,kBAAkB,CAAC,WAAW,CAAC;wBAC5D,cAAc,CAAC,WAAW,GAAG,CAAC,CAAC;wBAE/B,cAAc,CAAC,aAAa,GAAG,kBAAkB,CAAC,WAAW,CAAC;wBAE9D,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,UAAU,EAAE,kBAAkB,CAAC,WAAW,CAAC,CAAC;qBACzG;oBAED,EAAE,CAAC,CAAC,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC3B,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;oBAC9C,CAAC;iBACF;YACH,CAAC;YAED,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;wCACR,QAAQ;oBACjB,IAAM,IAAI,GAAG,OAAK,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAI,IAAI,WAAI,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,EAAvB,CAAuB,CAAC,CAAC;oBAE5E,EAAE,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;;oBAEzB,CAAC;oBAED,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC;oBAClD,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC;oBAElD,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;oBAC1C,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,iBAAiB,CAAC;oBAEpD,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC;gBAChD,CAAC;;gBAdD,GAAG,CAAC,CAAmB,UAAc,EAAd,aAAQ,CAAC,KAAK,EAAd,cAAc,EAAd,IAAc;oBAAhC,IAAM,QAAQ;4BAAR,QAAQ;iBAclB;YACH,CAAC;YAED,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC;YAClD,IAAI,CAAC,UAAU,CAAC,4BAA4B,EAAE,CAAC;YAE/C,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,8BAA4B,KAAO,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;YAC9E,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;YAE5B,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAErB,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IA3OU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAOwC,6EAAgB;YACjB,0EAAe;YAChB,uEAAc;YAClB,2DAAU;YACZ,6DAAW;YAChB,2DAAS;OAXzB,eAAe,CA4O3B;IAAD,sBAAC;CAAA;AA5O2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfe;AAGuB;AACH;AAK/D;IAEE,sBAAoB,gBAAkC,EAClC,eAAgC;QADhC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,oBAAe,GAAf,eAAe,CAAiB;IAAI,CAAC;IAElD,mCAAY,GAAnB,UAAoB,EAAU,EAAE,MAAc;QAC5C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC;QACT,CAAC;QAED,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEvD,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAClB,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC3B,CAAC;QAED,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;QAC9D,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,EAAE,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACzE,CAAC;IAEM,sCAAe,GAAtB,UAAuB,EAAU,EAAE,MAAc;QAC/C,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEvD,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAClB,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QAClD,CAAC;QAED,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,CAAC;IAC5D,CAAC;IAEM,sCAAe,GAAtB,UAAuB,YAA0B,EAAE,gBAAyB,EAAE,kBAA2B;QACvG,IAAI,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,kBAAQ,IAAI,eAAQ,CAAC,YAAY,KAAK,YAAY,EAAtC,CAAsC,CAAC,CAAC;QAE3G,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACrB,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,kBAAQ,IAAI,eAAQ,CAAC,QAAQ,EAAjB,CAAiB,CAAC,CAAC;QAC9D,CAAC;QACD,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACvB,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,kBAAQ,IAAI,eAAQ,CAAC,kBAAkB,EAA3B,CAA2B,CAAC,CAAC;QACxE,CAAC;QAED,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAEO,0BAAG,GAAX,UAAY,OAAe;QACzB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,uBAAqB,OAAS,CAAC,CAAC;IAC3D,CAAC;IA7CU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAGsC,6EAAgB;YACjB,0EAAe;OAHzC,YAAY,CA8CxB;IAAD,mBAAC;CAAA;AA9CwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTkB;AAEyB;AACZ;AACO;AACD;AAK9D;IACE,wBAAsB,gBAAkC,EAClC,eAAgC,EAChC,cAA8B;QAF9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAEzD,2CAAkB,GAAlB,UAAmB,UAAkB;QACnC,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAC/D,IAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QAEjE,IAAI,OAAO,GAAG,KAAG,QAAQ,CAAC,mBAAqB,CAAC;QAEhD,EAAE,CAAC,CAAC,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC;YACrB,MAAM,CAAC,OAAO,CAAC;QACjB,CAAC;QAED,IAAI,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,gEAAe,CAAC,cAAc,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QACjH,cAAc,GAAG,cAAc,CAAC,MAAM,CAAC,iBAAO,IAAI,cAAO,CAAC,cAAc,CAAC,IAAI,CAAC,YAAE;YAC9E,SAAE,CAAC,eAAe,KAAK,gEAAe,CAAC,cAAc;gBACrD,CAAC,CAAC,EAAE,CAAC,YAAY,KAAK,QAAQ,CAAC,YAAY,IAAI,EAAE,CAAC,qBAAqB,IAAI,QAAQ,CAAC,YAAY,IAAI,EAAE,CAAC,OAAO,CAAC;oBAC/G,EAAE,CAAC,UAAU,KAAK,UAAU,CAAC;QAF7B,CAE6B,CAAC,EAHkB,CAGlB,CAAC,CAAC;QAElC,EAAE,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1B,OAAO,IAAI,uBAAqB,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,MAAG,CAAC;QAC5D,CAAC;QAED,EAAE,CAAC,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC;YACrC,OAAO,IAAI,uBAAuB,CAAC;YACnC,GAAG,CAAC,CAA0B,UAAyB,EAAzB,aAAQ,CAAC,gBAAgB,EAAzB,cAAyB,EAAzB,IAAyB;gBAAlD,IAAM,eAAe;gBACxB,OAAO,IAAI,MAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,IAAI,UAAK,eAAe,CAAC,IAAI,MAAG,CAAC;aAC/G;YACD,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACnD,OAAO,IAAI,GAAG,CAAC;QACnB,CAAC;QAEC,OAAO,IAAI,OAAK,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,QAAQ,CAAC,YAAY,GAAG,QAAQ,CAAC,mBAAmB,GAAG,IAAI,CAAC,GAAG,GAAG,2BAAwB;aAChH,MAAI,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,GAAG,GAAG,8BAA2B,EAAC;QAEzG,MAAM,CAAC,OAAO,CAAC;IAClB,CAAC;IAED,yCAAgB,GAAhB,UAAiB,UAAkB;QACjC,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAC/D,IAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QAEzE,MAAM,CAAI,QAAQ,CAAC,UAAU,SAAI,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,WAAW,GAAG,GAAG,CAAC,GAAG,GAAG,MAAG;aACpF,KAAG,QAAQ,CAAC,UAAU,IAAG,cAAc,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,kBAAc,EAAC;IACvF,CAAC;IA9CU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAEwC,6EAAgB;YACjB,0EAAe;YAChB,uEAAc;OAHzC,cAAc,CA+C1B;IAAD,qBAAC;CAAA;AA/C0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVgB;AAEmC;AACZ;AACJ;AACC;AAG/D,IAAM,YAAY,GAAG,mBAAO,CAAC,2EAAoC,CAAC,CAAC;AAKnE;IAGE,yBAAoB,gBAAkC,EAClC,cAA8B,EAC9B,eAAgC;QAFhC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAJ7C,aAAQ,GAAc,YAAY,CAAC;IAIc,CAAC;IAElD,oCAAU,GAAjB,UAAkB,EAAU;QAC1B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAO,IAAI,cAAO,CAAC,EAAE,KAAK,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAC1D,CAAC;IAEM,yCAAe,GAAtB,UAAuB,EAAU;QAC/B,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAEpC,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACpD,MAAM,CAAC;QACT,CAAC;QAED,GAAG,CAAC,CAAuB,UAAqB,EAArB,YAAO,CAAC,aAAa,EAArB,cAAqB,EAArB,IAAqB;YAA3C,IAAM,YAAY;YACrB,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;SAC9F;QAED,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QAE3B,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;IAC3B,CAAC;IAEM,sCAAY,GAAnB,UAAoB,OAAgB;QAApC,iBAyDC;gCAxDY,aAAa;YACtB,EAAE,CAAC,CAAC,aAAa,CAAC,eAAe,KAAK,gEAAe,CAAC,UAAU,CAAC,CAAC,CAAC;gBACjE,OAAK,cAAc,CAAC,SAAS,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,IAAI,IAAI,aAAa,CAAC,aAAa,CAAC;;YAEhG,CAAC;YAED,IAAI,kBAAkB,GAAG,CAAC,OAAK,gBAAgB,CAAC,WAAW,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC;YACvF,IAAI,gBAAgB,GAAG,CAAC,OAAK,cAAc,CAAC,iBAAiB,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC;YAEzF,EAAE,CAAC,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC,CAAC;gBACxC,kBAAkB,GAAG,OAAK,gBAAgB,CAAC,eAAe,CAAC,aAAa,CAAC,YAAY,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;gBACrG,gBAAgB,GAAG,OAAK,cAAc,CAAC,SAAS,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,iBAAiB,CAAC;gBAE/F,EAAE,CAAC,CAAC,aAAa,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC/B,kBAAkB,GAAG,kBAAkB,CAAC,MAAM,CAAC,kBAAQ,IAAI,eAAQ,CAAC,YAAY,IAAI,aAAa,CAAC,OAAO,EAA9C,CAA8C,CAAC,CAAC;oBAC3G,gBAAgB,GAAG,gBAAgB,CAAC,MAAM,CAAC,gBAAM;wBAC/C,YAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,YAAY,IAAI,aAAa,CAAC,OAAO;oBAA1F,CAA0F,CAAC,CAAC;gBAChG,CAAC;YACH,CAAC;YAED,GAAG,CAAC,CAA4B,UAAkB,EAAlB,yCAAkB,EAAlB,gCAAkB,EAAlB,IAAkB;gBAA7C,IAAM,iBAAiB;gBAC1B,MAAM,CAAC,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC;oBACtC,KAAK,gEAAe,CAAC,cAAc,EAAE,CAAC;wBACpC,iBAAiB,CAAC,WAAW,GAAG,CAAC,CAAC,aAAa,CAAC,aAAa,CAAC;wBAC9D,KAAK,CAAC;oBACR,CAAC;oBACD,KAAK,gEAAe,CAAC,YAAY,EAAE,CAAC;wBAClC,iBAAiB,CAAC,YAAY,IAAI,aAAa,CAAC,aAAa,CAAC;wBAC9D,KAAK,CAAC;oBACR,CAAC;oBACD,KAAK,gEAAe,CAAC,mBAAmB,EAAE,CAAC;wBACzC,iBAAiB,CAAC,mBAAmB,IAAI,aAAa,CAAC,aAAa,CAAC;wBACrE,KAAK,CAAC;oBACR,CAAC;oBACD,SAAS,CAAC;wBACR,KAAK,CAAC;oBACR,CAAC;gBACH,CAAC;aACF;YAED,GAAG,CAAC,CAA0B,UAAgB,EAAhB,qCAAgB,EAAhB,8BAAgB,EAAhB,IAAgB;gBAAzC,IAAM,eAAe;gBACxB,MAAM,EAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC;oBACrC,KAAK,gEAAe,CAAC,QAAQ,EAAE,CAAC;wBAC9B,eAAe,CAAC,QAAQ,GAAG,CAAC,CAAC,aAAa,CAAC,aAAa,CAAC;wBACzD,KAAK,CAAC;oBACR,CAAC;oBACD,KAAK,gEAAe,CAAC,WAAW,EAAE,CAAC;wBACjC,eAAe,CAAC,WAAW,IAAI,aAAa,CAAC,aAAa,CAAC;wBAC3D,KAAK,CAAC;oBACR,CAAC;oBACD,SAAS,CAAC;wBACR,KAAK,CAAC;oBACR,CAAC;gBACH,CAAC;aACF;QACH,CAAC;;QAvDD,GAAG,CAAC,CAAwB,UAAsB,EAAtB,YAAO,CAAC,cAAc,EAAtB,cAAsB,EAAtB,IAAsB;YAA7C,IAAM,aAAa;oBAAb,aAAa;SAuDvB;IACH,CAAC;IAEM,0CAAgB,GAAvB,UAAwB,EAAU;QAChC,GAAG,CAAC,CAAuB,UAAiC,EAAjC,SAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,aAAa,EAAjC,cAAiC,EAAjC,IAAiC;YAAvD,IAAM,YAAY;YACrB,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC;gBAClG,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;SACF;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEM,qCAAW,GAAlB,UAAmB,iBAA0B,EAAE,mBAA4B,EAAE,kBAA2B;QAAxG,iBAeG;QAdD,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE7B,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACtB,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,iBAAO,IAAI,cAAO,CAAC,SAAS,EAAjB,CAAiB,CAAC,CAAC;QAC3D,CAAC;QACD,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACxB,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,iBAAO,IAAI,QAAC,OAAO,CAAC,SAAS,EAAlB,CAAkB,CAAC,CAAC;QAC5D,CAAC;QACD,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACvB,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,iBAAO,IAAI,cAAO,CAAC,aAAa,CAAC,KAAK,CACjE,YAAE,IAAI,YAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,kBAAkB,EAAnE,CAAmE,CAAC,EADpC,CACoC,CAAC,CAAC;QAC9E,CAAC;QAED,MAAM,CAAC,QAAQ,CAAC;IAChB,CAAC;IAEI,wCAAc,GAArB,UAAsB,WAAwB,EACxB,iBAA0B,EAAE,mBAA4B,EAAE,kBAA2B;QAD3G,iBAgBC;QAdC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,iBAAO,IAAI,cAAO,CAAC,WAAW,KAAK,WAAW,EAAnC,CAAmC,CAAC,CAAC;QAEpF,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACtB,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,iBAAO,IAAI,cAAO,CAAC,SAAS,EAAjB,CAAiB,CAAC,CAAC;QAC3D,CAAC;QACD,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACxB,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,iBAAO,IAAI,QAAC,OAAO,CAAC,SAAS,EAAlB,CAAkB,CAAC,CAAC;QAC5D,CAAC;QACD,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACvB,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,iBAAO,IAAI,cAAO,CAAC,aAAa,CAAC,KAAK,CAC/D,YAAE,IAAI,YAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,kBAAkB,EAAnE,CAAmE,CAAC,EADtC,CACsC,CAAC,CAAC;QAChF,CAAC;QAED,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IAEM,4CAAkB,GAAzB,UAA0B,eAAgC,EAChC,iBAA0B,EAAE,mBAA4B,EAAE,kBAA2B;QAD/G,iBAgBC;QAdC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,iBAAO,IAAI,cAAO,CAAC,cAAc,CAAC,IAAI,CAAC,YAAE,IAAI,SAAE,CAAC,eAAe,KAAK,eAAe,EAAtC,CAAsC,CAAC,EAAzE,CAAyE,CAAC,CAAC;QAE1H,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACtB,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,iBAAO,IAAI,cAAO,CAAC,SAAS,EAAjB,CAAiB,CAAC,CAAC;QAC3D,CAAC;QACD,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACxB,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,iBAAO,IAAI,QAAC,OAAO,CAAC,SAAS,EAAlB,CAAkB,CAAC,CAAC;QAC5D,CAAC;QACD,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACvB,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,iBAAO,IAAI,cAAO,CAAC,aAAa,CAAC,KAAK,CAC/D,YAAE,IAAI,YAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,kBAAkB,EAAnE,CAAmE,CAAC,EADtC,CACsC,CAAC,CAAC;QAChF,CAAC;QAED,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IAEM,8CAAoB,GAA3B,UAA4B,EAAU;QACpC,MAAM,CAAC,4DAAW,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC;IACtD,CAAC;IAEM,kDAAwB,GAA/B,UAAgC,SAAiB,EAAE,QAAgB;QACjE,MAAM,CAAC,gEAAe,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;IAC9F,CAAC;IAEO,6BAAG,GAAX,UAAY,OAAe;QACzB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,sBAAoB,OAAS,CAAC,CAAC;IAC1D,CAAC;IA/JU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIsC,6EAAgB;YAClB,uEAAc;YACb,0EAAe;OALzC,eAAe,CAgK3B;IAAD,sBAAC;CAAA;AAhK2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbe;AAGuB;AAEH;AAG/D,IAAM,WAAW,GAAG,mBAAO,CAAC,yEAAmC,CAAC,CAAC;AAKjE;IAGE,wBAAsB,gBAAkC,EAClC,eAAgC;QADhC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,oBAAe,GAAf,eAAe,CAAiB;QAH/C,YAAO,GAAa,WAAW,CAAC;IAGmB,CAAC;IAEpD,mCAAU,GAAjB,UAAkB,kBAA2B,EAAE,gBAAyB,EAAE,mBAA4B;QAAtG,iBAkBC;QAjBC,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAE3B,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACvB,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAM,IAAI,aAAM,CAAC,iBAAiB,CAAC,IAAI,CACnE,YAAE,IAAI,YAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,kBAAkB,EAAnE,CAAmE,CAAC,EADpC,CACoC,CAAC,CAAC;QAChF,CAAC;QAED,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACrB,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAM,IAAI,aAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAE,IAAI,SAAE,CAAC,QAAQ,EAAX,CAAW,CAAC,EAAhD,CAAgD,CAAC,CAAC;QAC5F,CAAC;QAED,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACxB,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAM,IAAI,aAAM,CAAC,iBAAiB,CAAC,IAAI,CACnE,YAAE,IAAI,YAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,WAAW,EAA5D,CAA4D,CAAC,EAD7B,CAC6B,CAAC,CAAC;QACzE,CAAC;QAED,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAEM,kCAAS,GAAhB,UAAiB,gBAAgD;QAC/D,MAAM,CAAC,OAAO,gBAAgB,KAAK,QAAQ,CAAC,CAAC;YAC3C,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAM,IAAI,aAAM,CAAC,YAAY,KAAK,gBAAgB,EAAxC,CAAwC,CAAC,CAAC;IAC1E,CAAC;IAEM,0CAAiB,GAAxB,UAAyB,UAAkB;QACzC,IAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC;QAChF,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QAE5C,EAAE,CAAC,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAED,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAE,IAAI,SAAE,CAAC,UAAU,KAAK,UAAU,EAA5B,CAA4B,CAAC,CAAC;IAC3E,CAAC;IAED,kCAAS,GAAT,UAAU,EAAU;QAClB,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QAElC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IACpE,CAAC;IAED,uCAAc,GAAd;QACE,GAAG,CAAC,CAAiB,UAAY,EAAZ,SAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY;YAA5B,IAAM,MAAM;YACf,GAAG,CAAC,CAAyB,UAAwB,EAAxB,WAAM,CAAC,iBAAiB,EAAxB,cAAwB,EAAxB,IAAwB;gBAAhD,IAAM,cAAc;gBACvB,EAAE,CAAC,CAAC,cAAc,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC;oBACrC,QAAQ,CAAC;gBACX,CAAC;gBAED,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,cAAc,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,GAAG,cAAc,CAAC,WAAW,CAAC,CAAC;aAC3H;SACF;IACH,CAAC;IAED,6CAAoB,GAApB,UAAqB,EAAU,EAAE,sBAA8B;QAC7D,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACvD,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QACrD,IAAM,cAAc,GAAG,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAE,IAAI,SAAE,CAAC,UAAU,KAAK,QAAQ,CAAC,EAAE,EAA7B,CAA6B,CAAC,CAAC;QAE1F,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACvC,sBAAsB,GAAG,MAAM,CAAC,WAAW,GAAG,cAAc,CAAC,WAAW,CAAC;YACzE,cAAc,CAAC,aAAa,GAAG,sBAAsB,CAAC;QACxD,CAAC;QAED,IAAM,cAAc,GAAG,MAAM,CAAC,WAAW,GAAG,cAAc,CAAC,WAAW,GAAG,sBAAsB,CAAC;QAEhG,MAAM,CAAC,WAAW,GAAG,cAAc,CAAC;QACpC,cAAc,CAAC,WAAW,GAAG,sBAAsB,CAAC;IACtD,CAAC;IAED,mCAAU,GAAV,UAAW,EAAU;QACnB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC;QACT,CAAC;QAED,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QAElC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAEzD,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC;QACpB,MAAM,CAAC,WAAW,EAAE,CAAC;QACrB,MAAM,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAEO,4BAAG,GAAX,UAAY,OAAe;QACzB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,qBAAmB,OAAS,CAAC,CAAC;IACzD,CAAC;IA7FU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIwC,6EAAgB;YACjB,0EAAe;OAJ3C,cAAc,CA8F1B;IAAD,qBAAC;CAAA;AA9F0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACb3B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AACzD;AAE2B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"/* AppComponent's private CSS styles */\\r\\nh1 {\\r\\n  font-size: 1.2em;\\r\\n  color: #999;\\r\\n  margin-bottom: 0;\\r\\n}\\r\\nh2 {\\r\\n  font-size: 2em;\\r\\n  margin-top: 0;\\r\\n  padding-top: 0;\\r\\n}\\r\\nnav a {\\r\\n  padding: 5px 10px;\\r\\n  text-decoration: none;\\r\\n  margin-top: 10px;\\r\\n  display: inline-block;\\r\\n  background-color: #eee;\\r\\n  border-radius: 4px;\\r\\n}\\r\\nnav a:visited, a:link {\\r\\n  color: #607d8b;\\r\\n}\\r\\nnav a:hover {\\r\\n  color: #039be5;\\r\\n  background-color: #cfd8dc;\\r\\n}\\r\\nnav a.active {\\r\\n  color: #039be5;\\r\\n}\\r\\n.main-pane {\\r\\n  float: left;\\r\\n}\\r\\n.tab-group {\\r\\n  margin-left: 15px;\\r\\n}\\r\\n.debug-pane {\\r\\n  float: right;\\r\\n}\\r\\n\"","module.exports = \"<h1>Clicker Game</h1>\\n\\n<app-clicker-main class=\\\"main-pane\\\"></app-clicker-main>\\n\\n<mat-tab-group class=\\\"tab-group\\\" dynamicHeight [matBadge]=\\\"affordableUpgradeCount\\\" [matBadgeHidden]=\\\"affordableUpgradeCount <= 0\\\" matBadgePosition=\\\"before\\\" matBadgeColor=\\\"accent\\\">\\n  <mat-tab label=\\\"Explore\\\">\\n    <app-map></app-map>\\n  </mat-tab>\\n  <mat-tab label=\\\"Workers\\\">\\n    <app-workers></app-workers>\\n  </mat-tab>\\n  <mat-tab label=\\\"Store\\\">\\n    <app-store></app-store>\\n  </mat-tab>\\n  <mat-tab label=\\\"Upgrades\\\">\\n    <app-upgrades></app-upgrades>\\n  </mat-tab>\\n  <mat-tab label=\\\"Settings\\\">\\n    <app-settings></app-settings>\\n  </mat-tab>\\n</mat-tab-group>\\n\\n<mat-card class=\\\"debug-pane\\\" *ngIf=\\\"debugMode\\\">\\n  <h1>Admin Dashboard</h1>\\n  <app-admin-debug></app-admin-debug>\\n  <app-messages></app-messages>\\n</mat-card>\\n\"","import { Component } from '@angular/core';\r\n\r\nimport { UpgradesService } from './services/upgrades/upgrades.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'clicker-game';\r\n  debugMode = true;\r\n\r\n  constructor(protected upgradesService: UpgradesService) {\r\n  }\r\n\r\n  get affordableUpgradeCount(): number {\r\n    const upgrades = this.upgradesService.getUpgrades(false, true, true);\r\n    const affordableUpgrades = upgrades.filter(upgrade => this.upgradesService.canAffordUpgrade(upgrade.id));\r\n\r\n    return affordableUpgrades.length;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ZoomableCanvasComponent } from '@durwella/zoomable-canvas';\r\n\r\nimport { MaterialImportModule } from './material-import/material-import.module';\r\nimport { PipeModule } from 'src/app/pipe/pipe.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ClickerMainComponent } from './components/clicker-main/clicker-main.component';\r\nimport { MessagesComponent } from './components/messages/messages.component';\r\nimport { WorkersComponent } from './components/workers/workers.component';\r\nimport { StoreComponent } from './components/store/store.component';\r\nimport { UpgradesComponent } from './components/upgrades/upgrades.component';\r\nimport { MapComponent } from './components/map/map.component';\r\nimport { SettingsComponent } from './components/settings/settings.component';\r\nimport { AdminDebugComponent } from './components/admin-debug/admin-debug.component';\r\nimport { ResourceDialogComponent } from './components/resource-dialog/resource-dialog.component';\r\nimport { UpgradeDialogComponent } from './components/upgrade-dialog/upgrade-dialog.component';\r\nimport { SaveDialogComponent } from './components/save-dialog/save-dialog.component';\r\nimport { TouchDirective } from './directives/touch/touch.directive';\r\nimport { CropDirective } from './directives/crop/crop.directive';\r\nimport { MapDirective } from './directives/map/map.directive';\r\nimport { NoScrollDirective } from './directives/no-scroll/no-scroll.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ZoomableCanvasComponent,\r\n    ClickerMainComponent,\r\n    MessagesComponent,\r\n    WorkersComponent,\r\n    StoreComponent,\r\n    UpgradesComponent,\r\n    SettingsComponent,\r\n    AdminDebugComponent,\r\n    MapComponent,\r\n    ResourceDialogComponent,\r\n    UpgradeDialogComponent,\r\n    TouchDirective,\r\n    CropDirective,\r\n    SaveDialogComponent,\r\n    MapDirective,\r\n    NoScrollDirective\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MaterialImportModule,\r\n    PipeModule\r\n  ],\r\n  entryComponents: [\r\n    ResourceDialogComponent,\r\n    UpgradeDialogComponent,\r\n    SaveDialogComponent\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<h2>Debug</h2>\\n\\n<mat-checkbox class=\\\"filterAccessible\\\" checked=\\\"true\\\" [(ngModel)]=\\\"adminService.filterAccessible\\\">Hide Inaccessible Upgrades</mat-checkbox>\\n<br />\\n<mat-checkbox class=\\\"filterAccessible\\\" checked=\\\"false\\\" [(ngModel)]=\\\"adminService.editMode\\\">Edit Mode</mat-checkbox>\\n\\n<mat-divider></mat-divider>\\n<br />\\n<br />\\n\\n<mat-select [(ngModel)]=\\\"selectedResource\\\">\\n  <mat-option *ngFor=\\\"let resource of resourcesService.resources\\\" [value]=\\\"resource\\\">\\n    {{resource.name | titlecase}}\\n  </mat-option>\\n</mat-select>\\n\\n<mat-divider></mat-divider>\\n<br />\\n<br />\\n\\n<mat-form-field class=\\\"example-full-width\\\">\\n  <input matInput [(ngModel)]=\\\"amount\\\">\\n</mat-form-field>\\n<button mat-raised-button (click)=\\\"addResourceAmount()\\\">Add to all resources</button>\\n<div *ngIf=\\\"selectedResource !== undefined\\\">\\n  <button mat-raised-button (click)=\\\"addResourceAmount(selectedResource)\\\">Add to {{selectedResource.name | titlecase}}</button>\\n  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"stringifyResource(selectedResource)\\\">Export {{selectedResource.name | titlecase}} To JSON</button>\\n</div>\\n\\n<button mat-raised-button color=\\\"primary\\\" (click)=\\\"openResourceDialog()\\\">New Resource</button>\\n<button mat-raised-button color=\\\"primary\\\" (click)=\\\"openUpgradeDialog()\\\">New Upgrade</button>\\n\\n<mat-divider></mat-divider>\\n<br />\\n<br />\\n\\n<button mat-raised-button color=\\\"accent\\\" (click)=\\\"stringifyResources()\\\">Export Resources To JSON</button>\\n<button mat-raised-button color=\\\"accent\\\" (click)=\\\"stringifyWorkers()\\\">Export Workers To JSON</button>\\n<button mat-raised-button color=\\\"accent\\\" (click)=\\\"stringifyUpgrades()\\\">Export Upgrades To JSON</button>\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { AdminService } from '../../services/admin/admin.service';\r\nimport { ResourcesService } from '../../services/resources/resources.service';\r\nimport { Resource } from '../../objects/resource';\r\nimport { Worker } from '../../objects/worker';\r\nimport { WorkersService } from '../../services/workers/workers.service';\r\nimport { UpgradesService } from '../../services/upgrades/upgrades.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-debug',\r\n  templateUrl: './admin-debug.component.html',\r\n  styleUrls: ['./admin-debug.component.css']\r\n})\r\nexport class AdminDebugComponent implements OnInit {\r\n  public filterAccessible = true;\r\n\r\n  protected selectedResource: Resource;\r\n  amount: number;\r\n\r\n  constructor(\r\n    protected resourcesService: ResourcesService,\r\n    protected workersService: WorkersService,\r\n    protected upgradesService: UpgradesService,\r\n    protected adminService: AdminService\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  openResourceDialog() {\r\n    this.adminService.openResourceDialog();\r\n  }\r\n\r\n  openUpgradeDialog() {\r\n    this.adminService.openUpgradeDialog();\r\n  }\r\n\r\n  addResourceAmount(selectedResource: Resource) {\r\n    if (selectedResource === undefined) {\r\n      for (const resource of this.resourcesService.resources) {\r\n        this.resourcesService.addResourceAmount(resource.id, +this.amount);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    this.resourcesService.addResourceAmount(\r\n      +selectedResource.id,\r\n      +this.amount\r\n    );\r\n  }\r\n\r\n  prepareResourceForJson(resource: Resource) {\r\n    resource.id = +resource.id;\r\n\r\n    resource.amount = +resource.amount;\r\n\r\n    for (const resourceConsume of resource.resourceConsumes) {\r\n      resourceConsume.resourceId = +resourceConsume.resourceId;\r\n      resourceConsume.cost = +resourceConsume.cost;\r\n    }\r\n\r\n    resource.harvestYield = +resource.harvestYield;\r\n    resource.harvestMilliseconds = +resource.harvestMilliseconds;\r\n\r\n    resource.workerYield = +resource.workerYield;\r\n    resource.sellsFor = +resource.sellsFor;\r\n\r\n    resource.resourceTier = +resource.resourceTier;\r\n    resource.previousTier = resource.resourceTier === 0 ? 0 : resource.resourceTier - 1;\r\n    resource.resourceAccessible = resource.resourceTier === 0;\r\n\r\n    resource.worker.workerCount = +resource.worker.workerCount;\r\n    resource.worker.cost = +resource.worker.cost;\r\n\r\n    resource.amount = 0;\r\n    resource.resourceAccessible = resource.resourceTier === 0;\r\n  }\r\n\r\n  prepareWorkerForJson(worker: Worker) {\r\n    worker.id = +worker.id;\r\n\r\n    worker.cost = +worker.cost;\r\n\r\n    for (const resourceWorker of worker.workersByResource) {\r\n      resourceWorker.resourceId = +resourceWorker.resourceId;\r\n\r\n      resourceWorker.workerCount = +resourceWorker.workerCount;\r\n      resourceWorker.workerYield = +resourceWorker.workerYield;\r\n    }\r\n\r\n    worker.workerCount = 0;\r\n    worker.freeWorkers = 0;\r\n  }\r\n\r\n  stringifyResource(resource: Resource) {\r\n    this.prepareResourceForJson(resource);\r\n\r\n    const resourceJson = JSON.stringify(resource);\r\n    alert(resourceJson);\r\n    console.log(resourceJson);\r\n  }\r\n\r\n  stringifyResources() {\r\n    for (const resource of this.resourcesService.resources) {\r\n      this.prepareResourceForJson(resource);\r\n    }\r\n\r\n    const resourcesJson = JSON.stringify(this.resourcesService.resources);\r\n    alert(resourcesJson);\r\n    console.log(resourcesJson);\r\n  }\r\n\r\n  stringifyWorkers() {\r\n    for (const worker of this.workersService.workers) {\r\n      this.prepareWorkerForJson(worker);\r\n    }\r\n\r\n    const workersJson = JSON.stringify(this.workersService.workers);\r\n    alert(workersJson);\r\n    console.log(workersJson);\r\n  }\r\n\r\n  stringifyUpgrades() {\r\n    const upgradesJson = JSON.stringify(this.upgradesService.upgrades);\r\n    alert(upgradesJson);\r\n    console.log(upgradesJson);\r\n  }\r\n}\r\n","module.exports = \"/* ClickerMainComponent's private CSS styles */\\r\\n.resources {\\r\\n  margin: 0 0 2em 0;\\r\\n  list-style-type: none;\\r\\n  padding: 0;\\r\\n  width: 25em;\\r\\n}\\r\\n.resources mat-expansion-panel {\\r\\n  margin: 0;\\r\\n}\\r\\n.resources mat-expansion-panel-header {\\r\\n  height: 30px !important;\\r\\n}\\r\\n.resources mat-card-subtitle {\\r\\n  position: absolute;\\r\\n  top: 10px;\\r\\n  right: 10px;\\r\\n  font-weight: bold;\\r\\n}\\r\\n.resources .resource-button {\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n  margin: .5em;\\r\\n  padding: .4em 0;\\r\\n  height: 3.6em;\\r\\n  width: 100%;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.resources .resource-button:hover {\\r\\n  left: .1em;\\r\\n}\\r\\n.resources .resource-button.mat-disabled {\\r\\n  cursor: default;\\r\\n}\\r\\n.resources .badge {\\r\\n  display: inline-block;\\r\\n  font-size: small;\\r\\n  color: white;\\r\\n  padding: 0.8em 0.7em 0 0.7em;\\r\\n  background-color: #607D8B;\\r\\n  line-height: 1em;\\r\\n  position: absolute;\\r\\n  right: -9px;\\r\\n  top: 1px;\\r\\n  height: 1.8em;\\r\\n  min-width: 16px;\\r\\n  text-align: center;\\r\\n  margin-right: .8em;\\r\\n  border-radius: 0 4px 4px 0;\\r\\n}\\r\\n.button-container {\\r\\n  position: relative;\\r\\n}\\r\\n.travelling-count {\\r\\n  position: absolute;\\r\\n  top: 22px;\\r\\n  right: 3px;\\r\\n}\\r\\n.resource-button {\\r\\n  background-color: #eee;\\r\\n  border: none;\\r\\n  padding: 5px 10px;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n  cursor: hand;\\r\\n  font-family: Arial;\\r\\n}\\r\\n.harvest-progress {\\r\\n  display: flex;\\r\\n  align-content: center;\\r\\n  align-items: center;\\r\\n\\r\\n  height: 100%;\\r\\n  top: 0px;\\r\\n\\r\\n  position: absolute;\\r\\n  opacity: 0.5;\\r\\n}\\r\\n.resource-img {\\r\\n  position: absolute;\\r\\n\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n}\\r\\n\"","module.exports = \"<ul class=\\\"resources noselect\\\">\\n  <mat-accordion multi=\\\"true\\\">\\n    <mat-expansion-panel expanded=\\\"true\\\" *ngFor=\\\"let resourceType of resourceTypes | enumToArray\\\">\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          {{resourceType}}\\n        </mat-panel-title>\\n        <mat-panel-description>\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n\\n      <div class='button-container' *ngFor=\\\"let resource of resourcesOfType(resourceType, adminService.filterAccessible)\\\">\\n        <button mat-raised-button class=\\\"resource-button\\\" color=\\\"accent\\\" [disabled]=\\\"!canHarvest(resource.id)\\\" [id]=\\\"resource.id\\\"\\n          (click)='startHarvesting(resource.id)' matTooltip=\\\"{{getTooltipMessage(resource.id)}}\\\" matTooltipPosition=\\\"right\\\">\\n          <mat-card-title>{{resource.name | titlecase }}</mat-card-title>\\n          <mat-card-subtitle>{{resource.amount | number:'1.0-0'}}</mat-card-subtitle>\\n          <mat-progress-bar [class.hidden]=\\\"!resource.harvesting\\\" class=\\\"harvest-progress\\\" [mode]=\\\"progressBarMode\\\" [value]=\\\"resource.progressBarValue\\\"></mat-progress-bar>\\n          <img class=\\\"resource-img\\\" src=\\\"{{resource.iconPath}}\\\" alt=\\\"{{resource.name}}\\\" *ngIf=\\\"resource.iconPath !== ''\\\">\\n          <div class='travelling-count' *ngIf=\\\"resource.amountTravelling > 0\\\">{{resource.amountTravelling}} Travelling</div>\\n        </button>\\n\\n        <div *ngIf=\\\"adminService.editMode\\\">\\n          <br />\\n          <button (click)=\\\"editResource(resource.id)\\\">Edit {{resource.name | titlecase}}</button>\\n        </div>\\n      </div>\\n    </mat-expansion-panel>\\n  </mat-accordion>\\n</ul>\\n\"","import { Component, OnInit, } from '@angular/core';\r\n\r\nimport { ClickerMainService } from './../../services/clicker-main/clicker-main.service';\r\nimport { ResourcesService } from '../../services/resources/resources.service';\r\nimport { ResourceType, Resource } from '../../objects/resource';\r\nimport { WorkersService } from '../../services/workers/workers.service';\r\nimport { TooltipService } from './../../services/tooltip/tooltip.service';\r\nimport { MapService } from './../../services/map/map.service';\r\nimport { AdminService } from './../../services/admin/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-clicker-main',\r\n  templateUrl: './clicker-main.component.html',\r\n  styleUrls: ['./clicker-main.component.css']\r\n})\r\nexport class ClickerMainComponent implements OnInit {\r\n  resourceTypes = ResourceType;\r\n\r\n  constructor(protected clickerMainService: ClickerMainService,\r\n              protected resourcesService: ResourcesService,\r\n              protected workersService: WorkersService,\r\n              protected tooltipService: TooltipService,\r\n              protected mapService: MapService,\r\n              protected adminService: AdminService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  resourcesOfType(resourceType: string, filterByAccessible: boolean): Resource[] {\r\n    return this.resourcesService.resourcesOfType(this.resourceTypes[resourceType], false, filterByAccessible);\r\n  }\r\n\r\n  public getTooltipMessage(id: number): string {\r\n    return this.tooltipService.getResourceTooltip(id);\r\n  }\r\n\r\n  canHarvest(id: number): boolean {\r\n    return this.resourcesService.canHarvest(id) && this.mapService.resourceTileUsable(id);\r\n  }\r\n\r\n  startHarvesting(id: number) {\r\n    this.clickerMainService.startHarvesting(id);\r\n  }\r\n\r\n  stopHarvesting(id: number) {\r\n    this.clickerMainService.stopHarvesting(id);\r\n  }\r\n\r\n  shouldAnimateProgressBar(id: number): boolean {\r\n    return this.clickerMainService.shouldAnimateProgressBar(id);\r\n  }\r\n\r\n  harvestResource(id: number) {\r\n    this.clickerMainService.harvestResource(id);\r\n  }\r\n\r\n  editResource(id: number) {\r\n    this.adminService.openResourceDialog(id);\r\n  }\r\n}\r\n","module.exports = \".building-list {\\r\\n  display: flex;\\r\\n  max-width: 1000px;\\r\\n  overflow-x: scroll;\\r\\n  height: 230px;\\r\\n}\\r\\n\\r\\n.resource-list {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.resource-list div {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n.resource-list img {\\r\\n  width: 16px;\\r\\n  height: 16px;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  height: 180px;\\r\\n}\\r\\n\"","module.exports = \"<canvas appNoScroll appMap width=\\\"960\\\" height=\\\"750\\\"></canvas>\\r\\n<br />\\r\\n<br />\\r\\n\\r\\n<mat-checkbox [(ngModel)]=\\\"deleteMode\\\" color=\\\"warn\\\">Delete Buildings</mat-checkbox>\\r\\n<div class=\\\"building-list\\\">\\r\\n  <div *ngFor=\\\"let buildingTile of getBuildingTileArray(true)\\\">\\r\\n    <button mat-raised-button [color]=\\\"selectedBuilding === buildingTile && !deleteMode ? 'accent' : ''\\\" (click)=\\\"selectBuilding(buildingTile)\\\">\\r\\n      <mat-card-title>{{buildingTile.name}}</mat-card-title>\\r\\n      <mat-card-subtitle>{{buildingTile.description}}</mat-card-subtitle>\\r\\n      <mat-card-content>\\r\\n        <h3>Costs</h3>\\r\\n        <div class=\\\"resource-list\\\">\\r\\n          <b><mat-icon *ngIf=\\\"canAffordBuilding(buildingTile.tileType)\\\" color=\\\"primary\\\">check</mat-icon>\\r\\n          </b>\\r\\n          <div *ngFor=\\\"let resourceCost of buildingTile.resourceCosts\\\" matTooltip=\\\"{{resourceCost.resourceCost}} {{getResource(resourceCost.resourceId).name | titlecase}}\\\" matTooltipPosition=\\\"below\\\">\\r\\n            <img src=\\\"{{getResource(resourceCost.resourceId).iconPath}}\\\" alt=\\\"{{getResource(resourceCost.resourceId).name}}\\\"> {{resourceCost.resourceCost}}\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, HostListener, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\n\r\nimport { MapTileType, Tile, BuildingTileType, MapTile, BuildingTile } from '../../objects/tile';\r\nimport { MapService } from '../../services/map/map.service';\r\nimport { AdminService } from '../../services/admin/admin.service';\r\nimport { ResourcesService } from '../../services/resources/resources.service';\r\nimport { Resource } from '../../objects/resource';\r\n\r\ndeclare var d3: any;\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.css']\r\n})\r\nexport class MapComponent implements OnInit, AfterViewInit {\r\n  mapTileTypes = MapTileType;\r\n  buildingTileTypes = BuildingTileType;\r\n\r\n  constructor(protected mapService: MapService,\r\n              protected resourcesService: ResourcesService,\r\n              protected adminService: AdminService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  selectBuilding(buildingTile: BuildingTile) {\r\n    if (this.selectedBuilding === buildingTile) {\r\n      this.selectedBuilding = undefined;\r\n    } else {\r\n      this.selectedBuilding = buildingTile;\r\n    }\r\n  }\r\n\r\n  canAffordBuilding(buildingType: BuildingTileType): boolean {\r\n    return this.mapService.canAffordBuilding(this.buildingTiles[buildingType]);\r\n  }\r\n\r\n  createBuilding(tile: Tile, buildingType: BuildingTileType) {\r\n    const buildingCreated = this.mapService.createBuilding(tile, buildingType);\r\n  }\r\n\r\n  clearBuilding(tile: Tile) {\r\n    this.mapService.clearBuilding(tile);\r\n  }\r\n\r\n  get buildingTiles() {\r\n    return this.mapService.buildingTiles;\r\n  }\r\n\r\n  getBuildingTileArray(filterByPlaceable: boolean): BuildingTile[] {\r\n    let tiles = this.mapService.buildingTileArray;\r\n\r\n    if (filterByPlaceable) {\r\n      tiles = tiles.filter(tile => tile.placeable);\r\n    }\r\n\r\n    return tiles;\r\n  }\r\n\r\n  getResource(resourceId: number): Resource {\r\n    return this.resourcesService.getResource(resourceId);\r\n  }\r\n\r\n  get deleteMode(): boolean {\r\n    return this.mapService.deleteMode;\r\n  }\r\n\r\n  set deleteMode(value) {\r\n    this.mapService.deleteMode = value;\r\n  }\r\n\r\n  get selectedBuilding(): BuildingTile {\r\n    return this.mapService.selectedBuilding;\r\n  }\r\n\r\n  set selectedBuilding(value) {\r\n    this.mapService.selectedBuilding = value;\r\n  }\r\n\r\n  get rowCount(): number {\r\n    return this.mapService.getRowCount();\r\n  }\r\n\r\n  get columnCount(): number {\r\n    return this.mapService.getColumnCount();\r\n  }\r\n}\r\n","module.exports = \"/* MessagesComponent's private CSS styles */\\r\\nh2 {\\r\\n  color: red;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-weight: lighter;\\r\\n}\\r\\nbody {\\r\\n  margin: 2em;\\r\\n}\\r\\nbody, input[text], button {\\r\\n  color: crimson;\\r\\n  font-family: Cambria, Georgia;\\r\\n}\\r\\nbutton.clear {\\r\\n  font-family: Arial;\\r\\n  background-color: #eee;\\r\\n  border: none;\\r\\n  padding: 5px 10px;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n  cursor: hand;\\r\\n}\\r\\nbutton:hover {\\r\\n  background-color: #cfd8dc;\\r\\n}\\r\\nbutton:disabled {\\r\\n  background-color: #eee;\\r\\n  color: #aaa;\\r\\n  cursor: auto;\\r\\n}\\r\\nbutton.clear {\\r\\n  color: #888;\\r\\n  margin-bottom: 12px;\\r\\n}\"","module.exports = \"<!-- <div *ngIf=\\\"messagesService.messages.length\\\"> -->\\n\\n\\t<h2>Messages</h2>\\n\\t<button class=\\\"clear\\\"\\n\\t\\t\\t(click)=\\\"messagesService.clear()\\\">clear</button>\\n\\t<div *ngFor='let message of messagesService.messages'> {{message}} </div>\\n\\n<!-- </div> -->\"","import { Component, OnInit } from '@angular/core';\nimport { MessagesService } from '../../services/messages/messages.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messagesService: MessagesService) { }\n\n  ngOnInit() { }\n\n}\n","module.exports = \".full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.inner-delete {\\r\\n  position: absolute;\\r\\n  top: 5px;\\r\\n  right: 5px;\\r\\n}\\r\\n\"","module.exports = \"<mat-vertical-stepper>\\n  <mat-step *ngIf=\\\"!editMode\\\">\\n    <ng-template matStepLabel>Select Resource Template</ng-template>\\n    <mat-form-field class=\\\"full-width\\\">\\n      <mat-select [(ngModel)]=\\\"oldResourceId\\\" [compareWith]=\\\"compareFn\\\" (selectionChange)=\\\"populateResource()\\\">\\n        <mat-option placeholder=\\\"Resource Type\\\" *ngFor=\\\"let resource of resourcesService.resources\\\" value=\\\"{{resource.id}}\\\">\\n          {{resource.name | titlecase}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <div>\\n      <button mat-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step>\\n    <ng-template matStepLabel>Set Resource Details</ng-template>\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"resource.name\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <mat-select [(ngModel)]=\\\"resource.resourceType\\\">\\n        <mat-option placeholder=\\\"Resource Type\\\" *ngFor=\\\"let resourceType of resourceTypes | enumToArray\\\" value=\\\"{{resourceTypes[resourceType]}}\\\">\\n          {{resourceType}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Icon Path\\\" [(ngModel)]=\\\"resource.iconPath\\\">\\n    </mat-form-field>\\n\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step>\\n    <ng-template matStepLabel>Set Resource Consumes</ng-template>\\n\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"newResourceConsume()\\\">Add New Consumed Resource</button>\\n    <div *ngFor=\\\"let resourceConsume of resource.resourceConsumes\\\">\\n      <mat-card>\\n        <button class=\\\"inner-delete\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"removeResourceConsume(resourceConsume)\\\">Remove Consumed Resource</button>\\n        <mat-form-field class=\\\"full-width\\\">\\n          <mat-select [(ngModel)]=\\\"resourceConsume.resourceId\\\" [compareWith]=\\\"compareFn\\\">\\n            <mat-option placeholder=\\\"Resource\\\" *ngFor=\\\"let _resource of resourcesService.resources\\\" value=\\\"{{_resource.id}}\\\">\\n              {{_resource.name | titlecase }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput placeholder=\\\"Cost\\\" [(ngModel)]=\\\"resourceConsume.cost\\\">\\n        </mat-form-field>\\n      </mat-card>\\n    </div>\\n\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step>\\n    <ng-template matStepLabel>Set Resource Values</ng-template>\\n\\n    <mat-checkbox [(ngModel)]=\\\"resource.harvestable\\\">Harvestable</mat-checkbox>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Harvest Yield\\\" [(ngModel)]=\\\"resource.harvestYield\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Harvest Time (Milliseconds)\\\" [(ngModel)]=\\\"resource.harvestMilliseconds\\\">\\n    </mat-form-field>\\n\\n    <mat-divider></mat-divider>\\n    <br />\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Worker Yield\\\" [(ngModel)]=\\\"resource.workerYield\\\">\\n    </mat-form-field>\\n\\n    <mat-divider></mat-divider>\\n    <br />\\n\\n    <mat-checkbox [(ngModel)]=\\\"resource.sellable\\\">Sellable</mat-checkbox>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Sells For\\\" [(ngModel)]=\\\"resource.sellsFor\\\">\\n    </mat-form-field>\\n\\n    <mat-divider></mat-divider>\\n    <br />\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Resource Tier\\\" [(ngModel)]=\\\"resource.resourceTier\\\">\\n    </mat-form-field>\\n\\n    <div *ngIf=\\\"resourceWorker !== null\\\">\\n      <mat-divider></mat-divider>\\n      <br />\\n\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput placeholder=\\\"Worker Yield\\\" [(ngModel)]=\\\"resourceWorker.workerYield\\\">\\n      </mat-form-field>\\n    </div>\\n\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step>\\n    <ng-template matStepLabel>Set Description</ng-template>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Resource Description\\\" [(ngModel)]=\\\"resource.resourceDescription\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Worker Verb\\\" [(ngModel)]=\\\"resource.workerVerb\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Worker Noun\\\" [(ngModel)]=\\\"resource.workerNoun\\\">\\n    </mat-form-field>\\n\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step>\\n    <ng-template matStepLabel>Done</ng-template>\\n    {{resource.name}} configured.\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-raised-button (click)=\\\"saveResource()\\\">Save Resource</button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"stepper.reset()\\\">Reset</button>\\n    </div>\\n  </mat-step>\\n</mat-vertical-stepper>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { ResourceType, ResourceConsume, Resource } from '../../objects/resource';\nimport { ResourcesService } from '../../services/resources/resources.service';\nimport { Worker, ResourceWorker } from '../../objects/worker';\nimport { WorkersService } from '../../services/workers/workers.service';\n\n@Component({\n  selector: 'app-resource-dialog',\n  templateUrl: './resource-dialog.component.html',\n  styleUrls: ['./resource-dialog.component.css']\n})\nexport class ResourceDialogComponent implements OnInit {\n  resource: Resource = {\n    id: this.resourcesService.resources.length,\n    name: '',\n    resourceType: ResourceType.Currency,\n    amount: 0,\n    amountTravelling: 0,\n    iconPath: '',\n    resourceConsumes: [],\n    progressBarValue: 0,\n    harvestable: true,\n    harvesting: false,\n    harvestStartDate: Date.now(),\n    harvestYield: 1,\n    harvestMilliseconds: 1000,\n    workerYield: 1,\n    sellable: true,\n    sellsFor: 5,\n    resourceDescription: '',\n    workerVerb: '',\n    workerNoun: '',\n    resourceAccessible: true,\n    resourceTier: 0,\n    previousTier: 0,\n    worker: { workable: true, workerCount: 0, cost: 50 }\n  };\n  resourceWorker: ResourceWorker = this.workersService.getResourceWorker(0);\n\n  editMode = false;\n\n  oldResourceId = 0;\n\n  resourceTypes = ResourceType;\n\n  constructor(\n    protected resourcesService: ResourcesService,\n    protected workersService: WorkersService,\n    protected _formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<ResourceDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {}\n\n\n  ngOnInit() {\n    if (this.data.resourceId !== undefined) {\n      this.resource = this.resourcesService.getResource(this.data.resourceId);\n      this.resourceWorker = this.workersService.getResourceWorker(this.resource.id);\n\n      this.editMode = true;\n    }\n  }\n\n  populateResource() {\n    const resourceId = +this.oldResourceId;\n    const oldResource = this.resourcesService.getResource(resourceId);\n\n    this.resource.name = oldResource.name;\n    this.resource.resourceType = oldResource.resourceType;\n    this.resource.iconPath = oldResource.iconPath;\n    this.resource.amount = oldResource.amount;\n    this.resource.harvestable = oldResource.harvestable;\n    this.resource.harvestYield = oldResource.harvestYield;\n    this.resource.harvestMilliseconds = oldResource.harvestMilliseconds;\n    this.resource.workerYield = oldResource.workerYield;\n    this.resource.sellable = oldResource.sellable;\n    this.resource.sellsFor = oldResource.sellsFor;\n    this.resource.resourceDescription = oldResource.resourceDescription;\n    this.resource.workerVerb = oldResource.workerVerb;\n    this.resource.workerNoun = oldResource.workerNoun;\n    this.resource.resourceAccessible = oldResource.resourceAccessible;\n    this.resource.resourceTier = oldResource.resourceTier;\n    this.resource.previousTier = oldResource.previousTier;\n\n    for (const resourceConsume of oldResource.resourceConsumes) {\n      this.resource.resourceConsumes.push({\n        resourceId: resourceConsume.resourceId,\n        cost: resourceConsume.cost\n      });\n    }\n\n    this.resource.worker = {\n      workable: oldResource.worker.workable,\n      workerCount: oldResource.worker.workerCount,\n      cost: oldResource.worker.cost\n    };\n\n    this.resourceWorker = {\n      resourceId: resourceId,\n      workable: true,\n      workerCount: 0,\n      workerYield: 1,\n      sliderSetting: 0,\n      sliderSettingValid: true\n    };\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  newResourceConsume() {\n    this.resource.resourceConsumes[this.resource.resourceConsumes.length] = {resourceId: 0, cost: 1};\n  }\n\n  removeResourceConsume(resourceConsume: ResourceConsume) {\n    this.resource.resourceConsumes = this.resource.resourceConsumes.filter(rc => rc !== resourceConsume);\n  }\n\n  updateResourceWorker() {\n    const worker = this.workersService.getWorker(this.resource.resourceType);\n\n    if (worker === undefined) {\n      console.log(`No worker found for ${this.resource.resourceType}`);\n      return;\n    }\n\n    this.resourceWorker.resourceId = this.resource.id;\n\n    const resourceWorkers = worker.workersByResource;\n\n    if (!resourceWorkers.find(rw => rw === this.resourceWorker)) {\n      resourceWorkers.push(this.resourceWorker);\n    }\n  }\n\n  saveResource() {\n    this.updateResourceWorker();\n\n    let existingResource = this.resourcesService.getResource(this.resource.id);\n\n    if (existingResource === undefined) {\n      this.resourcesService.resources.push(this.resource);\n    } else {\n      existingResource = this.resource;\n    }\n  }\n\n  compareFn(item1: number, item2: number) {\n    return +item1 === +item2;\n  }\n}\n","module.exports = \".full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<div *ngIf=\\\"!exportMode\\\">\\n  Paste Save\\n  <mat-form-field class=\\\"full-width\\\">\\n    <input matInput placeholder=\\\"Save Data\\\" [(ngModel)]=\\\"saveData\\\" (submit)=\\\"exportData()\\\">\\n  </mat-form-field>\\n\\n  <div>\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"exportData()\\\">Load</button>\\n    <button mat-raised-button (click)=\\\"onNoClick()\\\">Cancel</button>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"exportMode\\\" style=\\\"word-wrap: break-word\\\">\\n  <textarea readonly id=\\\"saveData\\\" class=\\\"full-width\\\">{{saveData}}</textarea>\\n  <div>\\n    <button mat-raised-button class=\\\"copy-button\\\" color=\\\"accent\\\" data-clipboard-action=\\\"copy\\\" data-clipboard-target=\\\"#saveData\\\">Copy to Clipboard</button>\\n    <button mat-raised-button (click)=\\\"onNoClick()\\\">Close</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport * as ClipboardJS from 'clipboard';\n\n@Component({\n  selector: 'app-save-dialog',\n  templateUrl: './save-dialog.component.html',\n  styleUrls: ['./save-dialog.component.css']\n})\nexport class SaveDialogComponent implements OnInit {\n  saveData: string;\n  exportMode = false;\n  clipboard;\n\n  constructor(public dialogRef: MatDialogRef<SaveDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n    if (this.data.saveData !== undefined) {\n      this.saveData = this.data.saveData;\n      this.exportMode = true;\n\n      this.clipboard = new ClipboardJS('.copy-button');\n    }\n  }\n\n  exportData() {\n    this.dialogRef.close(this.saveData);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"\"","module.exports = \"<mat-accordion>\\n  <mat-expansion-panel expanded=\\\"true\\\">\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        <mat-icon color=\\\"primary\\\">save</mat-icon>\\n        Save/Load\\n      </mat-panel-title>\\n    </mat-expansion-panel-header>\\n\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Autosave Interval (Minutes)\\\" [(value)]=\\\"autosaveInterval\\\" (valueChange)=\\\"setAutosave()\\\">\\n        <mat-option [value]=\\\"-1\\\">Disable</mat-option>\\n        <mat-option [value]=\\\"60000\\\">1</mat-option>\\n        <mat-option [value]=\\\"900000\\\">15</mat-option>\\n        <mat-option [value]=\\\"1800000\\\">30</mat-option>\\n        <mat-option [value]=\\\"3600000\\\">60</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"saveGame()\\\">Save</button>\\n    <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteGame()\\\">Delete Save</button>\\n\\n    <button mat-raised-button (click)=\\\"exportSave()\\\">Export Save</button>\\n    <button mat-raised-button (click)=\\\"importSave()\\\">Import Save</button>\\n  </mat-expansion-panel>\\n\\n</mat-accordion>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { SettingsService } from '../../services/settings/settings.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n  constructor(protected settingsService: SettingsService) { }\n\n  ngOnInit() {\n  }\n\n  setAutosave() {\n    this.settingsService.setAutosave();\n  }\n\n  saveGame() {\n    this.settingsService.saveGame();\n  }\n\n  loadGame() {\n    this.settingsService.loadGame();\n  }\n\n  deleteGame() {\n    if (confirm('Are you sure you want to delete your save?')) {\n      this.settingsService.deleteSave();\n    }\n  }\n\n  exportSave() {\n    this.settingsService.openSaveDialog(this.settingsService.exportSave());\n  }\n\n  importSave() {\n    this.settingsService.openSaveDialog();\n    // this.settingsService.importSave(prompt('Paste Save Data'));\n  }\n\n  get autosaveInterval() {\n    return this.settingsService.autosaveInterval;\n  }\n\n  set autosaveInterval(value: number) {\n    this.settingsService.autosaveInterval = value;\n  }\n}\n","module.exports = \"/* StoreComponent's private CSS styles */\\r\\n.store {\\r\\n  margin: 0 0 2em 0;\\r\\n  list-style-type: none;\\r\\n  padding: 0;\\r\\n  width: 25em;\\r\\n}\\r\\n.store mat-expansion-panel {\\r\\n  margin: 0;\\r\\n}\\r\\n.store mat-expansion-panel-header {\\r\\n  height: 30px !important;\\r\\n}\\r\\n.store mat-card-subtitle {\\r\\n  position: absolute;\\r\\n  top: 10px;\\r\\n  right: 10px;\\r\\n}\\r\\n.store mat-card {\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n  background-color: #EEE;\\r\\n  margin: .5em;\\r\\n  padding: .4em 0;\\r\\n  height: 1.6em;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.store mat-card:hover {\\r\\n  color: #607D8B;\\r\\n  background-color: #DDD;\\r\\n  left: .1em;\\r\\n}\\r\\n.store a {\\r\\n  color: #888;\\r\\n  text-decoration: none;\\r\\n  position: relative;\\r\\n  display: block;\\r\\n  width: 250px;\\r\\n}\\r\\n.store a:hover {\\r\\n  color:#607D8B;\\r\\n}\\r\\n.store .harvestable {\\r\\n  background-color: antiquewhite;\\r\\n}\\r\\n.store .harvestable:hover {\\r\\n  background-color: blanchedalmond;\\r\\n}\\r\\n.store .badge {\\r\\n  display: inline-block;\\r\\n  font-size: small;\\r\\n  color: white;\\r\\n  padding: 0.8em 0.7em 0 0.7em;\\r\\n  background-color: #607D8B;\\r\\n  line-height: 1em;\\r\\n  position: absolute;\\r\\n  right: -9px;\\r\\n  top: 1px;\\r\\n  height: 1.8em;\\r\\n  min-width: 16px;\\r\\n  text-align: center;\\r\\n  margin-right: .8em;\\r\\n  border-radius: 0 4px 4px 0;\\r\\n}\\r\\n.right {\\r\\n  position: absolute;\\r\\n  right: 3px;\\r\\n  top: 3px;\\r\\n}\\r\\nbutton {\\r\\n  min-width: unset;\\r\\n  height: 27px;\\r\\n  line-height: unset;\\r\\n}\\r\\nbutton:hover {\\r\\n  background-color: #cfd8dc;\\r\\n}\\r\\nbutton.delete {\\r\\n  position: relative;\\r\\n  left: 194px;\\r\\n  top: -32px;\\r\\n  background-color: gray !important;\\r\\n  color: white;\\r\\n}\"","module.exports = \"<ul class=\\\"store\\\">\\n  <mat-accordion multi=\\\"true\\\">\\n      <mat-expansion-panel expanded=\\\"true\\\" *ngFor=\\\"let resourceType of resourceTypes | enumToArray\\\">\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            {{resourceType}}\\n          </mat-panel-title>\\n          <mat-panel-description>\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n\\n        <mat-card *ngFor=\\\"let resource of resourcesOfType(resourceType, true, adminService.filterAccessible)\\\"\\n          matTooltip=\\\"Sells for {{resource.sellsFor}} gold.\\\" matTooltipPosition=\\\"right\\\">\\n          {{resource.name | titlecase }}\\n          <span class=\\\"right\\\">\\n              <button mat-flat-button color='accent' [disabled]='!canSellResource(resource.id, 1)' (click)='sellResource(resource.id, 1)'>1x</button>\\n              <button mat-flat-button color='accent' [disabled]='!canSellResource(resource.id, 10)' (click)='sellResource(resource.id, 10)'>10x</button>\\n              <button mat-flat-button color='accent' [disabled]='!canSellResource(resource.id, 100)' (click)='sellResource(resource.id, 100)'>100x</button>\\n              <button mat-flat-button color='accent' [disabled]='!canSellResource(resource.id, -1)' (click)='sellResource(resource.id, -1)'>All</button>\\n            </span>\\n        </mat-card>\\n      </mat-expansion-panel>\\n    </mat-accordion>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Resource, ResourceType } from '../../objects/resource';\nimport { ResourcesService } from '../../services/resources/resources.service';\nimport { StoreService } from '../../services/store/store.service';\nimport { AdminService } from '../../services/admin/admin.service';\n\n@Component({\n  selector: 'app-store',\n  templateUrl: './store.component.html',\n  styleUrls: ['./store.component.css']\n})\nexport class StoreComponent implements OnInit {\n  resourceTypes = ResourceType;\n\n  constructor(private resourcesService: ResourcesService,\n              private storeService: StoreService,\n              private adminService: AdminService) { }\n\n  ngOnInit() {\n  }\n\n  canSellResource(id: number, amount: number) {\n    return this.storeService.canSellResource(id, amount);\n  }\n\n  resourcesOfType(resourceType: string, filterBySellable: boolean, filterByAccessible): Resource[] {\n    return this.storeService.resourcesOfType(this.resourceTypes[resourceType], filterBySellable, filterByAccessible);\n  }\n\n  sellResource(id: number, amount: number) {\n    const resource = this.resourcesService.getResource(id);\n\n    this.storeService.sellResource(id, amount);\n  }\n}\n","module.exports = \".full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.inner-delete {\\r\\n  position: absolute;\\r\\n  top: 5px;\\r\\n  right: 5px;\\r\\n}\\r\\n\"","module.exports = \"<mat-vertical-stepper>\\n  <mat-step *ngIf=\\\"!editMode\\\">\\n    <ng-template matStepLabel>Select Upgrade Template</ng-template>\\n    <mat-form-field class=\\\"full-width\\\">\\n      <mat-select [(ngModel)]=\\\"oldUpgradeId\\\" [compareWith]=\\\"compareFn\\\" (selectionChange)=\\\"populateUpgrade()\\\">\\n        <mat-option placeholder=\\\"Upgrade Type\\\" *ngFor=\\\"let upgrade of upgradesService.upgrades\\\" value=\\\"{{upgrade.id}}\\\">\\n          {{upgrade.name | titlecase}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <div>\\n      <button mat-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step>\\n    <ng-template matStepLabel>Set Upgrade Details</ng-template>\\n    <mat-form-field class=\\\"full-width\\\">\\n      <mat-select [(ngModel)]=\\\"upgrade.upgradeType\\\">\\n        <mat-option placeholder=\\\"Upgrade Type\\\" *ngFor=\\\"let upgradeType of upgradeTypes | enumToArray\\\" value=\\\"{{upgradeTypes[upgradeType]}}\\\">\\n          {{upgradeType}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"upgrade.name\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Description\\\" [(ngModel)]=\\\"upgrade.description\\\">\\n    </mat-form-field>\\n\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step>\\n    <ng-template matStepLabel>Set Upgrade Effects</ng-template>\\n\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"newUpgradeEffect()\\\">Add New Upgrade Effect</button>\\n    <div *ngFor=\\\"let upgradeEffect of upgrade.upgradeEffects\\\">\\n      <mat-card>\\n        <button class=\\\"inner-delete\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"removeUpgradeEffect(upgradeEffect)\\\">Remove Upgrade Effect</button>\\n        <mat-checkbox [(ngModel)]=\\\"upgradeEffect.upgradeIsForWholeType\\\">Upgrade Is For Whole Type</mat-checkbox>\\n\\n        <div *ngIf=\\\"upgradeEffect.upgradeIsForWholeType\\\">\\n          <mat-form-field class=\\\"full-width\\\">\\n            <mat-select [(ngModel)]=\\\"upgradeEffect.resourceType\\\">\\n              <mat-option placeholder=\\\"Resource Type\\\" *ngFor=\\\"let resourceType of resourceTypes | enumToArray\\\" value=\\\"{{resourceTypes[resourceType]}}\\\">\\n                {{resourceType}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"full-width\\\">\\n            <input matInput placeholder=\\\"Max Tier\\\" [(ngModel)]=\\\"upgradeEffect.maxTier\\\">\\n          </mat-form-field>\\n        </div>\\n        <div *ngIf=\\\"!upgradeEffect.upgradeIsForWholeType\\\">\\n          <mat-form-field class=\\\"full-width\\\">\\n            <mat-select [(ngModel)]=\\\"upgradeEffect.resourceId\\\" [compareWith]=\\\"compareFn\\\">\\n              <mat-option placeholder=\\\"Resource Type\\\" *ngFor=\\\"let resource of resourcesService.resources\\\" value=\\\"{{resource.id}}\\\">\\n                {{resource.name | titlecase}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n\\n        <mat-form-field class=\\\"full-width\\\">\\n          <mat-select [(ngModel)]=\\\"upgradeEffect.upgradeVariable\\\">\\n            <mat-option placeholder=\\\"Upgrade Variable\\\" *ngFor=\\\"let upgradeVariable of upgradeVariables | enumToArray\\\" value=\\\"{{upgradeVariables[upgradeVariable]}}\\\">\\n              {{upgradeVariable}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <div *ngIf=\\\"upgradeEffect.upgradeVariable === upgradeVariables.Harvestability || upgradeEffect.upgradeVariable === upgradeVariables.Workable\\\">\\n          <mat-checkbox [(ngModel)]=\\\"upgradeEffect.upgradeFactor\\\">{{upgradeEffect.upgradeVariable | titlecase}}</mat-checkbox>\\n        </div>\\n        <div *ngIf=\\\"upgradeEffect.upgradeVariable !== upgradeVariables.Harvestability && upgradeEffect.upgradeVariable !== upgradeVariables.Workable\\\">\\n          <mat-form-field class=\\\"full-width\\\">\\n            <input matInput placeholder=\\\"Upgrade Factor\\\" [(ngModel)]=\\\"upgradeEffect.upgradeFactor\\\">\\n          </mat-form-field>\\n        </div>\\n      </mat-card>\\n    </div>\\n\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step>\\n    <ng-template matStepLabel>Set Resource Costs</ng-template>\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"newResourceCost()\\\">Add New Resouce Cost</button>\\n    <div *ngFor=\\\"let resourceCost of upgrade.resourceCosts\\\">\\n      <mat-card>\\n        <button class=\\\"inner-delete\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"removeResourceCost(resourceCost)\\\">Remove Resource Cost</button>\\n        <mat-form-field class=\\\"full-width\\\">\\n          <mat-select [(ngModel)]=\\\"resourceCost.resourceId\\\" [compareWith]=\\\"compareFn\\\">\\n            <mat-option placeholder=\\\"Resource Type\\\" *ngFor=\\\"let resource of resourcesService.resources\\\" value=\\\"{{resource.id}}\\\">\\n              {{resource.name | titlecase}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput placeholder=\\\"Resource Cost\\\" [(ngModel)]=\\\"resourceCost.resourceCost\\\">\\n        </mat-form-field>\\n      </mat-card>\\n    </div>\\n\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n\\n  <mat-step>\\n    <ng-template matStepLabel>Done</ng-template>\\n    {{upgrade.name}} configured.\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-raised-button (click)=\\\"saveUpgrade()\\\">Save Upgrade</button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"stepper.reset()\\\">Reset</button>\\n    </div>\\n  </mat-step>\\n</mat-vertical-stepper>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\n\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { ResourceType, } from '../../objects/resource';\nimport { ResourcesService } from '../../services/resources/resources.service';\nimport { Upgrade, UpgradeType, UpgradeVariable, UpgradeEffect, ResourceCost } from '../../objects/upgrade';\nimport { UpgradesService } from '../../services/upgrades/upgrades.service';\nimport { ResourceDialogComponent } from '../resource-dialog/resource-dialog.component';\n\n@Component({\n  selector: 'app-upgrade-dialog',\n  templateUrl: './upgrade-dialog.component.html',\n  styleUrls: ['./upgrade-dialog.component.css']\n})\nexport class UpgradeDialogComponent implements OnInit {\n  upgrade: Upgrade = {\n    id: this.upgradesService.upgrades.length,\n    upgradeType: UpgradeType.Resource,\n    name: '',\n    description: '',\n    upgradeEffects: [],\n    resourceCosts: [],\n    purchased: false\n  };\n\n  editMode = false;\n\n  resourceTypes = ResourceType;\n  upgradeTypes = UpgradeType;\n  upgradeVariables = UpgradeVariable;\n\n  oldUpgradeId: 0;\n\n  constructor(protected resourcesService: ResourcesService,\n              protected upgradesService: UpgradesService,\n              protected _formBuilder: FormBuilder,\n              public dialogRef: MatDialogRef<ResourceDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n    if (this.data.upgradeId !== undefined) {\n      this.oldUpgradeId = this.data.upgradeId;\n\n      this.populateUpgrade();\n      this.upgrade.id = this.oldUpgradeId;\n\n      this.editMode = true;\n    }\n  }\n\n  populateUpgrade() {\n    const upgradeId = +this.oldUpgradeId;\n    const oldUpgrade = this.upgradesService.getUpgrade(upgradeId);\n\n    this.upgrade.name = oldUpgrade.name;\n    this.upgrade.upgradeType = oldUpgrade.upgradeType;\n    this.upgrade.description = oldUpgrade.description;\n    this.upgrade.purchased = false;\n\n    for (const upgradeEffect of oldUpgrade.upgradeEffects) {\n      this.upgrade.upgradeEffects.push({\n        upgradeIsForWholeType: upgradeEffect.upgradeIsForWholeType,\n        resourceType: upgradeEffect.resourceType,\n        resourceId: upgradeEffect.resourceId,\n        upgradeVariable: upgradeEffect.upgradeVariable,\n        upgradeFactor: upgradeEffect.upgradeFactor,\n      });\n    }\n\n    for (const resourceCost of oldUpgrade.resourceCosts) {\n      this.upgrade.resourceCosts.push({\n        resourceId: resourceCost.resourceId,\n        resourceCost: resourceCost.resourceCost\n      });\n    }\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  newUpgradeEffect() {\n    this.upgrade.upgradeEffects[this.upgrade.upgradeEffects.length] = {\n      upgradeIsForWholeType: false,\n      resourceId: 0,\n      upgradeVariable: UpgradeVariable.Harvestability,\n      upgradeFactor: 1\n    };\n  }\n\n  removeUpgradeEffect(upgradeEffect: UpgradeEffect) {\n    this.upgrade.upgradeEffects = this.upgrade.upgradeEffects.filter(ue => ue !== upgradeEffect);\n  }\n\n  newResourceCost() {\n    this.upgrade.resourceCosts[this.upgrade.resourceCosts.length] = {\n      resourceId: 0,\n      resourceCost: 0\n    };\n  }\n\n  removeResourceCost(resourceCost: ResourceCost) {\n    this.upgrade.resourceCosts = this.upgrade.resourceCosts.filter(rc => rc !== resourceCost);\n  }\n\n  saveUpgrade() {\n    this.upgrade.id = +this.upgrade.id;\n\n    for (const upgradeEffect of this.upgrade.upgradeEffects) {\n      if (upgradeEffect.resourceId) {\n        upgradeEffect.resourceId = +upgradeEffect.resourceId;\n      }\n      if (upgradeEffect.maxTier) {\n        upgradeEffect.maxTier = +upgradeEffect.maxTier;\n      }\n\n      upgradeEffect.upgradeFactor = +upgradeEffect.upgradeFactor;\n    }\n\n    for (const resourceCost of this.upgrade.resourceCosts) {\n      resourceCost.resourceId = +resourceCost.resourceId;\n      resourceCost.resourceCost = +resourceCost.resourceCost;\n    }\n\n    const existingUpgrade = this.upgradesService.getUpgrade(this.upgrade.id);\n\n    if (existingUpgrade === undefined) {\n      this.upgradesService.upgrades.push(this.upgrade);\n    } else {\n      const oldIndex = this.upgradesService.upgrades.indexOf(existingUpgrade);\n      this.upgradesService.upgrades[oldIndex] = this.upgrade;\n    }\n  }\n\n  compareFn(item1: number, item2: number) {\n    return +item1 === +item2;\n  }\n}\n","module.exports = \"/* UpgradesComponent's private CSS styles */\\r\\n.upgrades {\\r\\n  margin: 0 0 2em 0;\\r\\n  list-style-type: none;\\r\\n  padding: 0;\\r\\n  /* width: 25em; */\\r\\n}\\r\\n.upgrades mat-expansion-panel {\\r\\n  margin: 0;\\r\\n}\\r\\n.upgrades mat-expansion-panel-header {\\r\\n  height: 30px !important;\\r\\n}\\r\\n.upgrades mat-card-subtitle {\\r\\n  position: absolute;\\r\\n  top: 10px;\\r\\n  right: 10px;\\r\\n  font-weight: bold;\\r\\n}\\r\\n.upgrades button {\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n  margin: .5em;\\r\\n  padding: .4em 0;\\r\\n  height: 3.6em;\\r\\n  width: 100%;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.upgrades button:hover {\\r\\n  left: .1em;\\r\\n}\\r\\n.upgrades button.mat-disabled {\\r\\n  cursor: default;\\r\\n}\\r\\n.upgrades .badge {\\r\\n  display: inline-block;\\r\\n  font-size: small;\\r\\n  color: white;\\r\\n  padding: 0.8em 0.7em 0 0.7em;\\r\\n  background-color: #607D8B;\\r\\n  line-height: 1em;\\r\\n  position: absolute;\\r\\n  right: -9px;\\r\\n  top: 1px;\\r\\n  height: 1.8em;\\r\\n  min-width: 16px;\\r\\n  text-align: center;\\r\\n  margin-right: .8em;\\r\\n  border-radius: 0 4px 4px 0;\\r\\n}\\r\\nbutton {\\r\\n  background-color: #eee;\\r\\n  border: none;\\r\\n  padding: 5px 10px;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n  cursor: hand;\\r\\n  font-family: Arial;\\r\\n}\\r\\n.upgrades {\\r\\n  text-align: center;\\r\\n}\\r\\n.upgrade {\\r\\n  display: inline-block;\\r\\n  max-width: 300px;\\r\\n}\\r\\n.resource-list {\\r\\n  text-align: center;\\r\\n}\\r\\n.resource-list div {\\r\\n  display: inline-block;\\r\\n}\\r\\n.resource-list img {\\r\\n  width: 16px;\\r\\n  height: 16px;\\r\\n}\\r\\n\"","module.exports = \"<mat-checkbox class=\\\"hidePurchased\\\" checked=\\\"true\\\" [(ngModel)]=\\\"hidePurchased\\\">Hide Purchased Upgrades</mat-checkbox>\\n<br />\\n<br />\\n\\n<div class=\\\"upgrades\\\">\\n  <mat-card class=\\\"upgrade\\\" *ngFor=\\\"let upgrade of getUpgrades(false, hidePurchased, adminService.filterAccessible)\\\">\\n    <button mat-raised-button color=\\\"accent\\\" [disabled]='upgrade.purchased || !canAffordUpgrade(upgrade.id)' (click)='purchaseUpgrade(upgrade.id)'>\\n      <mat-card-title>\\n        <b>\\n          <mat-icon *ngIf=\\\"upgrade.purchased\\\" color=\\\"primary\\\">check</mat-icon>\\n        </b>\\n        {{upgrade.name}}\\n      </mat-card-title>\\n    </button>\\n    <mat-card-subtitle>{{upgradesService.getUpgradeTypeString(upgrade.id)}}</mat-card-subtitle>\\n    <mat-card-content>\\n      {{upgrade.description}}\\n      <div class=\\\"resource-list\\\">\\n        <div *ngFor=\\\"let resourceCost of upgrade.resourceCosts\\\" matTooltip=\\\"{{resourceCost.resourceCost}} {{getResource(resourceCost.resourceId).name | titlecase}}\\\"\\n          matTooltipPosition=\\\"below\\\">\\n          <img src=\\\"{{getResource(resourceCost.resourceId).iconPath}}\\\" alt=\\\"{{getResource(resourceCost.resourceId).name}}\\\"> {{resourceCost.resourceCost}}\\n        </div>\\n      </div>\\n    </mat-card-content>\\n    <div *ngIf=\\\"adminService.editMode\\\">\\n      <button (click)=\\\"editUpgrade(upgrade.id)\\\">Edit {{upgrade.name | titlecase}}</button>\\n    </div>\\n  </mat-card>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Resource } from '../../objects/resource';\nimport { ResourcesService } from '../../services/resources/resources.service';\nimport { Upgrade, ResourceCost, UpgradeType } from '../../objects/upgrade';\nimport { UpgradesService } from '../../services/upgrades/upgrades.service';\nimport { AdminService } from '../../services/admin/admin.service';\n\n@Component({\n  selector: 'app-upgrades',\n  templateUrl: './upgrades.component.html',\n  styleUrls: ['./upgrades.component.css']\n})\nexport class UpgradesComponent implements OnInit {\n  upgradeTypes = UpgradeType;\n  hidePurchased = true;\n\n  constructor(private resourcesService: ResourcesService,\n              private upgradesService: UpgradesService,\n              private adminService: AdminService) { }\n\n  ngOnInit() {\n  }\n\n  canAffordUpgrade(id: number) {\n    return this.upgradesService.canAffordUpgrade(id);\n  }\n\n  getUpgrades(filterByPurchased: boolean, filterByUnpurchased: boolean, filterByAccessible: boolean): Upgrade[] {\n    return this.upgradesService.getUpgrades(filterByPurchased, filterByUnpurchased, filterByAccessible);\n  }\n\n  upgradesOfType(upgradeType: string, filterByPurchased: boolean, filterByUnpurchased: boolean, filterByAccessible: boolean): Upgrade[] {\n    return this.upgradesService.upgradesOfType(this.upgradeTypes[upgradeType], filterByPurchased, filterByUnpurchased, filterByAccessible);\n  }\n\n  purchaseUpgrade(id: number) {\n    this.upgradesService.purchaseUpgrade(id);\n  }\n\n  getBackgroundColor(id: number): string {\n    const upgrade = this.upgradesService.getUpgrade(id);\n\n    if (upgrade.purchased) {\n      return 'lightgreen';\n    } else if (!this.upgradesService.canAffordUpgrade(id)) {\n      return 'gray';\n    }\n\n    return 'lightblue';\n  }\n\n  editUpgrade(id: number) {\n    this.adminService.openUpgradeDialog(id);\n  }\n\n  getResource(resourceId: number) {\n    return this.resourcesService.getResource(resourceId);\n  }\n}\n","module.exports = \"/* WorkersComponent's private CSS styles */\\r\\n.workers {\\r\\n  margin: 0 0 2em 0;\\r\\n  list-style-type: none;\\r\\n  padding: 0;\\r\\n  width: 25em;\\r\\n}\\r\\n.workers mat-expansion-panel {\\r\\n  margin: 0;\\r\\n}\\r\\n.workers mat-expansion-panel-header {\\r\\n  height: 30px !important;\\r\\n}\\r\\n.workers mat-card-title {\\r\\n  text-align: left;\\r\\n}\\r\\n.workers mat-card-subtitle {\\r\\n  position: absolute;\\r\\n  top: 10px;\\r\\n  right: 10px;\\r\\n}\\r\\n.workers mat-slider {\\r\\n  width: 100%;\\r\\n  top: -22px;\\r\\n}\\r\\n.workers mat-card {\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n  margin: .5em;\\r\\n  padding: .4em 0;\\r\\n  height: 3.6em;\\r\\n  width: 100%;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.workers button {\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n  margin: .5em;\\r\\n  padding: .4em 0;\\r\\n  height: 3.6em;\\r\\n  width: 100%;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.workers button:hover {\\r\\n  color: #607D8B;\\r\\n  background-color: #DDD;\\r\\n  left: .1em;\\r\\n}\\r\\n.workers a {\\r\\n  color: #888;\\r\\n  text-decoration: none;\\r\\n  position: relative;\\r\\n  display: block;\\r\\n  width: 250px;\\r\\n}\\r\\n.workers a:hover {\\r\\n  color:#607D8B;\\r\\n}\\r\\n.workers .harvestable {\\r\\n  background-color: antiquewhite;\\r\\n}\\r\\n.workers .harvestable:hover {\\r\\n  background-color: blanchedalmond;\\r\\n}\\r\\n.workers .badge {\\r\\n  display: inline-block;\\r\\n  font-size: small;\\r\\n  color: white;\\r\\n  padding: 0.8em 0.7em 0 0.7em;\\r\\n  background-color: #607D8B;\\r\\n  line-height: 1em;\\r\\n  position: absolute;\\r\\n  right: -9px;\\r\\n  top: 1px;\\r\\n  height: 1.8em;\\r\\n  min-width: 16px;\\r\\n  text-align: center;\\r\\n  margin-right: .8em;\\r\\n  border-radius: 0 4px 4px 0;\\r\\n}\\r\\nbutton {\\r\\n  background-color: #eee;\\r\\n  border: none;\\r\\n  padding: 5px 10px;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n  cursor: hand;\\r\\n  font-family: Arial;\\r\\n}\\r\\nbutton:hover {\\r\\n  background-color: #cfd8dc;\\r\\n}\\r\\nbutton.delete {\\r\\n  position: relative;\\r\\n  left: 194px;\\r\\n  top: -32px;\\r\\n  background-color: gray !important;\\r\\n  color: white;\\r\\n}\\r\\n\"","module.exports = \"<ul class=\\\"workers\\\">\\n  <mat-accordion multi=\\\"true\\\">\\n    <mat-expansion-panel expanded=\\\"true\\\" *ngFor=\\\"let worker of getWorkers(true, true, true)\\\">\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          {{worker.resourceType | titlecase}}\\n        </mat-panel-title>\\n        <mat-panel-description>\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n\\n      <button mat-raised-button [color]=\\\"canAfford(worker.id) ? 'accent' : 'disabled'\\\" (click)=\\\"hireWorker(worker.id)\\\">\\n        <mat-card-title>{{worker.workerCount}} Workers ({{worker.freeWorkers}} Idle)</mat-card-title>\\n        <mat-card-subtitle>{{worker.cost | number}} Gold</mat-card-subtitle>\\n      </button>\\n\\n      <div *ngFor=\\\"let resourceWorker of getAccessibleResourceWorkers(worker)\\\">\\n        <mat-card *ngIf=\\\"resourceWorker.workable || !adminService.filterAccessible\\\" matTooltip=\\\"{{getTooltipMessage(resourceWorker.resourceId)}}\\\"\\n          matTooltipPosition=\\\"right\\\">\\n          <mat-card-title>{{resourcesService.getResource(resourceWorker.resourceId).name | titlecase}}</mat-card-title>\\n          <mat-card-subtitle>{{resourceWorker.workerCount}} Workers ({{resourceWorker.sliderSetting}})</mat-card-subtitle>\\n          <mat-slider [color]=\\\"resourceWorker.sliderSettingValid ? 'accent' : 'warn'\\\" [id]=\\\"resourceWorker.resourceId\\\" [max]=\\\"worker.workerCount\\\"\\n             [tickInterval]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"resourceWorker.sliderSetting\\\" (input)=\\\"checkSliderValue($event)\\\" (change)=\\\"updateResourceWorker($event)\\\">\\n          </mat-slider>\\n        </mat-card>\\n      </div>\\n    </mat-expansion-panel>\\n  </mat-accordion>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Resource, ResourceType } from '../../objects/resource';\nimport { ResourcesService } from '../../services/resources/resources.service';\nimport { Worker } from '../../objects/worker';\nimport { WorkersService } from '../../services/workers/workers.service';\nimport { TooltipService } from './../../services/tooltip/tooltip.service';\nimport { AdminService } from '../../services/admin/admin.service';\n\n@Component({\n  selector: 'app-workers',\n  templateUrl: './workers.component.html',\n  styleUrls: ['./workers.component.css']\n})\nexport class WorkersComponent implements OnInit {\n  resourceTypes = ResourceType;\n\n  constructor(protected resourcesService: ResourcesService,\n              protected workersService: WorkersService,\n              protected tooltipService: TooltipService,\n              protected adminService: AdminService) { }\n\n  ngOnInit() {\n  }\n\n  getWorkers(filterByAccessible: boolean, filterByWorkable: boolean, filterByHarvestable: boolean): Worker[] {\n    return this.workersService.getWorkers(filterByAccessible, filterByWorkable, filterByHarvestable);\n  }\n\n  public getWorker(idOrResourceType: number | ResourceType) {\n    return this.workersService.getWorker(idOrResourceType);\n  }\n\n  getAccessibleResourceWorkers(worker: Worker) {\n    return worker.workersByResource.filter(rw => this.resourcesService.getResource(rw.resourceId).resourceAccessible);\n  }\n\n  canAfford(id: number): boolean {\n    return this.workersService.canAfford(id);\n  }\n\n  getTooltipMessage(id: number): string {\n    return this.tooltipService.getWorkerTooltip(id);\n  }\n\n  hireWorker(id: number) {\n    this.workersService.hireWorker(id);\n  }\n\n  checkSliderValue(event: any) {\n    const resource = this.resourcesService.getResource(+event.source._elementRef.nativeElement.id);\n    const worker = this.getWorker(resource.resourceType);\n    const resourceWorker = worker.workersByResource.find(ws => ws.resourceId === resource.id);\n\n    const newValue = +event.value;\n\n    resourceWorker.sliderSettingValid = worker.freeWorkers + resourceWorker.workerCount - newValue >= 0;\n  }\n\n  updateResourceWorker(event: any) {\n    this.workersService.updateResourceWorker(+event.source._elementRef.nativeElement.id, +event.value);\n  }\n}\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\n\nimport { MapService } from './../../services/map/map.service';\n\n@Directive({\n  selector: '[appCrop]'\n})\nexport class CropDirective {\n\n  constructor(protected element: ElementRef,\n              protected renderer: Renderer2,\n              protected mapService: MapService) {\n  // const tileCropDetail = this.mapService.getTile(\n  //   +element.nativeElement.attributes['x'].value, +element.nativeElement.attributes['y'].value);\n\n  this.renderer.setStyle(element.nativeElement, 'clip', 'rect(0, 0, 16, 16)');\n  }\n}\n","import { Directive, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\n\nimport { timer } from 'rxjs';\n\nimport { ResourceAnimation } from '../../objects/resourceAnimation';\nimport { ResourcesService } from './../../services/resources/resources.service';\nimport { MapService } from './../../services/map/map.service';\n\ndeclare var d3: any;\n\n@Directive({\n  selector: '[appMap]'\n})\nexport class MapDirective implements AfterViewInit {\n  canvas;\n  context: CanvasRenderingContext2D;\n  transform = d3.zoomIdentity;\n\n  lastAnimationTime = Date.now();\n  tileAnimationSpeed = 0.003;\n\n  width: number;\n  height: number;\n  images = [{name: 'map', x: 0, y: 0, width: 1600, height: 1600}];\n\n  constructor(protected element: ElementRef,\n              protected renderer: Renderer2,\n              protected resourcesService: ResourcesService,\n              protected mapService: MapService) { }\n\n  ngAfterViewInit() {\n    this.canvas = d3.select('canvas');\n    this.context = this.canvas.node().getContext('2d');\n\n    this.width = this.canvas.property('width');\n    this.height = this.canvas.property('height');\n\n    this.canvas.call(d3.zoom()\n        .scaleExtent([1 / 3, 4])\n        .translateExtent([[0, 0], [2400, 2400]])\n        .on('zoom', this.zoomed(this)));\n\n    this.canvas.on('click', this.clickTile(this));\n\n    d3.timer(this.updateResourceAnimations(this), 125);\n  }\n\n  zoomed(self: MapDirective) {\n    return function(d) {\n      self.transform = d3.event.transform;\n      self.refreshCanvas();\n    };\n  }\n\n  clickTile(self: MapDirective) {\n    return function(d) {\n      const coordinates = d3.mouse(this);\n      coordinates[0] = Math.floor(self.transform.invertX(coordinates[0]) / 16);\n      coordinates[1] = Math.floor(self.transform.invertY(coordinates[1]) / 16);\n\n      const tile = self.mapService.tiledMap[coordinates[0] + coordinates[1] * self.mapService.mapWidth];\n\n      if (self.mapService.deleteMode) {\n        self.mapService.clearBuilding(tile);\n      } else {\n        self.mapService.createBuilding(tile, self.mapService.selectedBuilding.tileType);\n      }\n\n      self.refreshCanvas();\n    };\n  }\n\n  updateResourceAnimations(self: MapDirective) {\n    return function(d) {\n      const deltaTime = Date.now() - self.lastAnimationTime;\n\n      for (const resourceAnimation of self.mapService.resourceAnimations) {\n        const currentTile = resourceAnimation.buildingPath[resourceAnimation.pathStep];\n        const destinationTile = resourceAnimation.buildingPath[resourceAnimation.pathStep + 1];\n\n        const startPos = [currentTile.x, currentTile.y];\n        const endPos = [destinationTile.x, destinationTile.y];\n\n        resourceAnimation.x += (endPos[0] - startPos[0]) * deltaTime * self.tileAnimationSpeed;\n        resourceAnimation.y += (endPos[1] - startPos[1]) * deltaTime * self.tileAnimationSpeed;\n\n        if (Math.abs(resourceAnimation.x - currentTile.x) >= 8 ||\n            Math.abs(resourceAnimation.y - currentTile.y) >= 8) {\n          resourceAnimation.pathStep++;\n\n          if (resourceAnimation.pathStep === resourceAnimation.buildingPath.length - 1) {\n            self.resourcesService.finishResourceAnimation(resourceAnimation.resourceId);\n            resourceAnimation.done = true;\n          }\n        }\n      }\n\n      self.mapService.resourceAnimations = self.mapService.resourceAnimations.filter(animation => !animation.done);\n\n      self.lastAnimationTime = Date.now();\n\n      self.refreshCanvas();\n    };\n  }\n\n  refreshCanvas() {\n    this.context.save();\n    this.context.clearRect(0, 0, this.width, this.height);\n    this.context.translate(this.transform.x, this.transform.y);\n    this.context.scale(this.transform.k, this.transform.k);\n    this.drawCanvas();\n    this.context.restore();\n  }\n\n  drawCanvas() {\n    for (const tile of this.mapService.tiledMap) {\n      const mapTileImage = <HTMLImageElement> document.getElementById(tile.mapTileType.toLowerCase());\n      this.context.drawImage(mapTileImage, tile.x, tile.y, 16, 16);\n\n      if (tile.resourceTileType) {\n        const resourceTileImage = <HTMLImageElement> document.getElementById(tile.resourceTileType.toLowerCase());\n        this.context.drawImage(resourceTileImage, tile.x, tile.y, 16, 16);\n      }\n\n      if (tile.buildingTileType) {\n        const buildingTileImage = <HTMLImageElement> document.getElementById(tile.buildingTileType.toLowerCase());\n        this.context.drawImage(buildingTileImage, tile.x, tile.y, 16, 16);\n      }\n    }\n\n    for (const resourceAnimation of this.mapService.resourceAnimations) {\n      const resourceTileImage = <HTMLImageElement> document.getElementById(\n          this.resourcesService.getResource(resourceAnimation.resourceId).name.toLowerCase().replace(' ', '-'));\n      this.context.drawImage(resourceTileImage, resourceAnimation.x, resourceAnimation.y, 8, 8);\n    }\n  }\n}\n","import { Directive, Renderer2, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appNoScroll]'\n})\nexport class NoScrollDirective {\n  constructor(protected element: ElementRef,\n              protected renderer: Renderer2) {\n    element.nativeElement.addEventListener('mousewheel', function(e) {\n      e.preventDefault();\n    });\n  }\n}\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\n\nimport * as Hammer from 'hammerjs';\n\nimport { ClickerMainService } from './../../services/clicker-main/clicker-main.service';\n\n@Directive({\n  selector: '[appTouch]'\n})\nexport class TouchDirective {\n  constructor(protected element: ElementRef,\n              protected renderer: Renderer2,\n              protected clickerMainService: ClickerMainService) {\n    const hammerControl = Hammer(element.nativeElement);\n\n    hammerControl.get('press').set({time: 0});\n\n    hammerControl.on('press', function(event) {\n      const id = +element.nativeElement.attributes['id'].value;\n      clickerMainService.startHarvesting(id);\n    });\n\n    hammerControl.on('pressup', function(event) {\n      const id = +element.nativeElement.attributes['id'].value;\n      clickerMainService.stopHarvesting(id);\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MatButtonModule, MatCheckboxModule } from '@angular/material';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatBadgeModule } from '@angular/material/badge';\n\nconst modules = [\n  MatButtonModule,\n  MatCheckboxModule,\n  MatProgressBarModule,\n  MatChipsModule,\n  MatIconModule,\n  MatTooltipModule,\n  MatCardModule,\n  MatGridListModule,\n  MatTabsModule,\n  MatExpansionModule,\n  MatDividerModule,\n  MatInputModule,\n  MatSelectModule,\n  MatListModule,\n  MatSliderModule,\n  MatDialogModule,\n  MatStepperModule,\n  MatSnackBarModule,\n  MatBadgeModule\n];\n\n@NgModule({\n  imports: modules,\n  exports: modules\n})\nexport class MaterialImportModule { }\n","export enum ResourceType {\r\n  Currency = 'CURRENCY',\r\n  Wood = 'WOOD',\r\n  Mineral = 'MINERAL',\r\n  Metal = 'METAL'\r\n}\r\n\r\nexport interface ResourceConsume {\r\n  resourceId: number;\r\n  cost: number;\r\n}\r\n\r\nexport interface Worker {\r\n  workable: boolean;\r\n  workerCount: number;\r\n  cost: number;\r\n}\r\n\r\nexport class Resource {\r\n  id: number;\r\n  name: string;\r\n  resourceType: ResourceType;\r\n  iconPath: string;\r\n\r\n  amount: number;\r\n  amountTravelling = 0;\r\n\r\n  resourceConsumes: ResourceConsume[];\r\n\r\n  harvestable: boolean;\r\n  harvestYield?: number;\r\n  harvestMilliseconds?: number;\r\n\r\n  harvestStartDate = Date.now();\r\n  harvesting = false;\r\n  progressBarValue = 0;\r\n\r\n  workerYield?: number;\r\n\r\n  sellable: boolean;\r\n  sellsFor?: number;\r\n\r\n  resourceDescription: string;\r\n  workerVerb: string;\r\n  workerNoun: string;\r\n\r\n  resourceAccessible: boolean;\r\n  resourceTier: number;\r\n  previousTier: number;\r\n\r\n  worker: Worker;\r\n}\r\n","export enum MapTileType {\r\n  Grass = 'GRASS',\r\n  Water = 'WATER',\r\n  Mountain = 'MOUNTAIN'\r\n}\r\n\r\nexport enum ResourceTileType {\r\n  OakTree = 'OAKTREE',\r\n  PineTree = 'PINETREE',\r\n  BirchTree = 'BIRCHTREE',\r\n  EucalyptusTree = 'EUCALYPTUSTREE',\r\n  WillowTree = 'WILLOWTREE',\r\n  TeakTree = 'TEAKTREE',\r\n  DeadEnt = 'DEADENT',\r\n  StoneMine = 'STONEMINE',\r\n  GraphiteMine = 'GRAPHITEMINE',\r\n  LimestoneMine = 'LIMESTONEMINE',\r\n  MarbleMine = 'MARBLEMINE',\r\n  QuartzMine = 'QUARTZMINE',\r\n  ObsidianMine = 'OBSIDIANMINE',\r\n  DiamondMine = 'DIAMONDMINE',\r\n  CopperMine = 'COPPERMINE',\r\n  TinMine = 'TINMINE',\r\n  IronMine = 'IRONMINE',\r\n  GoldMine = 'GOLDMINE',\r\n  LatinumMine = 'LATINUMMINE',\r\n  UnbelieviumMine = 'UNBELIEVIUMMINE',\r\n  LustrialMine = 'LUSTRIALMINE',\r\n  SpectrusMine = 'SPECTRUSMINE',\r\n  CrackedForge = 'CRACKEDFORGE',\r\n  StoneForge = 'STONEFORGE',\r\n  IronForge = 'IRONFORGE',\r\n  GoldForge = 'GOLDFORGE',\r\n  LatinumForge = 'LATINUMFORGE',\r\n  TemprousDistillery = 'TEMPROUSDISTILLERY'\r\n}\r\n\r\nexport enum BuildingTileType {\r\n  Wall = 'WALL',\r\n  Road = 'ROAD',\r\n  Home = 'HOME',\r\n  Bridge = 'BRIDGE',\r\n  CrackedForge = 'CRACKEDFORGE',\r\n  StoneForge = 'STONEFORGE',\r\n  IronForge = 'IRONFORGE',\r\n  GoldForge = 'GOLDFORGE',\r\n  LatinumForge = 'LATINUMFORGE',\r\n  TemprousDistillery = 'TEMPROUSDISTILLERY'\r\n}\r\n\r\nexport interface ResourceCost {\r\n  resourceId: number;\r\n  resourceCost: number;\r\n}\r\n\r\nexport interface MapTile {\r\n  tileType: MapTileType;\r\n\r\n  name: string;\r\n\r\n  walkable: boolean;\r\n}\r\n\r\nexport interface BuildingTile {\r\n  tileType: BuildingTileType;\r\n\r\n  name: string;\r\n  description: string;\r\n  placeable: boolean;\r\n\r\n  resourceCosts: ResourceCost[];\r\n  buildableSurfaces: MapTileType[];\r\n\r\n  placesResourceTile: boolean;\r\n  resourceTileType?: ResourceTileType;\r\n\r\n  resourcePathable: boolean;\r\n}\r\n\r\nexport interface ResourceTile {\r\n  tileType: ResourceTileType;\r\n\r\n  name: string;\r\n  placeable: boolean;\r\n\r\n  resourceIds: number[];\r\n}\r\n\r\nexport interface TileImage {\r\n  name: string;\r\n\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface TileCropDetail {\r\n  x: number;\r\n  y: number;\r\n\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport class Tile {\r\n  id: number;\r\n\r\n  mapTileType: MapTileType;\r\n  resourceTileType?: ResourceTileType;\r\n  buildingTileType?: BuildingTileType;\r\n\r\n  buildingPath?: Tile[];\r\n  buildingRemovable: boolean;\r\n\r\n  x: number;\r\n  y: number;\r\n\r\n  tileCropDetail: TileCropDetail;\r\n}\r\n","import { ResourceType } from './resource';\r\n\r\nexport enum UpgradeType {\r\n  Resource = 'RESOURCE',\r\n  Worker = 'WORKER'\r\n}\r\n\r\nexport enum UpgradeVariable {\r\n  Harvestability = 'HARVESTABILITY',\r\n  HarvestYield = 'HARVEST_YIELD',\r\n  HarvestMilliseconds = 'HARVEST_MILLISECONDS',\r\n  Workable = 'WORKABLE',\r\n  WorkerYield = 'WORKER_YIELD',\r\n  WorkerCost = 'WORKER_COST'\r\n}\r\n\r\nexport interface UpgradeEffect {\r\n  upgradeIsForWholeType: boolean;\r\n\r\n  resourceType?: ResourceType;\r\n  resourceId?: number;\r\n  maxTier?: number;\r\n\r\n  upgradeVariable: UpgradeVariable;\r\n  upgradeFactor: number;\r\n}\r\n\r\nexport interface ResourceCost {\r\n  resourceId: number;\r\n  resourceCost: number;\r\n}\r\n\r\nexport class Upgrade {\r\n  id: number;\r\n  upgradeType: UpgradeType;\r\n\r\n  name: string;\r\n  description: string;\r\n\r\n  upgradeEffects: UpgradeEffect[];\r\n\r\n  resourceCosts: ResourceCost[];\r\n  purchased: boolean;\r\n}\r\n","import { Pipe } from '@angular/core';\r\nimport { PipeTransform } from '@angular/core/src/change_detection/pipe_transform';\r\n\r\n@Pipe({\r\n    name: 'enumToArray'\r\n})\r\nexport class EnumToPipe implements PipeTransform {\r\n    transform(data: object) {\r\n        return Object.keys(data);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EnumToPipe } from './enumtoarraypipe';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    EnumToPipe\n  ],\n  exports: [\n    EnumToPipe\n  ]\n})\nexport class PipeModule { }\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material';\n\nimport { ResourceDialogComponent } from '../../components/resource-dialog/resource-dialog.component';\nimport { UpgradeDialogComponent } from '../../components/upgrade-dialog/upgrade-dialog.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  public filterAccessible = true;\n  public clampMap = true;\n  public editMode = false;\n\n  constructor(public dialog: MatDialog) { }\n\n  openResourceDialog(resourceId?: number) {\n    const dialogRef = this.dialog.open(ResourceDialogComponent, {\n      width: '750px',\n      height: '600px',\n      data: resourceId === undefined ? {} : {resourceId: resourceId}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  openUpgradeDialog(upgradeId?: number) {\n    const dialogRef = this.dialog.open(UpgradeDialogComponent, {\n      width: '750px',\n      height: '525px',\n      data: upgradeId === undefined ? {} : {upgradeId: upgradeId}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { timer } from 'rxjs';\n\nimport { ResourcesService } from '../resources/resources.service';\nimport { WorkersService } from '../workers/workers.service';\nimport { MapService } from '../map/map.service';\nimport { AdminService } from '../admin/admin.service';\nimport { Resource, ResourceType } from '../../objects/resource';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClickerMainService {\n  progressBarMode = 'determinate';\n\n  millisecondsTotal = 1000;\n  harvestStartDate: number;\n  progressBarUpdateDelay = 125;\n\n  resourceTypes = ResourceType;\n\n  constructor(protected resourcesService: ResourcesService,\n              protected workersService: WorkersService,\n              protected mapService: MapService,\n              protected adminService: AdminService) {\n    const processSource = timer(1000, 1000);\n    const processSubscribe = processSource.subscribe(_ => this.workersService.processWorkers());\n\n    const progressBarTimer = timer(0, this.progressBarUpdateDelay);\n    progressBarTimer.subscribe(_ => this.updateProgressBars());\n  }\n\n  startHarvesting(id: number) {\n    const resource = this.resourcesService.getResource(id);\n    resource.harvestStartDate = Date.now();\n\n    if (!this.resourcesService.canHarvest(id)) {\n      return;\n    }\n\n    resource.harvesting = true;\n\n    const harvestTimer = timer(resource.harvestMilliseconds);\n    harvestTimer.subscribe(_ => this.harvestResource(id));\n  }\n\n  stopHarvesting(id: number) {\n    const resource = this.resourcesService.getResource(id);\n    resource.progressBarValue = 0;\n    resource.harvesting = false;\n  }\n\n  updateProgressBars() {\n    for (const resource of this.resourcesService.resources.filter(_resource => _resource.harvesting)) {\n      resource.progressBarValue = Math.floor((Date.now() - resource.harvestStartDate) / resource.harvestMilliseconds * 100);\n    }\n  }\n\n  shouldAnimateProgressBar(id: number): boolean {\n    return this.resourcesService.getResource(id).harvestMilliseconds > this.progressBarUpdateDelay;\n  }\n\n  harvestResource(id: number) {\n    this.harvestStartDate = Date.now();\n    this.resourcesService.getResource(id).amountTravelling++;\n\n    if (this.shouldAnimateProgressBar(id)) {\n      this.resourcesService.getResource(id).progressBarValue = 0;\n    }\n\n    this.mapService.spawnResourceAnimation(id);\n\n    this.stopHarvesting(id);\n  }\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { ResourcesService } from '../resources/resources.service';\r\nimport { Tile, MapTileType, BuildingTileType, MapTile, BuildingTile, TileCropDetail, ResourceTileType, ResourceTile } from '../../objects/tile';\r\nimport { ResourceAnimation } from '../../objects/resourceAnimation';\r\n\r\ndeclare var require: any;\r\nconst Jimp = require('jimp');\r\nconst baseTiles = require('../../../assets/json/tileTypes.json');\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MapService {\r\n  public tileTypes = baseTiles.tileTypes;\r\n  public mapTiles = baseTiles.mapTiles;\r\n  public buildingTiles = baseTiles.buildingTiles;\r\n  public resourceTiles = baseTiles.resourceTiles;\r\n\r\n  mapWidth: number;\r\n  mapHeight: number;\r\n\r\n  public tiledMap: Tile[] = [];\r\n  resourceAnimations: ResourceAnimation[] = [];\r\n\r\n  deleteMode = false;\r\n  selectedBuilding: BuildingTile;\r\n\r\n  constructor(protected resourcesService: ResourcesService) {\r\n    const _tiledMap: Tile[] = [];\r\n    let mapTileIds: number[], resourceTileIds: number[], buildingTileIds: number[];\r\n    let _mapWidth: number, _mapHeight: number;\r\n\r\n    // const tileTypes = {1: MapTileType.Grass, 2: MapTileType.Water, 3: MapTileType.Mountain,\r\n    //   7: ResourceTileType.OakTree, 8: ResourceTileType.PineTree, 9: ResourceTileType.BirchTree, 10: ResourceTileType.EucalyptusTree,\r\n    //   11: ResourceTileType.WillowTree, 12: ResourceTileType.TeakTree, 13: ResourceTileType.DeadEnt, 14: ResourceTileType.StoneMine,\r\n    //   15: ResourceTileType.GraphiteMine, 16: ResourceTileType.LimestoneMine, 17: ResourceTileType.MarbleMine,\r\n    //   18: ResourceTileType.QuartzMine, 19: ResourceTileType.ObsidianMine, 20: ResourceTileType.DiamondMine,\r\n    //   21: ResourceTileType.CopperMine, 22: ResourceTileType.TinMine, 23: ResourceTileType.IronMine, 24: ResourceTileType.GoldMine,\r\n    //   25: ResourceTileType.LatinumMine, 26: ResourceTileType.UnbelieviumMine, 27: ResourceTileType.LustrialMine,\r\n    //   28: ResourceTileType.SpectrusMine, 29: ResourceTileType.CrackedForge, 30: ResourceTileType.StoneForge,\r\n    //   31: ResourceTileType.IronForge, 32: ResourceTileType.GoldForge, 33: ResourceTileType.LatinumForge,\r\n    //   34: ResourceTileType.TemprousDistillery, 71: BuildingTileType.Home, 72: BuildingTileType.Wall,\r\n    //   73: BuildingTileType.Road, 74: BuildingTileType.Bridge\r\n    // };\r\n    // const resourceIds = {7: [1], 8: [7], 9: [8], 10: [9], 11: [15], 12: [25], 13: [16], 14: [13], 15: [26], 16: [27],\r\n    //   17: [28], 18: [29], 19: [30], 20: [31], 21: [2], 22: [3], 23: [5], 24: [11], 25: [18], 26: [20], 27: [21], 28: [22],\r\n    //   29: [4, 5], 30: [4, 5, 6], 31: [4, 5, 6, 10, 12], 32: [4, 5, 6, 10, 12, 19], 33: [4, 5, 6, 10, 12, 19, 23], 34: [24]};\r\n\r\n    const xmlRequest = new XMLHttpRequest();\r\n    xmlRequest.onload = function() {\r\n      const xmlDoc = new DOMParser().parseFromString(xmlRequest.responseText, 'text/xml');\r\n      const layers = xmlDoc.getElementsByTagName('layer');\r\n      let mapLayer: Element, resourceLayer: Element, buildingLayer: Element;\r\n\r\n      for (let i = 0; i < layers.length; i++) {\r\n        switch (layers[i].attributes['name'].value) {\r\n          case 'Map Layer':\r\n            mapLayer = layers[i];\r\n            break;\r\n          case 'Resource Layer':\r\n            resourceLayer = layers[i];\r\n            break;\r\n          case 'Building Layer':\r\n            buildingLayer = layers[i];\r\n            break;\r\n        }\r\n      }\r\n\r\n      _mapWidth = +mapLayer.attributes.getNamedItem('width').value;\r\n      _mapHeight = +mapLayer.attributes.getNamedItem('height').value;\r\n\r\n      mapTileIds = mapLayer.textContent.split(',').map(tileId => +tileId);\r\n      resourceTileIds = resourceLayer.textContent.split(',').map(tileId => +tileId);\r\n      buildingTileIds = buildingLayer.textContent.split(',').map(tileId => +tileId);\r\n    };\r\n\r\n    xmlRequest.open('GET', '../../../assets/tilemap/map.tmx', false);\r\n    xmlRequest.send();\r\n\r\n    for (let i = 0; i < mapTileIds.length; i++) {\r\n      const mapTileId = mapTileIds[i];\r\n      const resourceTileId = resourceTileIds[i];\r\n      const buildingTileId = buildingTileIds[i];\r\n\r\n      const tile: Tile = {\r\n        id: _tiledMap.length,\r\n        mapTileType: this.tileTypes[mapTileId],\r\n        x: 16 * (_tiledMap.length % _mapWidth),\r\n        y: 16 * Math.floor(_tiledMap.length / _mapWidth),\r\n        tileCropDetail: {x: 0, y: 0, width: 16, height: 16},\r\n        buildingRemovable: false\r\n      };\r\n\r\n      if (resourceTileId > 0) {\r\n        tile.resourceTileType = this.tileTypes[resourceTileId];\r\n      }\r\n\r\n      if (buildingTileId > 0) {\r\n        tile.buildingTileType = this.tileTypes[buildingTileId];\r\n      }\r\n\r\n      _tiledMap.push(tile);\r\n    }\r\n\r\n    this.tiledMap = _tiledMap;\r\n    this.mapWidth = _mapWidth;\r\n    this.mapHeight = _mapHeight;\r\n\r\n    this.calculateResourceConnections();\r\n  }\r\n\r\n  createBuilding(tile: Tile, buildingType: BuildingTileType): boolean {\r\n    const buildingTile = this.buildingTiles[buildingType];\r\n\r\n    if (tile.buildingTileType !== undefined ||\r\n        tile.resourceTileType !== undefined ||\r\n        !buildingTile.buildableSurfaces.some(bs => bs === tile.mapTileType) ||\r\n        !this.canAffordBuilding(buildingTile)) {\r\n      return false;\r\n    }\r\n\r\n    for (const resourceCost of buildingTile.resourceCosts) {\r\n      this.resourcesService.addResourceAmount(resourceCost.resourceId, -resourceCost.resourceCost);\r\n    }\r\n\r\n    if (buildingTile.placesResourceTile) {\r\n      tile.resourceTileType = buildingTile.resourceTileType;\r\n    }\r\n\r\n    tile.buildingRemovable = true;\r\n    tile.buildingTileType = buildingType;\r\n    this.calculateResourceConnections();\r\n\r\n    return true;\r\n  }\r\n\r\n  public canAffordBuilding(buildingTile: BuildingTile): boolean {\r\n    for (const resourceCost of buildingTile.resourceCosts) {\r\n      if (this.resourcesService.getResource(resourceCost.resourceId).amount < resourceCost.resourceCost) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  clearBuilding(tile: Tile) {\r\n    if (!tile.buildingRemovable) {\r\n      return;\r\n    }\r\n\r\n    const buildingTile = this.buildingTiles[tile.buildingTileType];\r\n\r\n    if (buildingTile.placesResourceTile) {\r\n      tile.resourceTileType = undefined;\r\n    }\r\n\r\n    tile.buildingTileType = undefined;\r\n    this.calculateResourceConnections();\r\n  }\r\n\r\n  calculateResourceConnections() {\r\n    const resourceTiles = this.getResourceTiles();\r\n\r\n    for (const resourceTile of resourceTiles) {\r\n      resourceTile.buildingPath = [];\r\n\r\n      const visitedTiles: Tile[] = [];\r\n      let tileQueue: Tile[] = [];\r\n      const nodeMap = new Map<Tile, Tile>();\r\n      let currentNode: Tile;\r\n\r\n      for (const neighbor of this.getNeighborTiles(resourceTile)) {\r\n        if (neighbor.buildingTileType && this.buildingTiles[neighbor.buildingTileType].resourcePathable) {\r\n          tileQueue.push(neighbor);\r\n        }\r\n      }\r\n\r\n      tileQueue.push(resourceTile);\r\n\r\n      while (tileQueue.length) {\r\n        currentNode = tileQueue.pop();\r\n\r\n        if (currentNode.buildingTileType === BuildingTileType.Home) {\r\n          const buildingPath: Tile[] = [];\r\n          let backtrackNode = currentNode;\r\n\r\n          while (backtrackNode !== resourceTile) {\r\n            buildingPath.push(backtrackNode);\r\n            backtrackNode = nodeMap.get(backtrackNode);\r\n          }\r\n\r\n          buildingPath.push(backtrackNode);\r\n\r\n          resourceTile.buildingPath = buildingPath.reverse();\r\n          tileQueue = [];\r\n        }\r\n\r\n        for (const neighbor of this.getNeighborTiles(currentNode)) {\r\n          if (!visitedTiles.includes(neighbor) && neighbor.buildingTileType &&\r\n            this.buildingTiles[neighbor.buildingTileType].resourcePathable) {\r\n            nodeMap.set(neighbor, currentNode);\r\n            tileQueue.push(neighbor);\r\n          }\r\n        }\r\n\r\n        visitedTiles.push(currentNode);\r\n      }\r\n    }\r\n  }\r\n\r\n  spawnResourceAnimation(resourceId: number) {\r\n    const matchingTiles = this.getTilesForResource(resourceId).filter(tile => tile.buildingPath.length > 0);\r\n\r\n    const tile = matchingTiles[Math.floor(Math.random() * matchingTiles.length)];\r\n\r\n    this.resourceAnimations.push({\r\n      resourceId: resourceId,\r\n      x: tile.x + 4,\r\n      y: tile.y + 4,\r\n      buildingPath: tile.buildingPath.map(tile => tile),\r\n      pathStep: 0,\r\n      done: false\r\n    });\r\n  }\r\n\r\n  getNeighborTiles(tile: Tile): Tile[] {\r\n    const tileCoordinates = this.getTileCoordinates(tile);\r\n\r\n    const neighborPositions = [\r\n      {x: tileCoordinates.x - 1, y: tileCoordinates.y},\r\n      {x: tileCoordinates.x + 1, y: tileCoordinates.y},\r\n      {x: tileCoordinates.x, y: tileCoordinates.y - 1},\r\n      {x: tileCoordinates.x, y: tileCoordinates.y + 1}\r\n    ];\r\n\r\n    const tiles: Tile[] = [];\r\n    for (const position of neighborPositions) {\r\n      if (position.x >= 0 && position.x < this.mapWidth &&\r\n          position.y >= 0 && position.y < this.mapHeight) {\r\n        tiles.push(this.getTile(position.x, position.y));\r\n      }\r\n    }\r\n\r\n    return tiles;\r\n  }\r\n\r\n  getRowCount(): number {\r\n    return this.mapHeight;\r\n  }\r\n\r\n  getColumnCount(): number {\r\n    return this.mapWidth;\r\n  }\r\n\r\n  getTileCoordinates(tile: Tile) {\r\n    const tileIndex = this.tiledMap.indexOf(tile);\r\n\r\n    return {\r\n      x: tileIndex % this.mapWidth,\r\n      y: Math.floor(tileIndex / this.mapWidth)\r\n    };\r\n  }\r\n\r\n  getTile(x: number, y: number) {\r\n    return this.tiledMap[x + y * this.mapWidth];\r\n  }\r\n\r\n  getResourceTiles(resourceId?: number): Tile[] {\r\n    let tiles = this.tiledMap.filter(tile => tile.resourceTileType !== undefined);\r\n    const matchingTypes = this.resourceTileArray.filter(tile => tile.resourceIds.includes(resourceId)).map(tile => tile.tileType);\r\n\r\n    if (resourceId !== undefined) {\r\n      tiles = tiles.filter(tile => matchingTypes.includes(tile.resourceTileType));\r\n    }\r\n\r\n    return tiles;\r\n  }\r\n\r\n  resourceTileUsable(resourceId: number) {\r\n    const matchingTiles = this.getTilesForResource(resourceId);\r\n\r\n    return (matchingTiles.length > 0 && matchingTiles.some(tile => tile.buildingPath.length > 0));\r\n  }\r\n\r\n  getTileType(tileId: number): MapTileType {\r\n    if (tileId in [37, 38, 39, 40, 41, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 71, 72, 73, 74, 75, 76, 77, 78, 88,\r\n      89, 90, 91, 92, 93, 94, 95, 105, 106, 107, 108, 109, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 130]) {\r\n      return MapTileType.Grass;\r\n    } else if (tileId in [53, 122]) {\r\n      return MapTileType.Water;\r\n    }\r\n\r\n    return MapTileType.Mountain;\r\n  }\r\n\r\n  getTileCropDetail(tileId: number): TileCropDetail {\r\n    return {x: 0, y: 0, width: 16, height: 16};\r\n  }\r\n\r\n  get mapTileArray(): MapTile[] {\r\n    const tiles: MapTile[] = [];\r\n\r\n    for (const key in this.mapTiles) {\r\n      tiles.push(this.mapTiles[key]);\r\n    }\r\n\r\n    return tiles;\r\n  }\r\n\r\n  getTilesForResource(resourceId: number) {\r\n    const matchingTypes = this.resourceTileArray.filter(tile => tile.resourceIds.includes(resourceId)).map(tile => tile.tileType);\r\n\r\n    return this.tiledMap.filter(tile => matchingTypes.includes(tile.resourceTileType));\r\n  }\r\n\r\n  get buildingTileArray(): BuildingTile[] {\r\n    const tiles: BuildingTile[] = [];\r\n\r\n    for (const key in this.buildingTiles) {\r\n      tiles.push(this.buildingTiles[key]);\r\n    }\r\n\r\n    return tiles;\r\n  }\r\n\r\n  get resourceTileArray(): ResourceTile[] {\r\n    const tiles: ResourceTile[] = [];\r\n\r\n    for (const key in this.resourceTiles) {\r\n      tiles.push(this.resourceTiles[key]);\r\n    }\r\n\r\n    return tiles;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessagesService {\n  messages: string[] = [];\n\n  add (message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Resource, ResourceType } from '../../objects/resource';\r\nimport { MessagesService } from '../messages/messages.service';\r\n\r\ndeclare var require: any;\r\nconst baseResources = require('../../../assets/json/resources.json');\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResourcesService {\r\n  public resources: Resource[] = baseResources;\r\n\r\n  constructor(private messagesService: MessagesService) { }\r\n\r\n  public getResource(id: number): Resource {\r\n    return this.resources.find(resource => resource.id === id);\r\n  }\r\n\r\n  public finishResourceAnimation(id: number) {\r\n    const resource = this.getResource(id);\r\n\r\n    resource.amountTravelling--;\r\n\r\n    this.harvestResource(id, 1, true);\r\n  }\r\n\r\n  public harvestResource(id: number, multiplier = 1, forceHarvest = false) {\r\n    const resource = this.getResource(id);\r\n\r\n    if (!forceHarvest && (!resource.harvestable || !this.canHarvest(id, multiplier))) {\r\n      return;\r\n    }\r\n\r\n    for (const resourceConsume of resource.resourceConsumes) {\r\n      this.addResourceAmount(resourceConsume.resourceId, -resourceConsume.cost * multiplier);\r\n    }\r\n\r\n    this.resources.filter(r => r.previousTier === resource.resourceTier && r.resourceType === resource.resourceType)\r\n      .map(r => r.resourceAccessible = true);\r\n\r\n    this.addResourceAmount(resource.id, resource.harvestYield * multiplier);\r\n  }\r\n\r\n  public canHarvest(id: number, multiplier = 1): boolean {\r\n    const resource = this.getResource(id);\r\n\r\n    if (!resource.harvestable || resource.harvesting) {\r\n      return false;\r\n    }\r\n\r\n    for (const resourceConsume of resource.resourceConsumes) {\r\n      if (this.getResource(resourceConsume.resourceId).amount < resourceConsume.cost * multiplier) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public resourcesOfType(resourceType: ResourceType, filterByWorkable: boolean, filterByAccessible: boolean): Resource[] {\r\n    let resources = this.resources.filter(resource => resource.resourceType === resourceType);\r\n\r\n    if (filterByWorkable) {\r\n      resources = resources.filter(resource => resource.worker.workable);\r\n    }\r\n    if (filterByAccessible) {\r\n      resources = resources.filter(resource => resource.resourceAccessible);\r\n    }\r\n\r\n    return resources;\r\n  }\r\n\r\n  public harvestableResources(): Resource[] {\r\n    return this.resources.filter(resource => resource.harvestable);\r\n  }\r\n\r\n  public sellableResources(): Resource[] {\r\n    return this.resources.filter(resource => resource.sellable);\r\n  }\r\n\r\n  public resourceIds(): number[] {\r\n    return this.resources.map(resource => resource.id);\r\n  }\r\n\r\n  public resourceTooltip(id: number, workerCount: number): string {\r\n    const resource = this.getResource(id);\r\n\r\n    if (id === 0) {\r\n      return `${resource.resourceDescription}.`;\r\n    }\r\n\r\n    return `${resource.resourceDescription}. ${resource.harvestYield / resource.harvestMilliseconds * 1000}\r\n     harvested per second; ${resource.workerYield * workerCount} per second from workers.`;\r\n  }\r\n\r\n  public addResourceAmount(id: number, amount: number) {\r\n    this.getResource(id).amount += amount;\r\n  }\r\n\r\n  public canAfford(id: number): boolean {\r\n    return (this.getResource(0).amount >= this.getResource(id).worker.cost);\r\n  }\r\n\r\n  private log(message: string) {\r\n    this.messagesService.add(`ResourcesService: ${message}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatDialog } from '@angular/material';\n\nimport { timer, Observable, Subscription } from 'rxjs';\n\nimport { ResourcesService } from './../resources/resources.service';\nimport { UpgradesService } from './../upgrades/upgrades.service';\nimport { WorkersService } from './../workers/workers.service';\nimport { MapService } from './../map/map.service';\nimport { SaveData, WorkerData, TileData } from '../../objects/savedata';\nimport { SaveDialogComponent } from '../../components/save-dialog/save-dialog.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n  autosaveInterval = 900000;\n\n  autosaveSource: Observable<number>;\n  autosaveSubscribe: Subscription;\n\n  constructor(protected resourcesService: ResourcesService,\n              protected upgradesService: UpgradesService,\n              protected workersService: WorkersService,\n              protected mapService: MapService,\n              protected snackbar: MatSnackBar,\n              public dialog: MatDialog) {\n    this.loadGame();\n  }\n\n  openSaveDialog(saveData?: string) {\n    const dialogRef = this.dialog.open(SaveDialogComponent, {\n      width: '750px',\n      height: '150px',\n      data: saveData === undefined ? {} : {saveData: saveData}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result !== undefined) {\n        if (this.importSave(result)) {\n          this.snackbar.open('Game successfully loaded!', '', {duration: 2000});\n        }\n      }\n    });\n  }\n\n  setAutosave() {\n    if (this.autosaveSubscribe !== undefined) {\n      this.autosaveSubscribe.unsubscribe();\n    }\n\n    if (this.autosaveInterval <= 0) {\n      return;\n    }\n\n    this.autosaveSource = timer(this.autosaveInterval, this.autosaveInterval);\n    this.autosaveSubscribe = this.autosaveSource.subscribe(_ => this.saveGame());\n  }\n\n  saveGame() {\n    const saveData = this.exportSave();\n\n    localStorage.setItem('clickerGameSaveData', saveData);\n\n    this.snackbar.open('Game successfully saved!', '', {duration: 2000});\n  }\n\n  loadGame() {\n    const saveData = localStorage.getItem('clickerGameSaveData');\n\n    if (saveData === null) {\n      return;\n    }\n\n    if (this.importSave(saveData)) {\n      this.snackbar.open('Game successfully loaded!', '', {duration: 2000});\n    }\n  }\n\n  deleteSave() {\n    localStorage.removeItem('clickerGameSaveData');\n\n    this.snackbar.open('Game save deleted.', '', {duration: 2000});\n  }\n\n  exportSave() {\n    const saveData: SaveData = {\n      resources: [],\n      upgrades: [],\n      workers: [],\n      tiles: [],\n      autosaveInterval: this.autosaveInterval\n    };\n\n    for (const resource of this.resourcesService.resources) {\n      saveData.resources.push({\n        id: resource.id,\n        amount: resource.amount,\n        harvestable: resource.harvestable,\n        harvestYield: resource.harvestYield,\n        sellable: resource.sellable,\n        sellsFor: resource.sellsFor,\n        resourceAccessible: resource.resourceAccessible\n      });\n    }\n\n    for (const upgrade of this.upgradesService.upgrades) {\n      saveData.upgrades.push({\n        id: upgrade.id,\n        purchased: upgrade.purchased\n      });\n    }\n\n    for (const worker of this.workersService.workers) {\n      const workerData: WorkerData = {\n        id: worker.id,\n        cost: worker.cost,\n        workerCount: worker.workerCount,\n        workersByResource: []\n      };\n\n      for (const resourceWorker of worker.workersByResource) {\n        workerData.workersByResource.push({\n          resourceId: resourceWorker.resourceId,\n          workable: resourceWorker.workable,\n          workerCount: resourceWorker.workerCount,\n          workerYield: resourceWorker.workerYield\n        });\n      }\n\n      saveData.workers.push(workerData);\n    }\n\n    for (const tile of this.mapService.tiledMap) {\n      if (tile.buildingTileType === undefined) {\n        continue;\n      }\n\n      const tileData: TileData = {\n        id: tile.id,\n        buildingPath: tile.buildingPath,\n        buildingRemovable: tile.buildingRemovable,\n        tileCropDetail: tile.tileCropDetail\n      }\n\n      if (tile.resourceTileType !== undefined) {\n        tileData.resourceTileType = tile.resourceTileType;\n      }\n      if (tile.buildingTileType !== undefined) {\n        tileData.buildingTileType = tile.buildingTileType;\n      }\n\n      saveData.tiles.push(tileData);\n    }\n\n    return btoa(JSON.stringify(saveData));\n  }\n\n  importSave(saveDataString: string): boolean {\n    const backupSave = this.exportSave();\n\n    try {\n      const saveData: SaveData = JSON.parse(atob(saveDataString));\n\n      if (saveData.resources) {\n        for (const resourceData of saveData.resources) {\n          const resource = this.resourcesService.getResource(resourceData.id);\n\n          if (resource === undefined) {\n            continue;\n          }\n\n          resource.amount = resourceData.amount;\n          resource.harvestable = resourceData.harvestable;\n          resource.harvestYield = resourceData.harvestYield;\n          resource.sellable = resourceData.sellable;\n          resource.sellsFor = resourceData.sellsFor;\n          resource.resourceAccessible = resourceData.resourceAccessible;\n        }\n      }\n\n      if (saveData.upgrades) {\n        for (const upgradeData of saveData.upgrades) {\n          const upgrade = this.upgradesService.getUpgrade(upgradeData.id);\n\n          if (upgrade === undefined) {\n            continue;\n          }\n\n          this.upgradesService.applyUpgrade(upgrade);\n          upgrade.purchased = upgradeData.purchased;\n        }\n      }\n\n      if (saveData.workers) {\n        for (const workerData of saveData.workers) {\n          const worker = this.workersService.getWorker(workerData.id);\n\n          worker.cost = workerData.cost;\n          worker.workerCount = workerData.workerCount;\n          worker.freeWorkers = workerData.workerCount;\n\n          for (const resourceWorkerData of workerData.workersByResource) {\n            const resourceWorker = this.workersService.getResourceWorker(resourceWorkerData.resourceId);\n\n            resourceWorker.workable = resourceWorkerData.workable;\n            resourceWorker.workerYield = resourceWorkerData.workerYield;\n            resourceWorker.workerCount = 0;\n\n            resourceWorker.sliderSetting = resourceWorkerData.workerCount;\n\n            this.workersService.updateResourceWorker(resourceWorkerData.resourceId, resourceWorkerData.workerCount);\n          }\n\n          if (worker.freeWorkers < 0) {\n            throw new Error('Invalid worker settings.');\n          }\n        }\n      }\n\n      if (saveData.tiles) {\n        for (const tileData of saveData.tiles) {\n          const tile = this.mapService.tiledMap.find(tile => tile.id === tileData.id);\n\n          if (tile === undefined) {\n            continue;\n          }\n\n          tile.resourceTileType = tileData.resourceTileType;\n          tile.buildingTileType = tileData.buildingTileType;\n\n          tile.buildingPath = tileData.buildingPath;\n          tile.buildingRemovable = tileData.buildingRemovable;\n\n          tile.tileCropDetail = tileData.tileCropDetail;\n        }\n      }\n\n      this.autosaveInterval = saveData.autosaveInterval;\n      this.mapService.calculateResourceConnections();\n\n      return true;\n    } catch (error) {\n      this.snackbar.open(`Error loading save data: ${error}`, '', {duration: 5000});\n      this.importSave(backupSave);\n\n      console.error(error);\n\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Resource, ResourceType } from '../../objects/resource';\nimport { ResourcesService } from '../resources/resources.service';\nimport { MessagesService } from '../messages/messages.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreService {\n\n  constructor(private resourcesService: ResourcesService,\n              private messagesService: MessagesService) { }\n\n  public sellResource(id: number, amount: number) {\n    if (!this.canSellResource(id, amount)) {\n      return;\n    }\n\n    const resource = this.resourcesService.getResource(id);\n\n    if (amount === -1) {\n      amount = resource.amount;\n    }\n\n    this.resourcesService.addResourceAmount(resource.id, -amount);\n    this.resourcesService.addResourceAmount(0, amount * resource.sellsFor);\n  }\n\n  public canSellResource(id: number, amount: number): boolean {\n    const resource = this.resourcesService.getResource(id);\n\n    if (amount === -1) {\n      return resource.sellable && resource.amount > 0;\n    }\n\n    return resource.sellable && resource.amount - amount >= 0;\n  }\n\n  public resourcesOfType(resourceType: ResourceType, filterBySellable: boolean, filterByAccessible: boolean) {\n    let resources = this.resourcesService.resources.filter(resource => resource.resourceType === resourceType);\n\n    if (filterBySellable) {\n      resources = resources.filter(resource => resource.sellable);\n    }\n    if (filterByAccessible) {\n      resources = resources.filter(resource => resource.resourceAccessible);\n    }\n\n    return resources;\n  }\n\n  private log(message: string) {\n    this.messagesService.add(`ResourcesService: ${message}`);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ResourcesService } from './../resources/resources.service';\nimport { UpgradeVariable } from '../../objects/upgrade';\nimport { UpgradesService } from '../upgrades/upgrades.service';\nimport { WorkersService } from './../workers/workers.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TooltipService {\n  constructor(protected resourcesService: ResourcesService,\n              protected upgradesService: UpgradesService,\n              protected workersService: WorkersService) { }\n\n  getResourceTooltip(resourceId: number): string {\n    const resource = this.resourcesService.getResource(resourceId);\n    const worker = this.workersService.getResourceWorker(resourceId);\n\n    let tooltip = `${resource.resourceDescription}`;\n\n    if (resourceId === 0) {\n      return tooltip;\n    }\n\n    let neededUpgrades = this.upgradesService.upgradesOfVariable(UpgradeVariable.Harvestability, false, true, false);\n    neededUpgrades = neededUpgrades.filter(upgrade => upgrade.upgradeEffects.some(ue =>\n      ue.upgradeVariable === UpgradeVariable.Harvestability &&\n      ((ue.resourceType === resource.resourceType && ue.upgradeIsForWholeType && resource.resourceTier <= ue.maxTier) ||\n      ue.resourceId === resourceId)));\n\n    if (neededUpgrades.length) {\n      tooltip += `\\nNeeded Upgrade: ${neededUpgrades[0].name}.`;\n    }\n\n    if (resource.resourceConsumes.length) {\n      tooltip += '\\nResources required:';\n      for (const resourceConsume of resource.resourceConsumes) {\n        tooltip += ` ${this.resourcesService.getResource(resourceConsume.resourceId).name}: ${resourceConsume.cost},`;\n      }\n      tooltip = tooltip.substring(0, tooltip.length - 1);\n      tooltip += '.';\n  }\n\n    tooltip += `\\n${Math.floor(100 * resource.harvestYield / resource.harvestMilliseconds * 1000) / 100} harvested per second;` +\n               ` ${Math.floor(100 * worker.workerYield * worker.workerCount) / 100} per second from workers.`;\n\n     return tooltip;\n  }\n\n  getWorkerTooltip(resourceId: number): string {\n    const resource = this.resourcesService.getResource(resourceId);\n    const resourceWorker = this.workersService.getResourceWorker(resourceId);\n\n    return `${resource.workerVerb} ${Math.floor(resourceWorker.workerYield * 100) / 100} ` +\n      `${resource.workerNoun}${resourceWorker.workerYield === 1 ? '' : 's'} per second.`;\n  }\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Upgrade, UpgradeType, UpgradeVariable } from '../../objects/upgrade';\r\nimport { ResourcesService } from '../resources/resources.service';\r\nimport { WorkersService } from './../workers/workers.service';\r\nimport { MessagesService } from '../messages/messages.service';\r\n\r\ndeclare var require: any;\r\nconst baseUpgrades = require('../../../assets/json/upgrades.json');\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UpgradesService {\r\n  public upgrades: Upgrade[] = baseUpgrades;\r\n\r\n  constructor(private resourcesService: ResourcesService,\r\n              private workersService: WorkersService,\r\n              private messagesService: MessagesService) { }\r\n\r\n  public getUpgrade(id: number): Upgrade {\r\n    return this.upgrades.find(upgrade => upgrade.id === id);\r\n  }\r\n\r\n  public purchaseUpgrade(id: number) {\r\n    const upgrade = this.getUpgrade(id);\r\n\r\n    if (upgrade.purchased || !this.canAffordUpgrade(id)) {\r\n      return;\r\n    }\r\n\r\n    for (const resourceCost of upgrade.resourceCosts) {\r\n      this.resourcesService.addResourceAmount(resourceCost.resourceId, -resourceCost.resourceCost);\r\n    }\r\n\r\n    this.applyUpgrade(upgrade);\r\n\r\n    upgrade.purchased = true;\r\n  }\r\n\r\n  public applyUpgrade(upgrade: Upgrade) {\r\n    for (const upgradeEffect of upgrade.upgradeEffects) {\r\n      if (upgradeEffect.upgradeVariable === UpgradeVariable.WorkerCost) {\r\n        this.workersService.getWorker(upgradeEffect.resourceType).cost *= upgradeEffect.upgradeFactor;\r\n        continue;\r\n      }\r\n\r\n      let resourcesToUpgrade = [this.resourcesService.getResource(upgradeEffect.resourceId)];\r\n      let workersToUpgrade = [this.workersService.getResourceWorker(upgradeEffect.resourceId)];\r\n\r\n      if (upgradeEffect.upgradeIsForWholeType) {\r\n        resourcesToUpgrade = this.resourcesService.resourcesOfType(upgradeEffect.resourceType, false, false);\r\n        workersToUpgrade = this.workersService.getWorker(upgradeEffect.resourceType).workersByResource;\r\n\r\n        if (upgradeEffect.maxTier >= 0) {\r\n          resourcesToUpgrade = resourcesToUpgrade.filter(resource => resource.resourceTier <= upgradeEffect.maxTier);\r\n          workersToUpgrade = workersToUpgrade.filter(worker =>\r\n            this.resourcesService.getResource(worker.resourceId).resourceTier <= upgradeEffect.maxTier);\r\n        }\r\n      }\r\n\r\n      for (const resourceToUpgrade of resourcesToUpgrade) {\r\n        switch (upgradeEffect.upgradeVariable) {\r\n          case UpgradeVariable.Harvestability: {\r\n            resourceToUpgrade.harvestable = !!upgradeEffect.upgradeFactor;\r\n            break;\r\n          }\r\n          case UpgradeVariable.HarvestYield: {\r\n            resourceToUpgrade.harvestYield *= upgradeEffect.upgradeFactor;\r\n            break;\r\n          }\r\n          case UpgradeVariable.HarvestMilliseconds: {\r\n            resourceToUpgrade.harvestMilliseconds *= upgradeEffect.upgradeFactor;\r\n            break;\r\n          }\r\n          default: {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (const workerToUpgrade of workersToUpgrade) {\r\n        switch(upgradeEffect.upgradeVariable) {\r\n          case UpgradeVariable.Workable: {\r\n            workerToUpgrade.workable = !!upgradeEffect.upgradeFactor;\r\n            break;\r\n          }\r\n          case UpgradeVariable.WorkerYield: {\r\n            workerToUpgrade.workerYield *= upgradeEffect.upgradeFactor;\r\n            break;\r\n          }\r\n          default: {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public canAffordUpgrade(id: number): boolean {\r\n    for (const resourceCost of this.getUpgrade(id).resourceCosts) {\r\n      if (this.resourcesService.getResource(resourceCost.resourceId).amount < resourceCost.resourceCost) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public getUpgrades(filterByPurchased: boolean, filterByUnpurchased: boolean, filterByAccessible: boolean): Upgrade[] {\r\n    let upgrades = this.upgrades;\r\n\r\n    if (filterByPurchased) {\r\n      upgrades = upgrades.filter(upgrade => upgrade.purchased);\r\n    }\r\n    if (filterByUnpurchased) {\r\n      upgrades = upgrades.filter(upgrade => !upgrade.purchased);\r\n    }\r\n    if (filterByAccessible) {\r\n      upgrades = upgrades.filter(upgrade => upgrade.resourceCosts.every(\r\n      rc => this.resourcesService.getResource(rc.resourceId).resourceAccessible));\r\n    }\r\n\r\n    return upgrades;\r\n    }\r\n\r\n  public upgradesOfType(upgradeType: UpgradeType,\r\n                        filterByPurchased: boolean, filterByUnpurchased: boolean, filterByAccessible: boolean): Upgrade[] {\r\n    let upgrades = this.upgrades.filter(upgrade => upgrade.upgradeType === upgradeType);\r\n\r\n    if (filterByPurchased) {\r\n      upgrades = upgrades.filter(upgrade => upgrade.purchased);\r\n    }\r\n    if (filterByUnpurchased) {\r\n      upgrades = upgrades.filter(upgrade => !upgrade.purchased);\r\n    }\r\n    if (filterByAccessible) {\r\n      upgrades = upgrades.filter(upgrade => upgrade.resourceCosts.every(\r\n        rc => this.resourcesService.getResource(rc.resourceId).resourceAccessible));\r\n    }\r\n\r\n    return upgrades;\r\n  }\r\n\r\n  public upgradesOfVariable(upgradeVariable: UpgradeVariable,\r\n                            filterByPurchased: boolean, filterByUnpurchased: boolean, filterByAccessible: boolean): Upgrade[] {\r\n    let upgrades = this.upgrades.filter(upgrade => upgrade.upgradeEffects.some(ue => ue.upgradeVariable === upgradeVariable));\r\n\r\n    if (filterByPurchased) {\r\n      upgrades = upgrades.filter(upgrade => upgrade.purchased);\r\n    }\r\n    if (filterByUnpurchased) {\r\n      upgrades = upgrades.filter(upgrade => !upgrade.purchased);\r\n    }\r\n    if (filterByAccessible) {\r\n      upgrades = upgrades.filter(upgrade => upgrade.resourceCosts.every(\r\n        rc => this.resourcesService.getResource(rc.resourceId).resourceAccessible));\r\n    }\r\n\r\n    return upgrades;\r\n  }\r\n\r\n  public getUpgradeTypeString(id: number): string {\r\n    return UpgradeType[this.getUpgrade(id).upgradeType];\r\n  }\r\n\r\n  public getUpgradeVariableString(upgradeId: number, effectId: number): string {\r\n    return UpgradeVariable[this.getUpgrade(upgradeId).upgradeEffects[effectId].upgradeVariable];\r\n  }\r\n\r\n  private log(message: string) {\r\n    this.messagesService.add(`UpgradesService: ${message}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\nimport { ResourceType } from '../../objects/resource';\nimport { ResourcesService } from '../resources/resources.service';\nimport { Worker, ResourceWorker } from '../../objects/worker';\nimport { MessagesService } from '../messages/messages.service';\n\ndeclare var require: any;\nconst baseWorkers = require('../../../assets/json/workers.json');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkersService {\n  public workers: Worker[] = baseWorkers;\n\n  constructor(protected resourcesService: ResourcesService,\n              protected messagesService: MessagesService) { }\n\n  public getWorkers(filterByAccessible: boolean, filterByWorkable: boolean, filterByHarvestable: boolean) {\n    let workers = this.workers;\n\n    if (filterByAccessible) {\n      workers = this.workers.filter(worker => worker.workersByResource.some(\n        rw => this.resourcesService.getResource(rw.resourceId).resourceAccessible));\n    }\n\n    if (filterByWorkable) {\n      workers = this.workers.filter(worker => worker.workersByResource.some(rw => rw.workable));\n    }\n\n    if (filterByHarvestable) {\n      workers = this.workers.filter(worker => worker.workersByResource.some(\n        rw => this.resourcesService.getResource(rw.resourceId).harvestable));\n    }\n\n    return workers;\n  }\n\n  public getWorker(idOrResourceType: number | string | ResourceType) {\n    return typeof idOrResourceType === 'number' ?\n      this.workers[idOrResourceType] :\n      this.workers.find(worker => worker.resourceType === idOrResourceType);\n  }\n\n  public getResourceWorker(resourceId: number): ResourceWorker {\n    const resourceType = this.resourcesService.getResource(resourceId).resourceType;\n    const worker = this.getWorker(resourceType);\n\n    if (worker === undefined) {\n      return null;\n    }\n\n    return worker.workersByResource.find(rw => rw.resourceId === resourceId);\n  }\n\n  canAfford(id: number): boolean {\n    const worker = this.getWorker(id);\n\n    return worker.cost <= this.resourcesService.getResource(0).amount;\n  }\n\n  processWorkers() {\n    for (const worker of this.workers) {\n      for (const resourceWorker of worker.workersByResource) {\n        if (resourceWorker.workerCount === 0) {\n          continue;\n        }\n\n        this.resourcesService.harvestResource(resourceWorker.resourceId, resourceWorker.workerYield * resourceWorker.workerCount);\n      }\n    }\n  }\n\n  updateResourceWorker(id: number, newResourceWorkerCount: number) {\n    const resource = this.resourcesService.getResource(id);\n    const worker = this.getWorker(resource.resourceType);\n    const resourceWorker = worker.workersByResource.find(ws => ws.resourceId === resource.id);\n\n    if (!resourceWorker.sliderSettingValid) {\n      newResourceWorkerCount = worker.freeWorkers + resourceWorker.workerCount;\n      resourceWorker.sliderSetting = newResourceWorkerCount;\n    }\n\n    const newFreeWorkers = worker.freeWorkers + resourceWorker.workerCount - newResourceWorkerCount;\n\n    worker.freeWorkers = newFreeWorkers;\n    resourceWorker.workerCount = newResourceWorkerCount;\n  }\n\n  hireWorker(id: number) {\n    if (!this.canAfford(id)) {\n      return;\n    }\n\n    const worker = this.getWorker(id);\n\n    this.resourcesService.addResourceAmount(0, -worker.cost);\n\n    worker.cost *= 1.01;\n    worker.workerCount++;\n    worker.freeWorkers++;\n  }\n\n  private log(message: string) {\n    this.messagesService.add(`WorkersService: ${message}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}